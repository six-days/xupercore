<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="2372px" preserveAspectRatio="none" style="width:16792px;height:2372px;background:#FFFFFF;" version="1.1" viewBox="0 0 16792 2372" width="16792px" zoomAndPan="magnify"><defs/><g><!--MD5=[83521f5f8aaf465d9ba09e4f5046889d]
cluster bridge--><g id="cluster_bridge"><path d="M7810.5,129 L7857.5,129 A3.75,3.75 0 0 1 7860,131.5 L7867,151.4883 L14082.5,151.4883 A2.5,2.5 0 0 1 14085,153.9883 L14085,1075 A2.5,2.5 0 0 1 14082.5,1077.5 L7810.5,1077.5 A2.5,2.5 0 0 1 7808,1075 L7808,131.5 A2.5,2.5 0 0 1 7810.5,129 " style="stroke:#000000;stroke-width:1.5;fill:none;"/><line style="stroke:#000000;stroke-width:1.5;fill:none;" x1="7808" x2="7867" y1="151.4883" y2="151.4883"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="46" x="7812" y="144.5352">bridge</text></g><!--MD5=[584e892e05c648a80d3feed257747445]
cluster pbrpc--><g id="cluster_pbrpc"><path d="M10298.5,6 L10339.5,6 A3.75,3.75 0 0 1 10342,8.5 L10349,28.4883 L10445.5,28.4883 A2.5,2.5 0 0 1 10448,30.9883 L10448,102.5 A2.5,2.5 0 0 1 10445.5,105 L10298.5,105 A2.5,2.5 0 0 1 10296,102.5 L10296,8.5 A2.5,2.5 0 0 1 10298.5,6 " style="stroke:#000000;stroke-width:1.5;fill:none;"/><line style="stroke:#000000;stroke-width:1.5;fill:none;" x1="10296" x2="10349" y1="28.4883" y2="28.4883"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="40" x="10300" y="21.5352">pbrpc</text></g><!--MD5=[9d3b3d891db5d00c2140c2d0af48851f]
cluster contract--><g id="cluster_contract"><path d="M1424.5,772.5 L1483.5,772.5 A3.75,3.75 0 0 1 1486,775 L1493,794.9883 L7781.5,794.9883 A2.5,2.5 0 0 1 7784,797.4883 L7784,2058.5 A2.5,2.5 0 0 1 7781.5,2061 L1424.5,2061 A2.5,2.5 0 0 1 1422,2058.5 L1422,775 A2.5,2.5 0 0 1 1424.5,772.5 " style="stroke:#000000;stroke-width:1.5;fill:none;"/><line style="stroke:#000000;stroke-width:1.5;fill:none;" x1="1422" x2="1493" y1="794.9883" y2="794.9883"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="58" x="1426" y="788.0352">contract</text></g><!--MD5=[f04600f0575a07dfe97362a654bdaa04]
cluster kernel--><g id="cluster_kernel"><path d="M6957.5,2085 L7003.5,2085 A3.75,3.75 0 0 1 7006,2087.5 L7013,2107.4883 L8719.5,2107.4883 A2.5,2.5 0 0 1 8722,2109.9883 L8722,2362.5 A2.5,2.5 0 0 1 8719.5,2365 L6957.5,2365 A2.5,2.5 0 0 1 6955,2362.5 L6955,2087.5 A2.5,2.5 0 0 1 6957.5,2085 " style="stroke:#000000;stroke-width:1.5;fill:none;"/><line style="stroke:#000000;stroke-width:1.5;fill:none;" x1="6955" x2="7013" y1="2107.4883" y2="2107.4883"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="45" x="6959" y="2100.5352">kernel</text></g><!--MD5=[10ad930ee69173cd9d3aa754f8a8a48b]
cluster manager--><g id="cluster_manager"><path d="M8.5,1251.5 L71.5,1251.5 A3.75,3.75 0 0 1 74,1254 L81,1273.9883 L1395.5,1273.9883 A2.5,2.5 0 0 1 1398,1276.4883 L1398,1496 A2.5,2.5 0 0 1 1395.5,1498.5 L8.5,1498.5 A2.5,2.5 0 0 1 6,1496 L6,1254 A2.5,2.5 0 0 1 8.5,1251.5 " style="stroke:#000000;stroke-width:1.5;fill:none;"/><line style="stroke:#000000;stroke-width:1.5;fill:none;" x1="6" x2="81" y1="1273.9883" y2="1273.9883"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="62" x="10" y="1267.0352">manager</text></g><!--MD5=[d485ce6a0952c2fa30fb1326d94e8db1]
cluster native--><g id="cluster_native"><path d="M14247.5,649 L14292.5,649 A3.75,3.75 0 0 1 14295,651.5 L14302,671.4883 L16554.5,671.4883 A2.5,2.5 0 0 1 16557,673.9883 L16557,1529 A2.5,2.5 0 0 1 16554.5,1531.5 L14247.5,1531.5 A2.5,2.5 0 0 1 14245,1529 L14245,651.5 A2.5,2.5 0 0 1 14247.5,649 " style="stroke:#000000;stroke-width:1.5;fill:none;"/><line style="stroke:#000000;stroke-width:1.5;fill:none;" x1="14245" x2="14302" y1="671.4883" y2="671.4883"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="44" x="14249" y="664.5352">native</text></g><!--MD5=[13d7f8bd1b49e104d24825357c711ce4]
cluster log15--><g id="cluster_log15"><path d="M14111.5,871.5 L14153.5,871.5 A3.75,3.75 0 0 1 14156,874 L14163,893.9883 L14218.5,893.9883 A2.5,2.5 0 0 1 14221,896.4883 L14221,968 A2.5,2.5 0 0 1 14218.5,970.5 L14111.5,970.5 A2.5,2.5 0 0 1 14109,968 L14109,874 A2.5,2.5 0 0 1 14111.5,871.5 " style="stroke:#000000;stroke-width:1.5;fill:none;"/><line style="stroke:#000000;stroke-width:1.5;fill:none;" x1="14109" x2="14163" y1="893.9883" y2="893.9883"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="41" x="14113" y="887.0352">log15</text></g><!--MD5=[abe2395c489d8237387c1bbe51b1ca1d]
cluster xvm--><g id="cluster_xvm"><path d="M9622.5,1202 L9653.5,1202 A3.75,3.75 0 0 1 9656,1204.5 L9663,1224.4883 L14093.5,1224.4883 A2.5,2.5 0 0 1 14096,1226.9883 L14096,1818.5 A2.5,2.5 0 0 1 14093.5,1821 L9622.5,1821 A2.5,2.5 0 0 1 9620,1818.5 L9620,1204.5 A2.5,2.5 0 0 1 9622.5,1202 " style="stroke:#000000;stroke-width:1.5;fill:none;"/><line style="stroke:#000000;stroke-width:1.5;fill:none;" x1="9620" x2="9663" y1="1224.4883" y2="1224.4883"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="30" x="9624" y="1217.5352">xvm</text></g><!--MD5=[857233cdc7018b1e8695fe78ce49561f]
cluster __builtin__--><g id="cluster___builtin__"><path d="M11860.5,6 L11909.5,6 A3.75,3.75 0 0 1 11912,8.5 L11919,28.4883 L11959.5,28.4883 A2.5,2.5 0 0 1 11962,30.9883 L11962,102.5 A2.5,2.5 0 0 1 11959.5,105 L11860.5,105 A2.5,2.5 0 0 1 11858,102.5 L11858,8.5 A2.5,2.5 0 0 1 11860.5,6 " style="stroke:#000000;stroke-width:1.5;fill:none;"/><line style="stroke:#000000;stroke-width:1.5;fill:none;" x1="11858" x2="11919" y1="28.4883" y2="28.4883"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" text-decoration="underline" textLength="48" x="11862" y="21.5352">builtin</text></g><!--MD5=[b5806378812649287836128427c545fa]
class bridge.Context--><g id="elem_bridge.Context"><rect codeLine="3" fill="#F1F1F1" height="460.207" id="bridge.Context" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="253" x="12531.5" y="164"/><ellipse cx="12626.25" cy="180" fill="#7FFFD4" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M12625.9834,181.063 Q12624.1323,180.3574 12623.4766,179.5813 Q12622.8208,178.8052 12622.8208,177.4937 Q12622.8208,175.8086 12623.8999,174.8457 Q12624.979,173.8828 12626.8633,173.8828 Q12627.7183,173.8828 12628.5732,174.0779 Q12629.4282,174.2729 12630.2666,174.6548 L12630.2666,177.0454 Q12629.478,176.4893 12628.6646,176.1987 Q12627.8511,175.9082 12627.0542,175.9082 Q12626.166,175.9082 12625.6929,176.2651 Q12625.2197,176.6221 12625.2197,177.2861 Q12625.2197,177.8008 12625.5642,178.137 Q12625.9087,178.4731 12627.0044,178.8799 L12628.0586,179.2783 Q12629.5527,179.8262 12630.2583,180.731 Q12630.9639,181.6357 12630.9639,183.0137 Q12630.9639,184.8896 12629.8557,185.8152 Q12628.7476,186.7407 12626.5063,186.7407 Q12625.585,186.7407 12624.6594,186.5208 Q12623.7339,186.3008 12622.8706,185.8691 L12622.8706,183.3374 Q12623.8501,184.0347 12624.7673,184.375 Q12625.6846,184.7153 12626.5811,184.7153 Q12627.4858,184.7153 12627.9839,184.3044 Q12628.4819,183.8936 12628.4819,183.1548 Q12628.4819,182.5986 12628.1499,182.1794 Q12627.8179,181.7603 12627.187,181.5195 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="55" x="12646.75" y="185.291">Context</text><line style="stroke:#181818;stroke-width:0.5;" x1="12532.5" x2="12783.5" y1="196" y2="196"/><ellipse cx="12542.5" cy="207" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="54" x="12551.5" y="213.5352">ID int64</text><ellipse cx="12542.5" cy="223.4883" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="95" x="12551.5" y="230.0234">Module string</text><ellipse cx="12542.5" cy="239.9766" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="142" x="12551.5" y="246.5117">ContractName string</text><ellipse cx="12542.5" cy="256.4648" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="207" x="12551.5" y="263">ResourceLimits contract.Limits</text><ellipse cx="12542.5" cy="272.9531" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="193" x="12551.5" y="279.4883">State contract.StateSandbox</text><ellipse cx="12542.5" cy="289.4414" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="32" x="12551.5" y="295.9766">Args</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="12587.5" y="295.9766">map</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="89" x="12617.5" y="295.9766">[string][]byte</text><ellipse cx="12542.5" cy="305.9297" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="96" x="12551.5" y="312.4648">Method string</text><ellipse cx="12542.5" cy="322.418" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="12551.5" y="328.9531">Initiator string</text><ellipse cx="12542.5" cy="338.9063" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="84" x="12551.5" y="345.4414">Caller string</text><ellipse cx="12542.5" cy="355.3945" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="140" x="12551.5" y="361.9297">AuthRequire []string</text><ellipse cx="12542.5" cy="371.8828" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="120" x="12551.5" y="378.418">CanInitialize bool</text><ellipse cx="12542.5" cy="388.3711" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="170" x="12551.5" y="394.9063">Core contract.ChainCore</text><ellipse cx="12542.5" cy="404.8594" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="157" x="12551.5" y="411.3945">TransferAmount string</text><ellipse cx="12542.5" cy="421.3477" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="118" x="12551.5" y="427.8828">Instance Instance</text><ellipse cx="12542.5" cy="437.8359" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="133" x="12551.5" y="444.3711">Logger logs.Logger</text><ellipse cx="12542.5" cy="454.3242" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="227" x="12551.5" y="460.8594">SubResourceUsed contract.Limits</text><ellipse cx="12542.5" cy="470.8125" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="12551.5" y="477.3477">ContractSet</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="12635.5" y="477.3477">map</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="81" x="12665.5" y="477.3477">[string]bool</text><ellipse cx="12542.5" cy="487.3008" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="210" x="12551.5" y="493.8359">Events []*protos.ContractEvent</text><ellipse cx="12542.5" cy="503.7891" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="147" x="12551.5" y="510.3242">Output *pb.Response</text><ellipse cx="12542.5" cy="520.2773" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="147" x="12551.5" y="526.8125">ReadFromCache bool</text><line style="stroke:#181818;stroke-width:0.5;" x1="12532.5" x2="12783.5" y1="533.7656" y2="533.7656"/><ellipse cx="12542.5" cy="544.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="113" x="12551.5" y="551.3008">DiskUsed() int64</text><ellipse cx="12542.5" cy="561.2539" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="156" x="12551.5" y="567.7891">ExceedDiskLimit() bool</text><ellipse cx="12542.5" cy="577.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="211" x="12551.5" y="584.2773">ResourceUsed() contract.Limits</text><ellipse cx="12542.5" cy="594.2305" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="131" x="12551.5" y="600.7656">GetInitiator() string</text><ellipse cx="12542.5" cy="610.7188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="173" x="12551.5" y="617.2539">GetAuthRequire() []string</text></g><!--MD5=[be1032d7d25c1410d8330fb64311949f]
class bridge.ContextManager--><g id="elem_bridge.ContextManager"><rect codeLine="32" fill="#F1F1F1" height="146.9297" id="bridge.ContextManager" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="259" x="12819.5" y="320.5"/><ellipse cx="12887.25" cy="336.5" fill="#7FFFD4" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M12886.9834,337.563 Q12885.1323,336.8574 12884.4766,336.0813 Q12883.8208,335.3052 12883.8208,333.9937 Q12883.8208,332.3086 12884.8999,331.3457 Q12885.979,330.3828 12887.8633,330.3828 Q12888.7183,330.3828 12889.5732,330.5779 Q12890.4282,330.7729 12891.2666,331.1548 L12891.2666,333.5454 Q12890.478,332.9893 12889.6646,332.6987 Q12888.8511,332.4082 12888.0542,332.4082 Q12887.166,332.4082 12886.6929,332.7651 Q12886.2197,333.1221 12886.2197,333.7861 Q12886.2197,334.3008 12886.5642,334.637 Q12886.9087,334.9731 12888.0044,335.3799 L12889.0586,335.7783 Q12890.5527,336.3262 12891.2583,337.231 Q12891.9639,338.1357 12891.9639,339.5137 Q12891.9639,341.3896 12890.8557,342.3152 Q12889.7476,343.2407 12887.5063,343.2407 Q12886.585,343.2407 12885.6594,343.0208 Q12884.7339,342.8008 12883.8706,342.3691 L12883.8706,339.8374 Q12884.8501,340.5347 12885.7673,340.875 Q12886.6846,341.2153 12887.5811,341.2153 Q12888.4858,341.2153 12888.9839,340.8044 Q12889.4819,340.3936 12889.4819,339.6548 Q12889.4819,339.0986 12889.1499,338.6794 Q12888.8179,338.2603 12888.187,338.0195 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="115" x="12907.75" y="341.791">ContextManager</text><line style="stroke:#181818;stroke-width:0.5;" x1="12820.5" x2="13077.5" y1="352.5" y2="352.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="12827.5" y="360.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="130" x="12839.5" y="370.0352">ctxlock sync.Mutex</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="12827.5" y="376.9883"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="74" x="12839.5" y="386.5234">ctxid int64</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="12827.5" y="393.4766"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="28" x="12839.5" y="403.0117">ctxs</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="12871.5" y="403.0117">map</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="108" x="12901.5" y="403.0117">[int64]*Context</text><line style="stroke:#181818;stroke-width:0.5;" x1="12820.5" x2="13077.5" y1="409.9648" y2="409.9648"/><ellipse cx="12830.5" cy="420.9648" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="233" x="12839.5" y="427.5">Context(id int64) (*Context, bool)</text><ellipse cx="12830.5" cy="437.4531" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="167" x="12839.5" y="443.9883">MakeContext() *Context</text><ellipse cx="12830.5" cy="453.9414" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="204" x="12839.5" y="460.4766">DestroyContext(ctx *Context)</text></g><!--MD5=[2982f8c30063613368c6071fb11c0d9d]
class bridge.ContractCodeProvider--><g id="elem_bridge.ContractCodeProvider"><rect codeLine="42" fill="#F1F1F1" height="130.4414" id="bridge.ContractCodeProvider" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="489" x="12007.5" y="329"/><ellipse cx="12171.75" cy="345" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M12168.1777,341.2651 L12168.1777,339.1069 L12175.5571,339.1069 L12175.5571,341.2651 L12173.0918,341.2651 L12173.0918,349.3418 L12175.5571,349.3418 L12175.5571,351.5 L12168.1777,351.5 L12168.1777,349.3418 L12170.6431,349.3418 L12170.6431,341.2651 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="152" x="12192.25" y="350.291">ContractCodeProvider</text><line style="stroke:#181818;stroke-width:0.5;" x1="12008.5" x2="12495.5" y1="361" y2="361"/><line style="stroke:#181818;stroke-width:0.5;" x1="12008.5" x2="12495.5" y1="369" y2="369"/><ellipse cx="12018.5" cy="380" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="463" x="12027.5" y="386.5352">GetContractCodeDesc(name string) (*protos.WasmCodeDesc, error)</text><ellipse cx="12018.5" cy="396.4883" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="306" x="12027.5" y="403.0234">GetContractCode(name string) ([]byte, error)</text><ellipse cx="12018.5" cy="412.9766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="293" x="12027.5" y="419.5117">GetContractAbi(name string) ([]byte, error)</text><ellipse cx="12018.5" cy="429.4648" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="384" x="12027.5" y="436">GetContractCodeFromCache(name string) ([]byte, error)</text><ellipse cx="12018.5" cy="445.9531" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="371" x="12027.5" y="452.4883">GetContractAbiFromCache(name string) ([]byte, error)</text></g><!--MD5=[bfc341d5ebcec4935b592afae370fb8c]
class bridge.ContractError--><g id="elem_bridge.ContractError"><rect codeLine="50" fill="#F1F1F1" height="97.4648" id="bridge.ContractError" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="129" x="13113.5" y="345.5"/><ellipse cx="13129.85" cy="361.5" fill="#7FFFD4" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M13129.5834,362.563 Q13127.7323,361.8574 13127.0766,361.0813 Q13126.4208,360.3052 13126.4208,358.9937 Q13126.4208,357.3086 13127.4999,356.3457 Q13128.579,355.3828 13130.4633,355.3828 Q13131.3183,355.3828 13132.1732,355.5779 Q13133.0282,355.7729 13133.8666,356.1548 L13133.8666,358.5454 Q13133.078,357.9893 13132.2646,357.6987 Q13131.4511,357.4082 13130.6542,357.4082 Q13129.766,357.4082 13129.2929,357.7651 Q13128.8197,358.1221 13128.8197,358.7861 Q13128.8197,359.3008 13129.1642,359.637 Q13129.5087,359.9731 13130.6044,360.3799 L13131.6586,360.7783 Q13133.1527,361.3262 13133.8583,362.231 Q13134.5639,363.1357 13134.5639,364.5137 Q13134.5639,366.3896 13133.4557,367.3152 Q13132.3476,368.2407 13130.1063,368.2407 Q13129.185,368.2407 13128.2594,368.0208 Q13127.3339,367.8008 13126.4706,367.3691 L13126.4706,364.8374 Q13127.4501,365.5347 13128.3673,365.875 Q13129.2846,366.2153 13130.1811,366.2153 Q13131.0858,366.2153 13131.5839,365.8044 Q13132.0819,365.3936 13132.0819,364.6548 Q13132.0819,364.0986 13131.7499,363.6794 Q13131.4179,363.2603 13130.787,363.0195 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="94" x="13144.15" y="366.791">ContractError</text><line style="stroke:#181818;stroke-width:0.5;" x1="13114.5" x2="13241.5" y1="377.5" y2="377.5"/><ellipse cx="13124.5" cy="388.5" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="64" x="13133.5" y="395.0352">Status int</text><ellipse cx="13124.5" cy="404.9883" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="103" x="13133.5" y="411.5234">Message string</text><line style="stroke:#181818;stroke-width:0.5;" x1="13114.5" x2="13241.5" y1="418.4766" y2="418.4766"/><ellipse cx="13124.5" cy="429.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="89" x="13133.5" y="436.0117">Error() string</text></g><!--MD5=[cab9811f1dd96f95f032ae47c0dfce79]
class bridge.Instance--><g id="elem_bridge.Instance"><rect codeLine="57" fill="#F1F1F1" height="113.9531" id="bridge.Instance" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="237" x="13277.5" y="337"/><ellipse cx="13363.25" cy="353" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M13359.6777,349.2651 L13359.6777,347.1069 L13367.0571,347.1069 L13367.0571,349.2651 L13364.5918,349.2651 L13364.5918,357.3418 L13367.0571,357.3418 L13367.0571,359.5 L13359.6777,359.5 L13359.6777,357.3418 L13362.1431,357.3418 L13362.1431,349.2651 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="57" x="13383.75" y="358.291">Instance</text><line style="stroke:#181818;stroke-width:0.5;" x1="13278.5" x2="13513.5" y1="369" y2="369"/><line style="stroke:#181818;stroke-width:0.5;" x1="13278.5" x2="13513.5" y1="377" y2="377"/><ellipse cx="13288.5" cy="388" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="81" x="13297.5" y="394.5352">Exec() error</text><ellipse cx="13288.5" cy="404.4883" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="211" x="13297.5" y="411.0234">ResourceUsed() contract.Limits</text><ellipse cx="13288.5" cy="420.9766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="62" x="13297.5" y="427.5117">Release()</text><ellipse cx="13288.5" cy="437.4648" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="122" x="13297.5" y="444">Abort(msg string)</text></g><!--MD5=[aa236f399b74305f92ae84a92b0ca159]
class bridge.InstanceCreator--><g id="elem_bridge.InstanceCreator"><rect codeLine="64" fill="#F1F1F1" height="80.9766" id="bridge.InstanceCreator" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="519" x="13549.5" y="353.5"/><ellipse cx="13750.25" cy="369.5" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M13746.6777,365.7651 L13746.6777,363.6069 L13754.0571,363.6069 L13754.0571,365.7651 L13751.5918,365.7651 L13751.5918,373.8418 L13754.0571,373.8418 L13754.0571,376 L13746.6777,376 L13746.6777,373.8418 L13749.1431,373.8418 L13749.1431,365.7651 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="109" x="13770.75" y="374.791">InstanceCreator</text><line style="stroke:#181818;stroke-width:0.5;" x1="13550.5" x2="14067.5" y1="385.5" y2="385.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="13550.5" x2="14067.5" y1="393.5" y2="393.5"/><ellipse cx="13560.5" cy="404.5" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="493" x="13569.5" y="411.0352">CreateInstance(ctx *Context, cp ContractCodeProvider) (Instance, error)</text><ellipse cx="13560.5" cy="420.9883" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="188" x="13569.5" y="427.5234">RemoveCache(name string)</text></g><!--MD5=[900fc1f578998418c838d5372f652dce]
class bridge.InstanceCreatorConfig--><g id="elem_bridge.InstanceCreatorConfig"><rect codeLine="69" fill="#F1F1F1" height="97.4648" id="bridge.InstanceCreatorConfig" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="223" x="12290.5" y="882"/><ellipse cx="12321.7" cy="898" fill="#7FFFD4" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M12321.4334,899.063 Q12319.5823,898.3574 12318.9266,897.5813 Q12318.2708,896.8052 12318.2708,895.4937 Q12318.2708,893.8086 12319.3499,892.8457 Q12320.429,891.8828 12322.3133,891.8828 Q12323.1683,891.8828 12324.0232,892.0779 Q12324.8782,892.2729 12325.7166,892.6548 L12325.7166,895.0454 Q12324.928,894.4893 12324.1146,894.1987 Q12323.3011,893.9082 12322.5042,893.9082 Q12321.616,893.9082 12321.1429,894.2651 Q12320.6697,894.6221 12320.6697,895.2861 Q12320.6697,895.8008 12321.0142,896.137 Q12321.3587,896.4731 12322.4544,896.8799 L12323.5086,897.2783 Q12325.0027,897.8262 12325.7083,898.731 Q12326.4139,899.6357 12326.4139,901.0137 Q12326.4139,902.8896 12325.3057,903.8152 Q12324.1976,904.7407 12321.9563,904.7407 Q12321.035,904.7407 12320.1094,904.5208 Q12319.1839,904.3008 12318.3206,903.8691 L12318.3206,901.3374 Q12319.3001,902.0347 12320.2173,902.375 Q12321.1346,902.7153 12322.0311,902.7153 Q12322.9358,902.7153 12323.4339,902.3044 Q12323.9319,901.8936 12323.9319,901.1548 Q12323.9319,900.5986 12323.5999,900.1794 Q12323.2679,899.7603 12322.637,899.5195 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="155" x="12339.3" y="903.291">InstanceCreatorConfig</text><line style="stroke:#181818;stroke-width:0.5;" x1="12291.5" x2="12512.5" y1="914" y2="914"/><ellipse cx="12301.5" cy="925" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="94" x="12310.5" y="931.5352">Basedir string</text><ellipse cx="12301.5" cy="941.4883" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="197" x="12310.5" y="948.0234">SyscallService *SyscallService</text><ellipse cx="12301.5" cy="957.9766" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="138" x="12310.5" y="964.5117">VMConfig VMConfig</text><line style="stroke:#181818;stroke-width:0.5;" x1="12291.5" x2="12512.5" y1="971.4648" y2="971.4648"/></g><!--MD5=[bf86cb1eeea53740c25e71dc81478ca4]
class bridge.SyscallService--><g id="elem_bridge.SyscallService"><rect codeLine="75" fill="#F1F1F1" height="344.7891" id="bridge.SyscallService" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="883" x="9930.5" y="221.5"/><ellipse cx="10321.25" cy="237.5" fill="#7FFFD4" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M10320.9834,238.563 Q10319.1323,237.8574 10318.4766,237.0813 Q10317.8208,236.3052 10317.8208,234.9937 Q10317.8208,233.3086 10318.8999,232.3457 Q10319.979,231.3828 10321.8633,231.3828 Q10322.7183,231.3828 10323.5732,231.5779 Q10324.4282,231.7729 10325.2666,232.1548 L10325.2666,234.5454 Q10324.478,233.9893 10323.6646,233.6987 Q10322.8511,233.4082 10322.0542,233.4082 Q10321.166,233.4082 10320.6929,233.7651 Q10320.2197,234.1221 10320.2197,234.7861 Q10320.2197,235.3008 10320.5642,235.637 Q10320.9087,235.9731 10322.0044,236.3799 L10323.0586,236.7783 Q10324.5527,237.3262 10325.2583,238.231 Q10325.9639,239.1357 10325.9639,240.5137 Q10325.9639,242.3896 10324.8557,243.3152 Q10323.7476,244.2407 10321.5063,244.2407 Q10320.585,244.2407 10319.6594,244.0208 Q10318.7339,243.8008 10317.8706,243.3691 L10317.8706,240.8374 Q10318.8501,241.5347 10319.7673,241.875 Q10320.6846,242.2153 10321.5811,242.2153 Q10322.4858,242.2153 10322.9839,241.8044 Q10323.4819,241.3936 10323.4819,240.6548 Q10323.4819,240.0986 10323.1499,239.6794 Q10322.8179,239.2603 10322.187,239.0195 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="93" x="10341.75" y="242.791">SyscallService</text><line style="stroke:#181818;stroke-width:0.5;" x1="9931.5" x2="10812.5" y1="253.5" y2="253.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="9938.5" y="261.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="175" x="9950.5" y="271.0352">ctxmgr *ContextManager</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="9938.5" y="277.9883"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="109" x="9950.5" y="287.5234">bridge *XBridge</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="9938.5" y="294.4766"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="167" x="9950.5" y="304.0117">core contract.ChainCore</text><line style="stroke:#181818;stroke-width:0.5;" x1="9931.5" x2="10812.5" y1="310.9648" y2="310.9648"/><ellipse cx="9941.5" cy="321.9648" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="497" x="9950.5" y="328.5">Ping(ctx context.Context, in *pb.PingRequest) (*pb.PingResponse, error)</text><ellipse cx="9941.5" cy="338.4531" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="638" x="9950.5" y="344.9883">QueryBlock(ctx context.Context, in *pb.QueryBlockRequest) (*pb.QueryBlockResponse, error)</text><ellipse cx="9941.5" cy="354.9414" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="584" x="9950.5" y="361.4766">QueryTx(ctx context.Context, in *pb.QueryTxRequest) (*pb.QueryTxResponse, error)</text><ellipse cx="9941.5" cy="371.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="581" x="9950.5" y="377.9648">Transfer(ctx context.Context, in *pb.TransferRequest) (*pb.TransferResponse, error)</text><ellipse cx="9941.5" cy="387.918" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="662" x="9950.5" y="394.4531">ContractCall(ctx context.Context, in *pb.ContractCallRequest) (*pb.ContractCallResponse, error)</text><ellipse cx="9941.5" cy="404.4063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="824" x="9950.5" y="410.9414">CrossContractQuery(ctx context.Context, in *pb.CrossContractQueryRequest) (*pb.CrossContractQueryResponse, error)</text><ellipse cx="9941.5" cy="420.8945" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="517" x="9950.5" y="427.4297">PutObject(ctx context.Context, in *pb.PutRequest) (*pb.PutResponse, error)</text><ellipse cx="9941.5" cy="437.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="520" x="9950.5" y="443.918">GetObject(ctx context.Context, in *pb.GetRequest) (*pb.GetResponse, error)</text><ellipse cx="9941.5" cy="453.8711" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="580" x="9950.5" y="460.4063">DeleteObject(ctx context.Context, in *pb.DeleteRequest) (*pb.DeleteResponse, error)</text><ellipse cx="9941.5" cy="470.3594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="589" x="9950.5" y="476.8945">NewIterator(ctx context.Context, in *pb.IteratorRequest) (*pb.IteratorResponse, error)</text><ellipse cx="9941.5" cy="486.8477" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="561" x="9950.5" y="493.3828">GetCallArgs(ctx context.Context, in *pb.GetCallArgsRequest) (*pb.CallArgs, error)</text><ellipse cx="9941.5" cy="503.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="614" x="9950.5" y="509.8711">SetOutput(ctx context.Context, in *pb.SetOutputRequest) (*pb.SetOutputResponse, error)</text><ellipse cx="9941.5" cy="519.8242" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="857" x="9950.5" y="526.3594">GetAccountAddresses(ctx context.Context, in *pb.GetAccountAddressesRequest) (*pb.GetAccountAddressesResponse, error)</text><ellipse cx="9941.5" cy="536.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="569" x="9950.5" y="542.8477">PostLog(ctx context.Context, in *pb.PostLogRequest) (*pb.PostLogResponse, error)</text><ellipse cx="9941.5" cy="552.8008" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="608" x="9950.5" y="559.3359">EmitEvent(ctx context.Context, in *pb.EmitEventRequest) (*pb.EmitEventResponse, error)</text></g><!--MD5=[2671f2d4725cdae7832729b59aef72b3]
class bridge.VMConfig--><g id="elem_bridge.VMConfig"><rect codeLine="97" fill="#F1F1F1" height="80.9766" id="bridge.VMConfig" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="160" x="8389" y="353.5"/><ellipse cx="8431.45" cy="369.5" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M8427.8777,365.7651 L8427.8777,363.6069 L8435.2571,363.6069 L8435.2571,365.7651 L8432.7918,365.7651 L8432.7918,373.8418 L8435.2571,373.8418 L8435.2571,376 L8427.8777,376 L8427.8777,373.8418 L8430.3431,373.8418 L8430.3431,365.7651 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="67" x="8451.55" y="374.791">VMConfig</text><line style="stroke:#181818;stroke-width:0.5;" x1="8390" x2="8548" y1="385.5" y2="385.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="8390" x2="8548" y1="393.5" y2="393.5"/><ellipse cx="8400" cy="404.5" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="134" x="8409" y="411.0352">DriverName() string</text><ellipse cx="8400" cy="420.9883" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102" x="8409" y="427.5234">IsEnable() bool</text></g><!--MD5=[a8953f9fcceea24c1a63303765ad7fdc]
class bridge.XBridge--><g id="elem_bridge.XBridge"><rect codeLine="102" fill="#F1F1F1" height="262.3477" id="bridge.XBridge" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="509" x="10698.5" y="799.5"/><ellipse cx="10922.25" cy="815.5" fill="#7FFFD4" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M10921.9834,816.563 Q10920.1323,815.8574 10919.4766,815.0813 Q10918.8208,814.3052 10918.8208,812.9937 Q10918.8208,811.3086 10919.8999,810.3457 Q10920.979,809.3828 10922.8633,809.3828 Q10923.7183,809.3828 10924.5732,809.5779 Q10925.4282,809.7729 10926.2666,810.1548 L10926.2666,812.5454 Q10925.478,811.9893 10924.6646,811.6987 Q10923.8511,811.4082 10923.0542,811.4082 Q10922.166,811.4082 10921.6929,811.7651 Q10921.2197,812.1221 10921.2197,812.7861 Q10921.2197,813.3008 10921.5642,813.637 Q10921.9087,813.9731 10923.0044,814.3799 L10924.0586,814.7783 Q10925.5527,815.3262 10926.2583,816.231 Q10926.9639,817.1357 10926.9639,818.5137 Q10926.9639,820.3896 10925.8557,821.3152 Q10924.7476,822.2407 10922.5063,822.2407 Q10921.585,822.2407 10920.6594,822.0208 Q10919.7339,821.8008 10918.8706,821.3691 L10918.8706,818.8374 Q10919.8501,819.5347 10920.7673,819.875 Q10921.6846,820.2153 10922.5811,820.2153 Q10923.4858,820.2153 10923.9839,819.8044 Q10924.4819,819.3936 10924.4819,818.6548 Q10924.4819,818.0986 10924.1499,817.6794 Q10923.8179,817.2603 10923.187,817.0195 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="53" x="10942.75" y="820.791">XBridge</text><line style="stroke:#181818;stroke-width:0.5;" x1="10699.5" x2="11206.5" y1="831.5" y2="831.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="10706.5" y="839.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="175" x="10718.5" y="849.0352">ctxmgr *ContextManager</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="10706.5" y="855.9883"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="196" x="10718.5" y="865.5234">syscallService *SyscallService</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="10706.5" y="872.4766"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="95" x="10718.5" y="882.0117">basedir string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="10706.5" y="888.9648"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="70" x="10718.5" y="898.5">vmconfigs</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="10792.5" y="898.5">map</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="169" x="10822.5" y="898.5">[ContractType]VMConfig</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="10706.5" y="905.4531"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="56" x="10718.5" y="914.9883">creators</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="10778.5" y="914.9883">map</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="211" x="10808.5" y="914.9883">[ContractType]InstanceCreator</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="10706.5" y="921.9414"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="173" x="10718.5" y="931.4766">xmodel ledger.XMReader</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="10706.5" y="938.4297"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="212" x="10718.5" y="947.9648">config contract.ContractConfig</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="10706.5" y="954.918"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="167" x="10718.5" y="964.4531">core contract.ChainCore</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="10706.5" y="971.4063"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="177" x="10718.5" y="980.9414">debugLogger logs.Logger</text><line style="stroke:#181818;stroke-width:0.5;" x1="10699.5" x2="11206.5" y1="987.8945" y2="987.8945"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="10706.5" y="995.8945"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="92" x="10718.5" y="1005.4297">initVM() error</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="10706.5" y="1012.3828"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="307" x="10718.5" y="1021.918">getCreator(tp ContractType) InstanceCreator</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="10718.5" y="1038.4063"> </text><ellipse cx="10709.5" cy="1048.3594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="483" x="10718.5" y="1054.8945">NewContext(ctxCfg *contract.ContextConfig) (contract.Context, error)</text></g><!--MD5=[4bfaef2b2e10f40b8ca12b8927d26403]
class bridge.XBridgeConfig--><g id="elem_bridge.XBridgeConfig"><rect codeLine="119" fill="#F1F1F1" height="146.9297" id="bridge.XBridgeConfig" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="303" x="12548.5" y="857"/><ellipse cx="12646.25" cy="873" fill="#7FFFD4" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M12645.9834,874.063 Q12644.1323,873.3574 12643.4766,872.5813 Q12642.8208,871.8052 12642.8208,870.4937 Q12642.8208,868.8086 12643.8999,867.8457 Q12644.979,866.8828 12646.8633,866.8828 Q12647.7183,866.8828 12648.5732,867.0779 Q12649.4282,867.2729 12650.2666,867.6548 L12650.2666,870.0454 Q12649.478,869.4893 12648.6646,869.1987 Q12647.8511,868.9082 12647.0542,868.9082 Q12646.166,868.9082 12645.6929,869.2651 Q12645.2197,869.6221 12645.2197,870.2861 Q12645.2197,870.8008 12645.5642,871.137 Q12645.9087,871.4731 12647.0044,871.8799 L12648.0586,872.2783 Q12649.5527,872.8262 12650.2583,873.731 Q12650.9639,874.6357 12650.9639,876.0137 Q12650.9639,877.8896 12649.8557,878.8152 Q12648.7476,879.7407 12646.5063,879.7407 Q12645.585,879.7407 12644.6594,879.5208 Q12643.7339,879.3008 12642.8706,878.8691 L12642.8706,876.3374 Q12643.8501,877.0347 12644.7673,877.375 Q12645.6846,877.7153 12646.5811,877.7153 Q12647.4858,877.7153 12647.9839,877.3044 Q12648.4819,876.8936 12648.4819,876.1548 Q12648.4819,875.5986 12648.1499,875.1794 Q12647.8179,874.7603 12647.187,874.5195 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="99" x="12666.75" y="878.291">XBridgeConfig</text><line style="stroke:#181818;stroke-width:0.5;" x1="12549.5" x2="12850.5" y1="889" y2="889"/><ellipse cx="12559.5" cy="900" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="94" x="12568.5" y="906.5352">Basedir string</text><ellipse cx="12559.5" cy="916.4883" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="74" x="12568.5" y="923.0234">VMConfigs</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="12646.5" y="923.0234">map</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="169" x="12676.5" y="923.0234">[ContractType]VMConfig</text><ellipse cx="12559.5" cy="932.9766" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="172" x="12568.5" y="939.5117">XModel ledger.XMReader</text><ellipse cx="12559.5" cy="949.4648" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="215" x="12568.5" y="956">Config contract.ContractConfig</text><ellipse cx="12559.5" cy="965.9531" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="151" x="12568.5" y="972.4883">LogDriver logs.Logger</text><ellipse cx="12559.5" cy="982.4414" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="170" x="12568.5" y="988.9766">Core contract.ChainCore</text><line style="stroke:#181818;stroke-width:0.5;" x1="12549.5" x2="12850.5" y1="995.9297" y2="995.9297"/></g><!--MD5=[42a9423a8c37bd475b0c8425c89bcd1a]
class bridge.ContractType--><g id="elem_bridge.ContractType"><rect codeLine="128" fill="#F1F1F1" height="48" id="bridge.ContractType" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="124" x="11848" y="370"/><ellipse cx="11863" cy="386" fill="#FF7700" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M11864.3418,393.25 L11861.8931,393.25 L11861.8931,382.9985 L11858.7471,382.9985 L11858.7471,380.8569 L11867.4878,380.8569 L11867.4878,382.9985 L11864.3418,382.9985 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="92" x="11877" y="391.291">ContractType</text><line style="stroke:#181818;stroke-width:0.5;" x1="11849" x2="11971" y1="402" y2="402"/><line style="stroke:#181818;stroke-width:0.5;" x1="11849" x2="11971" y1="410" y2="410"/></g><!--MD5=[60b63f41fbfd9bd83e2b7fd1e1459873]
class bridge.NewInstanceCreatorFunc--><g id="elem_bridge.NewInstanceCreatorFunc"><rect codeLine="130" fill="#F1F1F1" height="48" id="bridge.NewInstanceCreatorFunc" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="203" x="8682.5" y="906.5"/><ellipse cx="8697.5" cy="922.5" fill="#FF7700" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M8698.8418,929.75 L8696.3931,929.75 L8696.3931,919.4985 L8693.2471,919.4985 L8693.2471,917.3569 L8701.9878,917.3569 L8701.9878,919.4985 L8698.8418,919.4985 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="171" x="8711.5" y="927.791">NewInstanceCreatorFunc</text><line style="stroke:#181818;stroke-width:0.5;" x1="8683.5" x2="8884.5" y1="938.5" y2="938.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="8683.5" x2="8884.5" y1="946.5" y2="946.5"/></g><!--MD5=[222652ac8f3b163ec1678967a444d234]
class bridge.codeProvider--><g id="elem_bridge.codeProvider"><rect codeLine="132" fill="#F1F1F1" height="146.9297" id="bridge.codeProvider" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="489" x="11766.5" y="857"/><ellipse cx="11961.75" cy="873" fill="#7FFFD4" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M11961.4834,874.063 Q11959.6323,873.3574 11958.9766,872.5813 Q11958.3208,871.8052 11958.3208,870.4937 Q11958.3208,868.8086 11959.3999,867.8457 Q11960.479,866.8828 11962.3633,866.8828 Q11963.2183,866.8828 11964.0732,867.0779 Q11964.9282,867.2729 11965.7666,867.6548 L11965.7666,870.0454 Q11964.978,869.4893 11964.1646,869.1987 Q11963.3511,868.9082 11962.5542,868.9082 Q11961.666,868.9082 11961.1929,869.2651 Q11960.7197,869.6221 11960.7197,870.2861 Q11960.7197,870.8008 11961.0642,871.137 Q11961.4087,871.4731 11962.5044,871.8799 L11963.5586,872.2783 Q11965.0527,872.8262 11965.7583,873.731 Q11966.4639,874.6357 11966.4639,876.0137 Q11966.4639,877.8896 11965.3557,878.8152 Q11964.2476,879.7407 11962.0063,879.7407 Q11961.085,879.7407 11960.1594,879.5208 Q11959.2339,879.3008 11958.3706,878.8691 L11958.3706,876.3374 Q11959.3501,877.0347 11960.2673,877.375 Q11961.1846,877.7153 11962.0811,877.7153 Q11962.9858,877.7153 11963.4839,877.3044 Q11963.9819,876.8936 11963.9819,876.1548 Q11963.9819,875.5986 11963.6499,875.1794 Q11963.3179,874.7603 11962.687,874.5195 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90" x="11982.25" y="878.291">codeProvider</text><line style="stroke:#181818;stroke-width:0.5;" x1="11767.5" x2="12254.5" y1="889" y2="889"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="11774.5" y="897"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="11786.5" y="906.5352">xstore stateReader</text><line style="stroke:#181818;stroke-width:0.5;" x1="11767.5" x2="12254.5" y1="913.4883" y2="913.4883"/><ellipse cx="11777.5" cy="924.4883" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="306" x="11786.5" y="931.0234">GetContractCode(name string) ([]byte, error)</text><ellipse cx="11777.5" cy="940.9766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="293" x="11786.5" y="947.5117">GetContractAbi(name string) ([]byte, error)</text><ellipse cx="11777.5" cy="957.4648" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="463" x="11786.5" y="964">GetContractCodeDesc(name string) (*protos.WasmCodeDesc, error)</text><ellipse cx="11777.5" cy="973.9531" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="384" x="11786.5" y="980.4883">GetContractCodeFromCache(name string) ([]byte, error)</text><ellipse cx="11777.5" cy="990.4414" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="371" x="11786.5" y="996.9766">GetContractAbiFromCache(name string) ([]byte, error)</text></g><!--MD5=[316172d85e72c24a99e4d6d39c123ab0]
class bridge.contractManager--><g id="elem_bridge.contractManager"><rect codeLine="142" fill="#F1F1F1" height="146.9297" id="bridge.contractManager" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="964" x="10849" y="320.5"/><ellipse cx="11268.75" cy="336.5" fill="#7FFFD4" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M11268.4834,337.563 Q11266.6323,336.8574 11265.9766,336.0813 Q11265.3208,335.3052 11265.3208,333.9937 Q11265.3208,332.3086 11266.3999,331.3457 Q11267.479,330.3828 11269.3633,330.3828 Q11270.2183,330.3828 11271.0732,330.5779 Q11271.9282,330.7729 11272.7666,331.1548 L11272.7666,333.5454 Q11271.978,332.9893 11271.1646,332.6987 Q11270.3511,332.4082 11269.5542,332.4082 Q11268.666,332.4082 11268.1929,332.7651 Q11267.7197,333.1221 11267.7197,333.7861 Q11267.7197,334.3008 11268.0642,334.637 Q11268.4087,334.9731 11269.5044,335.3799 L11270.5586,335.7783 Q11272.0527,336.3262 11272.7583,337.231 Q11273.4639,338.1357 11273.4639,339.5137 Q11273.4639,341.3896 11272.3557,342.3152 Q11271.2476,343.2407 11269.0063,343.2407 Q11268.085,343.2407 11267.1594,343.0208 Q11266.2339,342.8008 11265.3706,342.3691 L11265.3706,339.8374 Q11266.3501,340.5347 11267.2673,340.875 Q11268.1846,341.2153 11269.0811,341.2153 Q11269.9858,341.2153 11270.4839,340.8044 Q11270.9819,340.3936 11270.9819,339.6548 Q11270.9819,339.0986 11270.6499,338.6794 Q11270.3179,338.2603 11269.687,338.0195 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="116" x="11289.25" y="341.791">contractManager</text><line style="stroke:#181818;stroke-width:0.5;" x1="10850" x2="11812" y1="352.5" y2="352.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="10857" y="360.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="118" x="10869" y="370.0352">xbridge *XBridge</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="10857" y="376.9883"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="246" x="10869" y="386.5234">codeProvider ContractCodeProvider</text><line style="stroke:#181818;stroke-width:0.5;" x1="10850" x2="11812" y1="393.4766" y2="393.4766"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="10857" y="401.4766"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="512" x="10869" y="411.0117">initContract(tp ContractType, contextConfig *contract.ContextConfig, args</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="11385" y="411.0117">map</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="392" x="11415" y="411.0117">[string][]byte) (*contract.Response, contract.Limits, error)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="10869" y="427.5"> </text><ellipse cx="10860" cy="437.4531" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="571" x="10869" y="443.9883">DeployContract(kctx contract.KContext) (*contract.Response, contract.Limits, error)</text><ellipse cx="10860" cy="453.9414" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="583" x="10869" y="460.4766">UpgradeContract(kctx contract.KContext) (*contract.Response, contract.Limits, error)</text></g><!--MD5=[fb1396ed28c8da590625c9d9d4f4276a]
class bridge.descProvider--><g id="elem_bridge.descProvider"><rect codeLine="152" fill="#F1F1F1" height="80.9766" id="bridge.descProvider" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="489" x="11242.5" y="890"/><ellipse cx="11438.75" cy="906" fill="#7FFFD4" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M11438.4834,907.063 Q11436.6323,906.3574 11435.9766,905.5813 Q11435.3208,904.8052 11435.3208,903.4937 Q11435.3208,901.8086 11436.3999,900.8457 Q11437.479,899.8828 11439.3633,899.8828 Q11440.2183,899.8828 11441.0732,900.0779 Q11441.9282,900.2729 11442.7666,900.6548 L11442.7666,903.0454 Q11441.978,902.4893 11441.1646,902.1987 Q11440.3511,901.9082 11439.5542,901.9082 Q11438.666,901.9082 11438.1929,902.2651 Q11437.7197,902.6221 11437.7197,903.2861 Q11437.7197,903.8008 11438.0642,904.137 Q11438.4087,904.4731 11439.5044,904.8799 L11440.5586,905.2783 Q11442.0527,905.8262 11442.7583,906.731 Q11443.4639,907.6357 11443.4639,909.0137 Q11443.4639,910.8896 11442.3557,911.8152 Q11441.2476,912.7407 11439.0063,912.7407 Q11438.085,912.7407 11437.1594,912.5208 Q11436.2339,912.3008 11435.3706,911.8691 L11435.3706,909.3374 Q11436.3501,910.0347 11437.2673,910.375 Q11438.1846,910.7153 11439.0811,910.7153 Q11439.9858,910.7153 11440.4839,910.3044 Q11440.9819,909.8936 11440.9819,909.1548 Q11440.9819,908.5986 11440.6499,908.1794 Q11440.3179,907.7603 11439.687,907.5195 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="88" x="11459.25" y="911.291">descProvider</text><line style="stroke:#181818;stroke-width:0.5;" x1="11243.5" x2="11730.5" y1="922" y2="922"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="11250.5" y="930"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="199" x="11262.5" y="939.5352">desc *protos.WasmCodeDesc</text><line style="stroke:#181818;stroke-width:0.5;" x1="11243.5" x2="11730.5" y1="946.4883" y2="946.4883"/><ellipse cx="11253.5" cy="957.4883" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="463" x="11262.5" y="964.0234">GetContractCodeDesc(name string) (*protos.WasmCodeDesc, error)</text></g><!--MD5=[25775cc8a631bfa55cae9ce86c559beb]
class bridge.registry--><g id="elem_bridge.registry"><rect codeLine="158" fill="#F1F1F1" height="113.9531" id="bridge.registry" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="656" x="12887" y="873.5"/><ellipse cx="13184.75" cy="889.5" fill="#7FFFD4" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M13184.4834,890.563 Q13182.6323,889.8574 13181.9766,889.0813 Q13181.3208,888.3052 13181.3208,886.9937 Q13181.3208,885.3086 13182.3999,884.3457 Q13183.479,883.3828 13185.3633,883.3828 Q13186.2183,883.3828 13187.0732,883.5779 Q13187.9282,883.7729 13188.7666,884.1548 L13188.7666,886.5454 Q13187.978,885.9893 13187.1646,885.6987 Q13186.3511,885.4082 13185.5542,885.4082 Q13184.666,885.4082 13184.1929,885.7651 Q13183.7197,886.1221 13183.7197,886.7861 Q13183.7197,887.3008 13184.0642,887.637 Q13184.4087,887.9731 13185.5044,888.3799 L13186.5586,888.7783 Q13188.0527,889.3262 13188.7583,890.231 Q13189.4639,891.1357 13189.4639,892.5137 Q13189.4639,894.3896 13188.3557,895.3152 Q13187.2476,896.2407 13185.0063,896.2407 Q13184.085,896.2407 13183.1594,896.0208 Q13182.2339,895.8008 13181.3706,895.3691 L13181.3706,892.8374 Q13182.3501,893.5347 13183.2673,893.875 Q13184.1846,894.2153 13185.0811,894.2153 Q13185.9858,894.2153 13186.4839,893.8044 Q13186.9819,893.3936 13186.9819,892.6548 Q13186.9819,892.0986 13186.6499,891.6794 Q13186.3179,891.2603 13185.687,891.0195 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="52" x="13205.25" y="894.791">registry</text><line style="stroke:#181818;stroke-width:0.5;" x1="12888" x2="13542" y1="905.5" y2="905.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="12895" y="913.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="12907" y="923.0352">mutex sync.Mutex</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="12895" y="929.9883"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="47" x="12907" y="939.5234">drivers</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="12958" y="939.5234">map</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102" x="12988" y="939.5234">[ContractType]</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="13090" y="939.5234">map</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="221" x="13120" y="939.5234">[string]NewInstanceCreatorFunc</text><line style="stroke:#181818;stroke-width:0.5;" x1="12888" x2="13542" y1="946.4766" y2="946.4766"/><ellipse cx="12898" cy="957.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="489" x="12907" y="964.0117">Register(tp ContractType, name string, driver NewInstanceCreatorFunc)</text><ellipse cx="12898" cy="973.9648" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="630" x="12907" y="980.5">Open(tp ContractType, name string, config *InstanceCreatorConfig) (InstanceCreator, error)</text></g><!--MD5=[79e3e3a7ab22877b3135223b487b668d]
class bridge.stateGetReader--><g id="elem_bridge.stateGetReader"><rect codeLine="166" fill="#F1F1F1" height="64.4883" id="bridge.stateGetReader" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="319" x="9576.5" y="362"/><ellipse cx="9679.75" cy="378" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M9676.1777,374.2651 L9676.1777,372.1069 L9683.5571,372.1069 L9683.5571,374.2651 L9681.0918,374.2651 L9681.0918,382.3418 L9683.5571,382.3418 L9683.5571,384.5 L9676.1777,384.5 L9676.1777,382.3418 L9678.6431,382.3418 L9678.6431,374.2651 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="104" x="9700.25" y="383.291">stateGetReader</text><line style="stroke:#181818;stroke-width:0.5;" x1="9577.5" x2="9894.5" y1="394" y2="394"/><line style="stroke:#181818;stroke-width:0.5;" x1="9577.5" x2="9894.5" y1="402" y2="402"/><ellipse cx="9587.5" cy="413" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="293" x="9596.5" y="419.5352">Get(bucket string, key []byte) ([]byte, error)</text></g><!--MD5=[b76c6c6901cc7d6101917651cbddcb55]
class bridge.stateReader--><g id="elem_bridge.stateReader"><rect codeLine="170" fill="#F1F1F1" height="80.9766" id="bridge.stateReader" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="522" x="9019" y="353.5"/><ellipse cx="9235.25" cy="369.5" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M9231.6777,365.7651 L9231.6777,363.6069 L9239.0571,363.6069 L9239.0571,365.7651 L9236.5918,365.7651 L9236.5918,373.8418 L9239.0571,373.8418 L9239.0571,376 L9231.6777,376 L9231.6777,373.8418 L9234.1431,373.8418 L9234.1431,365.7651 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="81" x="9255.75" y="374.791">stateReader</text><line style="stroke:#181818;stroke-width:0.5;" x1="9020" x2="9540" y1="385.5" y2="385.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="9020" x2="9540" y1="393.5" y2="393.5"/><ellipse cx="9030" cy="404.5" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="293" x="9039" y="411.0352">Get(bucket string, key []byte) ([]byte, error)</text><ellipse cx="9030" cy="420.9883" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="496" x="9039" y="427.5234">GetUncommited(bucket string, key []byte) (*ledger.VersionedData, error)</text></g><!--MD5=[d91f866de3962df0e729f5019560ce1a]
class bridge.stateReaderWrapper--><g id="elem_bridge.stateReaderWrapper"><rect codeLine="175" fill="#F1F1F1" height="64.4883" id="bridge.stateReaderWrapper" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="522" x="9576" y="898.5"/><ellipse cx="9763.25" cy="914.5" fill="#7FFFD4" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M9762.9834,915.563 Q9761.1323,914.8574 9760.4766,914.0813 Q9759.8208,913.3052 9759.8208,911.9937 Q9759.8208,910.3086 9760.8999,909.3457 Q9761.979,908.3828 9763.8633,908.3828 Q9764.7183,908.3828 9765.5732,908.5779 Q9766.4282,908.7729 9767.2666,909.1548 L9767.2666,911.5454 Q9766.478,910.9893 9765.6646,910.6987 Q9764.8511,910.4082 9764.0542,910.4082 Q9763.166,910.4082 9762.6929,910.7651 Q9762.2197,911.1221 9762.2197,911.7861 Q9762.2197,912.3008 9762.5642,912.637 Q9762.9087,912.9731 9764.0044,913.3799 L9765.0586,913.7783 Q9766.5527,914.3262 9767.2583,915.231 Q9767.9639,916.1357 9767.9639,917.5137 Q9767.9639,919.3896 9766.8557,920.3152 Q9765.7476,921.2407 9763.5063,921.2407 Q9762.585,921.2407 9761.6594,921.0208 Q9760.7339,920.8008 9759.8706,920.3691 L9759.8706,917.8374 Q9760.8501,918.5347 9761.7673,918.875 Q9762.6846,919.2153 9763.5811,919.2153 Q9764.4858,919.2153 9764.9839,918.8044 Q9765.4819,918.3936 9765.4819,917.6548 Q9765.4819,917.0986 9765.1499,916.6794 Q9764.8179,916.2603 9764.187,916.0195 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="139" x="9783.75" y="919.791">stateReaderWrapper</text><line style="stroke:#181818;stroke-width:0.5;" x1="9577" x2="10097" y1="930.5" y2="930.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="9577" x2="10097" y1="938.5" y2="938.5"/><ellipse cx="9587" cy="949.5" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="496" x="9596" y="956.0352">GetUncommited(bucket string, key []byte) (*ledger.VersionedData, error)</text></g><!--MD5=[a4c569a76e9f7a41f88f565e9c0e6e98]
class bridge.vmContextImpl--><g id="elem_bridge.vmContextImpl"><rect codeLine="179" fill="#F1F1F1" height="163.418" id="bridge.vmContextImpl" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="529" x="7824.5" y="312.5"/><ellipse cx="8032.25" cy="328.5" fill="#7FFFD4" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M8031.9834,329.563 Q8030.1323,328.8574 8029.4766,328.0813 Q8028.8208,327.3052 8028.8208,325.9937 Q8028.8208,324.3086 8029.8999,323.3457 Q8030.979,322.3828 8032.8633,322.3828 Q8033.7183,322.3828 8034.5732,322.5779 Q8035.4282,322.7729 8036.2666,323.1548 L8036.2666,325.5454 Q8035.478,324.9893 8034.6646,324.6987 Q8033.8511,324.4082 8033.0542,324.4082 Q8032.166,324.4082 8031.6929,324.7651 Q8031.2197,325.1221 8031.2197,325.7861 Q8031.2197,326.3008 8031.5642,326.637 Q8031.9087,326.9731 8033.0044,327.3799 L8034.0586,327.7783 Q8035.5527,328.3262 8036.2583,329.231 Q8036.9639,330.1357 8036.9639,331.5137 Q8036.9639,333.3896 8035.8557,334.3152 Q8034.7476,335.2407 8032.5063,335.2407 Q8031.585,335.2407 8030.6594,335.0208 Q8029.7339,334.8008 8028.8706,334.3691 L8028.8706,331.8374 Q8029.8501,332.5347 8030.7673,332.875 Q8031.6846,333.2153 8032.5811,333.2153 Q8033.4858,333.2153 8033.9839,332.8044 Q8034.4819,332.3936 8034.4819,331.6548 Q8034.4819,331.0986 8034.1499,330.6794 Q8033.8179,330.2603 8033.187,330.0195 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="105" x="8052.75" y="333.791">vmContextImpl</text><line style="stroke:#181818;stroke-width:0.5;" x1="7825.5" x2="8352.5" y1="344.5" y2="344.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7832.5" y="352.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="87" x="7844.5" y="362.0352">ctx *Context</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7832.5" y="368.9883"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="118" x="7844.5" y="378.5234">instance Instance</text><line style="stroke:#181818;stroke-width:0.5;" x1="7825.5" x2="8352.5" y1="385.4766" y2="385.4766"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7832.5" y="393.4766"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="49" x="7844.5" y="403.0117">release</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="7897.5" y="403.0117">func</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="10" x="7927.5" y="403.0117">()</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="7844.5" y="419.5"> </text><ellipse cx="7835.5" cy="429.4531" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="185" x="7844.5" y="435.9883">Invoke(method string, args</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="8033.5" y="435.9883">map</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="284" x="8063.5" y="435.9883">[string][]byte) (*contract.Response, error)</text><ellipse cx="7835.5" cy="445.9414" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="211" x="7844.5" y="452.4766">ResourceUsed() contract.Limits</text><ellipse cx="7835.5" cy="462.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="101" x="7844.5" y="468.9648">Release() error</text></g><!--MD5=[68f7c93a287763c424398b87d7bc8294]
class bridge.xmStateReader--><g id="elem_bridge.xmStateReader"><rect codeLine="189" fill="#F1F1F1" height="97.4648" id="bridge.xmStateReader" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="522" x="9019" y="882"/><ellipse cx="9223.75" cy="898" fill="#7FFFD4" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M9223.4834,899.063 Q9221.6323,898.3574 9220.9766,897.5813 Q9220.3208,896.8052 9220.3208,895.4937 Q9220.3208,893.8086 9221.3999,892.8457 Q9222.479,891.8828 9224.3633,891.8828 Q9225.2183,891.8828 9226.0732,892.0779 Q9226.9282,892.2729 9227.7666,892.6548 L9227.7666,895.0454 Q9226.978,894.4893 9226.1646,894.1987 Q9225.3511,893.9082 9224.5542,893.9082 Q9223.666,893.9082 9223.1929,894.2651 Q9222.7197,894.6221 9222.7197,895.2861 Q9222.7197,895.8008 9223.0642,896.137 Q9223.4087,896.4731 9224.5044,896.8799 L9225.5586,897.2783 Q9227.0527,897.8262 9227.7583,898.731 Q9228.4639,899.6357 9228.4639,901.0137 Q9228.4639,902.8896 9227.3557,903.8152 Q9226.2476,904.7407 9224.0063,904.7407 Q9223.085,904.7407 9222.1594,904.5208 Q9221.2339,904.3008 9220.3706,903.8691 L9220.3706,901.3374 Q9221.3501,902.0347 9222.2673,902.375 Q9223.1846,902.7153 9224.0811,902.7153 Q9224.9858,902.7153 9225.4839,902.3044 Q9225.9819,901.8936 9225.9819,901.1548 Q9225.9819,900.5986 9225.6499,900.1794 Q9225.3179,899.7603 9224.687,899.5195 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="104" x="9244.25" y="903.291">xmStateReader</text><line style="stroke:#181818;stroke-width:0.5;" x1="9020" x2="9540" y1="914" y2="914"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="9027" y="922"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="9039" y="931.5352">r ledger.XMReader</text><line style="stroke:#181818;stroke-width:0.5;" x1="9020" x2="9540" y1="938.4883" y2="938.4883"/><ellipse cx="9030" cy="949.4883" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="293" x="9039" y="956.0234">Get(bucket string, key []byte) ([]byte, error)</text><ellipse cx="9030" cy="965.9766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="496" x="9039" y="972.5117">GetUncommited(bucket string, key []byte) (*ledger.VersionedData, error)</text></g><!--MD5=[fb798d0c5d035a71b623c7b7db4d2d96]
class bridge.<font color=blue>func</font>(*InstanceCreatorConfig) (InstanceCreator, error)--><g id="elem_bridge.&lt;font color=blue&gt;func&lt;/font&gt;(*InstanceCreatorConfig) (InstanceCreator, error)"><rect fill="#F1F1F1" height="48" id="bridge.&lt;font color=blue&gt;func&lt;/font&gt;(*InstanceCreatorConfig) (InstanceCreator, error)" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="400" x="8584" y="370"/><ellipse cx="8599" cy="386" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M8601.4731,392.1431 Q8600.8921,392.4419 8600.2529,392.5913 Q8599.6138,392.7407 8598.9082,392.7407 Q8596.4014,392.7407 8595.0815,391.0889 Q8593.7617,389.437 8593.7617,386.3159 Q8593.7617,383.1865 8595.0815,381.5347 Q8596.4014,379.8828 8598.9082,379.8828 Q8599.6138,379.8828 8600.2612,380.0322 Q8600.9087,380.1816 8601.4731,380.4805 L8601.4731,383.2031 Q8600.8423,382.6221 8600.2488,382.3523 Q8599.6553,382.0825 8599.0244,382.0825 Q8597.6797,382.0825 8596.9949,383.1492 Q8596.3101,384.2158 8596.3101,386.3159 Q8596.3101,388.4077 8596.9949,389.4744 Q8597.6797,390.541 8599.0244,390.541 Q8599.6553,390.541 8600.2488,390.2712 Q8600.8423,390.0015 8601.4731,389.4204 Z " fill="#000000"/><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="8613" y="391.291">func</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="338" x="8643" y="391.291">(*InstanceCreatorConfig) (InstanceCreator, error)</text><line style="stroke:#181818;stroke-width:0.5;" x1="8585" x2="8983" y1="402" y2="402"/><line style="stroke:#181818;stroke-width:0.5;" x1="8585" x2="8983" y1="410" y2="410"/></g><!--MD5=[c9602fcae7d4f2113a4b594b3b293beb]
class pbrpc.SyscallServer--><g id="elem_pbrpc.SyscallServer"><rect fill="#F1F1F1" height="48" id="pbrpc.SyscallServer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="120" x="10312" y="41"/><ellipse cx="10327" cy="57" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M10329.4731,63.1431 Q10328.8921,63.4419 10328.2529,63.5913 Q10327.6138,63.7407 10326.9082,63.7407 Q10324.4014,63.7407 10323.0815,62.0889 Q10321.7617,60.437 10321.7617,57.3159 Q10321.7617,54.1865 10323.0815,52.5347 Q10324.4014,50.8828 10326.9082,50.8828 Q10327.6138,50.8828 10328.2612,51.0322 Q10328.9087,51.1816 10329.4731,51.4805 L10329.4731,54.2031 Q10328.8423,53.6221 10328.2488,53.3523 Q10327.6553,53.0825 10327.0244,53.0825 Q10325.6797,53.0825 10324.9949,54.1492 Q10324.3101,55.2158 10324.3101,57.3159 Q10324.3101,59.4077 10324.9949,60.4744 Q10325.6797,61.541 10327.0244,61.541 Q10327.6553,61.541 10328.2488,61.2712 Q10328.8423,61.0015 10329.4731,60.4204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="88" x="10341" y="62.291">SyscallServer</text><line style="stroke:#181818;stroke-width:0.5;" x1="10313" x2="10431" y1="73" y2="73"/><line style="stroke:#181818;stroke-width:0.5;" x1="10313" x2="10431" y1="81" y2="81"/></g><!--MD5=[45d155395689c8bf65b33654d07c4e43]
class contract.Context--><g id="elem_contract.Context"><rect codeLine="216" fill="#F1F1F1" height="97.4648" id="contract.Context" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="469" x="2490.5" y="882"/><ellipse cx="2693.25" cy="898" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2689.6777,894.2651 L2689.6777,892.1069 L2697.0571,892.1069 L2697.0571,894.2651 L2694.5918,894.2651 L2694.5918,902.3418 L2697.0571,902.3418 L2697.0571,904.5 L2689.6777,904.5 L2689.6777,902.3418 L2692.1431,902.3418 L2692.1431,894.2651 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="55" x="2713.75" y="903.291">Context</text><line style="stroke:#181818;stroke-width:0.5;" x1="2491.5" x2="2958.5" y1="914" y2="914"/><line style="stroke:#181818;stroke-width:0.5;" x1="2491.5" x2="2958.5" y1="922" y2="922"/><ellipse cx="2501.5" cy="933" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="185" x="2510.5" y="939.5352">Invoke(method string, args</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="2699.5" y="939.5352">map</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="224" x="2729.5" y="939.5352">[string][]byte) (*Response, error)</text><ellipse cx="2501.5" cy="949.4883" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="151" x="2510.5" y="956.0234">ResourceUsed() Limits</text><ellipse cx="2501.5" cy="965.9766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="101" x="2510.5" y="972.5117">Release() error</text></g><!--MD5=[db5d53ab72e26b78329d86af4ff8714a]
class contract.ChainCore--><g id="elem_contract.ChainCore"><rect codeLine="208" fill="#F1F1F1" height="130.4414" id="contract.ChainCore" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="832" x="6936" y="865.5"/><ellipse cx="7311.25" cy="881.5" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M7307.6777,877.7651 L7307.6777,875.6069 L7315.0571,875.6069 L7315.0571,877.7651 L7312.5918,877.7651 L7312.5918,885.8418 L7315.0571,885.8418 L7315.0571,888 L7307.6777,888 L7307.6777,885.8418 L7310.1431,885.8418 L7310.1431,877.7651 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="73" x="7331.75" y="886.791">ChainCore</text><line style="stroke:#181818;stroke-width:0.5;" x1="6937" x2="7767" y1="897.5" y2="897.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="6937" x2="7767" y1="905.5" y2="905.5"/><ellipse cx="6947" cy="916.5" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="404" x="6956" y="923.0352">GetAccountAddresses(accountName string) ([]string, error)</text><ellipse cx="6947" cy="932.9883" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="806" x="6956" y="939.5234">VerifyContractPermission(initiator string, authRequire []string, contractName string, methodName string) (bool, error)</text><ellipse cx="6947" cy="949.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="552" x="6956" y="956.0117">VerifyContractOwnerPermission(contractName string, authRequire []string) error</text><ellipse cx="6947" cy="965.9648" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="369" x="6956" y="972.5">QueryTransaction(txid []byte) (*pb.Transaction, error)</text><ellipse cx="6947" cy="982.4531" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="369" x="6956" y="988.9883">QueryBlock(blockid []byte) (ledger.BlockHandle, error)</text></g><!--MD5=[21020a9b2dd8b7cff73b2903a55e8800]
class contract.ContextConfig--><g id="elem_contract.ContextConfig"><rect codeLine="222" fill="#F1F1F1" height="245.8594" id="contract.ContextConfig" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="234" x="5953" y="807.5"/><ellipse cx="6015.25" cy="823.5" fill="#7FFFD4" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M6014.9834,824.563 Q6013.1323,823.8574 6012.4766,823.0813 Q6011.8208,822.3052 6011.8208,820.9937 Q6011.8208,819.3086 6012.8999,818.3457 Q6013.979,817.3828 6015.8633,817.3828 Q6016.7183,817.3828 6017.5732,817.5779 Q6018.4282,817.7729 6019.2666,818.1548 L6019.2666,820.5454 Q6018.478,819.9893 6017.6646,819.6987 Q6016.8511,819.4082 6016.0542,819.4082 Q6015.166,819.4082 6014.6929,819.7651 Q6014.2197,820.1221 6014.2197,820.7861 Q6014.2197,821.3008 6014.5642,821.637 Q6014.9087,821.9731 6016.0044,822.3799 L6017.0586,822.7783 Q6018.5527,823.3262 6019.2583,824.231 Q6019.9639,825.1357 6019.9639,826.5137 Q6019.9639,828.3896 6018.8557,829.3152 Q6017.7476,830.2407 6015.5063,830.2407 Q6014.585,830.2407 6013.6594,830.0208 Q6012.7339,829.8008 6011.8706,829.3691 L6011.8706,826.8374 Q6012.8501,827.5347 6013.7673,827.875 Q6014.6846,828.2153 6015.5811,828.2153 Q6016.4858,828.2153 6016.9839,827.8044 Q6017.4819,827.3936 6017.4819,826.6548 Q6017.4819,826.0986 6017.1499,825.6794 Q6016.8179,825.2603 6016.187,825.0195 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="101" x="6035.75" y="828.791">ContextConfig</text><line style="stroke:#181818;stroke-width:0.5;" x1="5954" x2="6186" y1="839.5" y2="839.5"/><ellipse cx="5964" cy="850.5" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="133" x="5973" y="857.0352">State StateSandbox</text><ellipse cx="5964" cy="866.9883" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="5973" y="873.5234">Initiator string</text><ellipse cx="5964" cy="883.4766" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="140" x="5973" y="890.0117">AuthRequire []string</text><ellipse cx="5964" cy="899.9648" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="84" x="5973" y="906.5">Caller string</text><ellipse cx="5964" cy="916.4531" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="95" x="5973" y="922.9883">Module string</text><ellipse cx="5964" cy="932.9414" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="142" x="5973" y="939.4766">ContractName string</text><ellipse cx="5964" cy="949.4297" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="147" x="5973" y="955.9648">ResourceLimits Limits</text><ellipse cx="5964" cy="965.918" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="120" x="5973" y="972.4531">CanInitialize bool</text><ellipse cx="5964" cy="982.4063" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="157" x="5973" y="988.9414">TransferAmount string</text><ellipse cx="5964" cy="998.8945" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="5973" y="1005.4297">ContractSet</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="6057" y="1005.4297">map</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="81" x="6087" y="1005.4297">[string]bool</text><ellipse cx="5964" cy="1015.3828" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="208" x="5973" y="1021.918">ContractCodeFromCache bool</text><ellipse cx="5964" cy="1031.8711" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102" x="5973" y="1038.4063">TxInBlock bool</text><line style="stroke:#181818;stroke-width:0.5;" x1="5954" x2="6186" y1="1045.3594" y2="1045.3594"/></g><!--MD5=[36440031b350302ccc0658683063ce71]
class contract.ContractConfig--><g id="elem_contract.ContractConfig"><rect codeLine="237" fill="#F1F1F1" height="163.418" id="contract.ContractConfig" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="180" x="6222" y="849"/><ellipse cx="6256.35" cy="865" fill="#7FFFD4" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M6256.0834,866.063 Q6254.2323,865.3574 6253.5766,864.5813 Q6252.9208,863.8052 6252.9208,862.4937 Q6252.9208,860.8086 6253.9999,859.8457 Q6255.079,858.8828 6256.9633,858.8828 Q6257.8183,858.8828 6258.6732,859.0779 Q6259.5282,859.2729 6260.3666,859.6548 L6260.3666,862.0454 Q6259.578,861.4893 6258.7646,861.1987 Q6257.9511,860.9082 6257.1542,860.9082 Q6256.266,860.9082 6255.7929,861.2651 Q6255.3197,861.6221 6255.3197,862.2861 Q6255.3197,862.8008 6255.6642,863.137 Q6256.0087,863.4731 6257.1044,863.8799 L6258.1586,864.2783 Q6259.6527,864.8262 6260.3583,865.731 Q6261.0639,866.6357 6261.0639,868.0137 Q6261.0639,869.8896 6259.9557,870.8152 Q6258.8476,871.7407 6256.6063,871.7407 Q6255.685,871.7407 6254.7594,871.5208 Q6253.8339,871.3008 6252.9706,870.8691 L6252.9706,868.3374 Q6253.9501,869.0347 6254.8673,869.375 Q6255.7846,869.7153 6256.6811,869.7153 Q6257.5858,869.7153 6258.0839,869.3044 Q6258.5819,868.8936 6258.5819,868.1548 Q6258.5819,867.5986 6258.2499,867.1794 Q6257.9179,866.7603 6257.287,866.5195 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="105" x="6274.65" y="870.291">ContractConfig</text><line style="stroke:#181818;stroke-width:0.5;" x1="6223" x2="6401" y1="881" y2="881"/><ellipse cx="6233" cy="892" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="151" x="6242" y="898.5352">EnableDebugLog bool</text><ellipse cx="6233" cy="908.4883" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="140" x="6242" y="915.0234">EnableUpgrade bool</text><ellipse cx="6233" cy="924.9766" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="151" x="6242" y="931.5117">LogDriver logs.Logger</text><ellipse cx="6233" cy="941.4648" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="134" x="6242" y="948">Native NativeConfig</text><ellipse cx="6233" cy="957.9531" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="130" x="6242" y="964.4883">Wasm WasmConfig</text><ellipse cx="6233" cy="974.4414" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="154" x="6242" y="980.9766">Xkernel XkernelConfig</text><ellipse cx="6233" cy="990.9297" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="108" x="6242" y="997.4648">EVM EVMConfig</text><line style="stroke:#181818;stroke-width:0.5;" x1="6223" x2="6401" y1="1004.418" y2="1004.418"/></g><!--MD5=[fab1acf02716772efbaaf75cfdd68b04]
class contract.ContractEventState--><g id="elem_contract.ContractEventState"><rect codeLine="247" fill="#F1F1F1" height="64.4883" id="contract.ContractEventState" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="313" x="4258.5" y="898.5"/><ellipse cx="4345.75" cy="914.5" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4342.1777,910.7651 L4342.1777,908.6069 L4349.5571,908.6069 L4349.5571,910.7651 L4347.0918,910.7651 L4347.0918,918.8418 L4349.5571,918.8418 L4349.5571,921 L4342.1777,921 L4342.1777,918.8418 L4344.6431,918.8418 L4344.6431,910.7651 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="130" x="4366.25" y="919.791">ContractEventState</text><line style="stroke:#181818;stroke-width:0.5;" x1="4259.5" x2="4570.5" y1="930.5" y2="930.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="4259.5" x2="4570.5" y1="938.5" y2="938.5"/><ellipse cx="4269.5" cy="949.5" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="287" x="4278.5" y="956.0352">AddEvent(events ...*protos.ContractEvent)</text></g><!--MD5=[ac717a8fbd21db0d722b901340a6690c]
class contract.CrossQueryState--><g id="elem_contract.CrossQueryState"><rect codeLine="251" fill="#F1F1F1" height="48" id="contract.CrossQueryState" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="146" x="4077" y="906.5"/><ellipse cx="4092" cy="922.5" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4088.4277,918.7651 L4088.4277,916.6069 L4095.8071,916.6069 L4095.8071,918.7651 L4093.3418,918.7651 L4093.3418,926.8418 L4095.8071,926.8418 L4095.8071,929 L4088.4277,929 L4088.4277,926.8418 L4090.8931,926.8418 L4090.8931,918.7651 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="114" x="4106" y="927.791">CrossQueryState</text><line style="stroke:#181818;stroke-width:0.5;" x1="4078" x2="4222" y1="938.5" y2="938.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="4078" x2="4222" y1="946.5" y2="946.5"/></g><!--MD5=[7cef26ff6c06db477ee1f4bf2d84bb89]
class contract.EVMConfig--><g id="elem_contract.EVMConfig"><rect codeLine="253" fill="#F1F1F1" height="113.9531" id="contract.EVMConfig" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="160" x="3882" y="873.5"/><ellipse cx="3920.85" cy="889.5" fill="#7FFFD4" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M3920.5834,890.563 Q3918.7323,889.8574 3918.0766,889.0813 Q3917.4208,888.3052 3917.4208,886.9937 Q3917.4208,885.3086 3918.4999,884.3457 Q3919.579,883.3828 3921.4633,883.3828 Q3922.3183,883.3828 3923.1732,883.5779 Q3924.0282,883.7729 3924.8666,884.1548 L3924.8666,886.5454 Q3924.078,885.9893 3923.2646,885.6987 Q3922.4511,885.4082 3921.6542,885.4082 Q3920.766,885.4082 3920.2929,885.7651 Q3919.8197,886.1221 3919.8197,886.7861 Q3919.8197,887.3008 3920.1642,887.637 Q3920.5087,887.9731 3921.6044,888.3799 L3922.6586,888.7783 Q3924.1527,889.3262 3924.8583,890.231 Q3925.5639,891.1357 3925.5639,892.5137 Q3925.5639,894.3896 3924.4557,895.3152 Q3923.3476,896.2407 3921.1063,896.2407 Q3920.185,896.2407 3919.2594,896.0208 Q3918.3339,895.8008 3917.4706,895.3691 L3917.4706,892.8374 Q3918.4501,893.5347 3919.3673,893.875 Q3920.2846,894.2153 3921.1811,894.2153 Q3922.0858,894.2153 3922.5839,893.8044 Q3923.0819,893.3936 3923.0819,892.6548 Q3923.0819,892.0986 3922.7499,891.6794 Q3922.4179,891.2603 3921.787,891.0195 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="75" x="3940.15" y="894.791">EVMConfig</text><line style="stroke:#181818;stroke-width:0.5;" x1="3883" x2="4041" y1="905.5" y2="905.5"/><ellipse cx="3893" cy="916.5" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="81" x="3902" y="923.0352">Enable bool</text><ellipse cx="3893" cy="932.9883" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="85" x="3902" y="939.5234">Driver string</text><line style="stroke:#181818;stroke-width:0.5;" x1="3883" x2="4041" y1="946.4766" y2="946.4766"/><ellipse cx="3893" cy="957.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="134" x="3902" y="964.0117">DriverName() string</text><ellipse cx="3893" cy="973.9648" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102" x="3902" y="980.5">IsEnable() bool</text></g><!--MD5=[9852a8dcc5e7c790f32ed0f0e2ff23dd]
class contract.Iterator--><g id="elem_contract.Iterator"><rect codeLine="261" fill="#F1F1F1" height="130.4414" id="contract.Iterator" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="117" x="6437.5" y="865.5"/><ellipse cx="6467.8" cy="881.5" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6464.2277,877.7651 L6464.2277,875.6069 L6471.6071,875.6069 L6471.6071,877.7651 L6469.1418,877.7651 L6469.1418,885.8418 L6471.6071,885.8418 L6471.6071,888 L6464.2277,888 L6464.2277,885.8418 L6466.6931,885.8418 L6466.6931,877.7651 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="51" x="6485.2" y="886.791">Iterator</text><line style="stroke:#181818;stroke-width:0.5;" x1="6438.5" x2="6553.5" y1="897.5" y2="897.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="6438.5" x2="6553.5" y1="905.5" y2="905.5"/><ellipse cx="6448.5" cy="916.5" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="77" x="6457.5" y="923.0352">Key() []byte</text><ellipse cx="6448.5" cy="932.9883" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="91" x="6457.5" y="939.5234">Value() []byte</text><ellipse cx="6448.5" cy="949.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="77" x="6457.5" y="956.0117">Next() bool</text><ellipse cx="6448.5" cy="965.9648" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="84" x="6457.5" y="972.5">Error() error</text><ellipse cx="6448.5" cy="982.4531" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="48" x="6457.5" y="988.9883">Close()</text></g><!--MD5=[50ca0a40b08bc9e3895c7dc98a7e53eb]
class contract.KContext--><g id="elem_contract.KContext"><rect codeLine="269" fill="#F1F1F1" height="179.9063" id="contract.KContext" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="662" x="5658" y="1865"/><ellipse cx="5952.75" cy="1881" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5949.1777,1877.2651 L5949.1777,1875.1069 L5956.5571,1875.1069 L5956.5571,1877.2651 L5954.0918,1877.2651 L5954.0918,1885.3418 L5956.5571,1885.3418 L5956.5571,1887.5 L5949.1777,1887.5 L5949.1777,1885.3418 L5951.6431,1885.3418 L5951.6431,1877.2651 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="64" x="5973.25" y="1886.291">KContext</text><line style="stroke:#181818;stroke-width:0.5;" x1="5659" x2="6319" y1="1897" y2="1897"/><line style="stroke:#181818;stroke-width:0.5;" x1="5659" x2="6319" y1="1905" y2="1905"/><ellipse cx="5669" cy="1916" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="42" x="5678" y="1922.5352">Args()</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="5724" y="1922.5352">map</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="89" x="5754" y="1922.5352">[string][]byte</text><ellipse cx="5669" cy="1932.4883" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="108" x="5678" y="1939.0234">Initiator() string</text><ellipse cx="5669" cy="1948.9766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="94" x="5678" y="1955.5117">Caller() string</text><ellipse cx="5669" cy="1965.4648" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="150" x="5678" y="1972">AuthRequire() []string</text><ellipse cx="5669" cy="1981.9531" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="213" x="5678" y="1988.4883">AddResourceUsed(delta Limits)</text><ellipse cx="5669" cy="1998.4414" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="150" x="5678" y="2004.9766">ResourceLimit() Limits</text><ellipse cx="5669" cy="2014.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="378" x="5678" y="2021.4648">Call(module string, contract string, method string, args</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="6060" y="2021.4648">map</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="224" x="6090" y="2021.4648">[string][]byte) (*Response, error)</text><ellipse cx="5669" cy="2031.418" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="226" x="5678" y="2037.9531">EmitAsyncTask(event string, args</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="60" x="5908" y="2037.9531">interface</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="54" x="5968" y="2037.9531">{}) error</text></g><!--MD5=[8498b90ab231bce56ae353d9d2413f6c]
class contract.KernRegistry--><g id="elem_contract.KernRegistry"><rect codeLine="280" fill="#F1F1F1" height="113.9531" id="contract.KernRegistry" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="530" x="1925" y="873.5"/><ellipse cx="2142.25" cy="889.5" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2138.6777,885.7651 L2138.6777,883.6069 L2146.0571,883.6069 L2146.0571,885.7651 L2143.5918,885.7651 L2143.5918,893.8418 L2146.0571,893.8418 L2146.0571,896 L2138.6777,896 L2138.6777,893.8418 L2141.1431,893.8418 L2141.1431,885.7651 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="87" x="2162.75" y="894.791">KernRegistry</text><line style="stroke:#181818;stroke-width:0.5;" x1="1926" x2="2454" y1="905.5" y2="905.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="1926" x2="2454" y1="913.5" y2="913.5"/><ellipse cx="1936" cy="924.5" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="504" x="1945" y="931.0352">RegisterKernMethod(contract string, method string, handler KernMethod)</text><ellipse cx="1936" cy="940.9883" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="353" x="1945" y="947.5234">UnregisterKernMethod(ctract string, method string)</text><ellipse cx="1936" cy="957.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="456" x="1945" y="964.0117">RegisterShortcut(oldmethod string, contract string, method string)</text><ellipse cx="1936" cy="973.9648" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="463" x="1945" y="980.5">GetKernMethod(contract string, method string) (KernMethod, error)</text></g><!--MD5=[098dccca516fac5b50536733360c48a3]
class contract.Limits--><g id="elem_contract.Limits"><rect codeLine="287" fill="#F1F1F1" height="179.9063" id="contract.Limits" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="311" x="6589.5" y="840.5"/><ellipse cx="6720.75" cy="856.5" fill="#7FFFD4" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M6720.4834,857.563 Q6718.6323,856.8574 6717.9766,856.0813 Q6717.3208,855.3052 6717.3208,853.9937 Q6717.3208,852.3086 6718.3999,851.3457 Q6719.479,850.3828 6721.3633,850.3828 Q6722.2183,850.3828 6723.0732,850.5779 Q6723.9282,850.7729 6724.7666,851.1548 L6724.7666,853.5454 Q6723.978,852.9893 6723.1646,852.6987 Q6722.3511,852.4082 6721.5542,852.4082 Q6720.666,852.4082 6720.1929,852.7651 Q6719.7197,853.1221 6719.7197,853.7861 Q6719.7197,854.3008 6720.0642,854.637 Q6720.4087,854.9731 6721.5044,855.3799 L6722.5586,855.7783 Q6724.0527,856.3262 6724.7583,857.231 Q6725.4639,858.1357 6725.4639,859.5137 Q6725.4639,861.3896 6724.3557,862.3152 Q6723.2476,863.2407 6721.0063,863.2407 Q6720.085,863.2407 6719.1594,863.0208 Q6718.2339,862.8008 6717.3706,862.3691 L6717.3706,859.8374 Q6718.3501,860.5347 6719.2673,860.875 Q6720.1846,861.2153 6721.0811,861.2153 Q6721.9858,861.2153 6722.4839,860.8044 Q6722.9819,860.3936 6722.9819,859.6548 Q6722.9819,859.0986 6722.6499,858.6794 Q6722.3179,858.2603 6721.687,858.0195 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="40" x="6741.25" y="861.791">Limits</text><line style="stroke:#181818;stroke-width:0.5;" x1="6590.5" x2="6899.5" y1="872.5" y2="872.5"/><ellipse cx="6600.5" cy="883.5" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="68" x="6609.5" y="890.0352">Cpu int64</text><ellipse cx="6600.5" cy="899.9883" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="95" x="6609.5" y="906.5234">Memory int64</text><ellipse cx="6600.5" cy="916.4766" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="69" x="6609.5" y="923.0117">Disk int64</text><ellipse cx="6600.5" cy="932.9648" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="73" x="6609.5" y="939.5">XFee int64</text><line style="stroke:#181818;stroke-width:0.5;" x1="6590.5" x2="6899.5" y1="946.4531" y2="946.4531"/><ellipse cx="6600.5" cy="957.4531" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="285" x="6609.5" y="963.9883">TotalGas(gasPrice *protos.GasPrice) int64</text><ellipse cx="6600.5" cy="973.9414" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="146" x="6609.5" y="980.4766">Add(l1 Limits) *Limits</text><ellipse cx="6600.5" cy="990.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="144" x="6609.5" y="996.9648">Sub(l1 Limits) *Limits</text><ellipse cx="6600.5" cy="1006.918" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="151" x="6609.5" y="1013.4531">Exceed(l1 Limits) bool</text></g><!--MD5=[0a75e18e160ceaa319ec32a7a40a42a3]
class contract.LogConfig--><g id="elem_contract.LogConfig"><rect codeLine="299" fill="#F1F1F1" height="196.3945" id="contract.LogConfig" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="148" x="6009" y="1286.5"/><ellipse cx="6044.25" cy="1302.5" fill="#7FFFD4" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M6043.9834,1303.563 Q6042.1323,1302.8574 6041.4766,1302.0813 Q6040.8208,1301.3052 6040.8208,1299.9937 Q6040.8208,1298.3086 6041.8999,1297.3457 Q6042.979,1296.3828 6044.8633,1296.3828 Q6045.7183,1296.3828 6046.5732,1296.5779 Q6047.4282,1296.7729 6048.2666,1297.1548 L6048.2666,1299.5454 Q6047.478,1298.9893 6046.6646,1298.6987 Q6045.8511,1298.4082 6045.0542,1298.4082 Q6044.166,1298.4082 6043.6929,1298.7651 Q6043.2197,1299.1221 6043.2197,1299.7861 Q6043.2197,1300.3008 6043.5642,1300.637 Q6043.9087,1300.9731 6045.0044,1301.3799 L6046.0586,1301.7783 Q6047.5527,1302.3262 6048.2583,1303.231 Q6048.9639,1304.1357 6048.9639,1305.5137 Q6048.9639,1307.3896 6047.8557,1308.3152 Q6046.7476,1309.2407 6044.5063,1309.2407 Q6043.585,1309.2407 6042.6594,1309.0208 Q6041.7339,1308.8008 6040.8706,1308.3691 L6040.8706,1305.8374 Q6041.8501,1306.5347 6042.7673,1306.875 Q6043.6846,1307.2153 6044.5811,1307.2153 Q6045.4858,1307.2153 6045.9839,1306.8044 Q6046.4819,1306.3936 6046.4819,1305.6548 Q6046.4819,1305.0986 6046.1499,1304.6794 Q6045.8179,1304.2603 6045.187,1304.0195 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="71" x="6062.75" y="1307.791">LogConfig</text><line style="stroke:#181818;stroke-width:0.5;" x1="6010" x2="6156" y1="1318.5" y2="1318.5"/><ellipse cx="6020" cy="1329.5" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="95" x="6029" y="1336.0352">Module string</text><ellipse cx="6020" cy="1345.9883" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="99" x="6029" y="1352.5234">Filepath string</text><ellipse cx="6020" cy="1362.4766" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="106" x="6029" y="1369.0117">Filename string</text><ellipse cx="6020" cy="1378.9648" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="70" x="6029" y="1385.5">Fmt string</text><ellipse cx="6020" cy="1395.4531" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="91" x="6029" y="1401.9883">Console bool</text><ellipse cx="6020" cy="1411.9414" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="78" x="6029" y="1418.4766">Level string</text><ellipse cx="6020" cy="1428.4297" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="75" x="6029" y="1434.9648">Async bool</text><ellipse cx="6020" cy="1444.918" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="117" x="6029" y="1451.4531">RotateInterval int</text><ellipse cx="6020" cy="1461.4063" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="122" x="6029" y="1467.9414">RotateBackups int</text><line style="stroke:#181818;stroke-width:0.5;" x1="6010" x2="6156" y1="1474.8945" y2="1474.8945"/></g><!--MD5=[ab739ead1db468da9240b14476fb011d]
class contract.Manager--><g id="elem_contract.Manager"><rect codeLine="311" fill="#F1F1F1" height="97.4648" id="contract.Manager" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="451" x="1438.5" y="882"/><ellipse cx="1629.75" cy="898" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1626.1777,894.2651 L1626.1777,892.1069 L1633.5571,892.1069 L1633.5571,894.2651 L1631.0918,894.2651 L1631.0918,902.3418 L1633.5571,902.3418 L1633.5571,904.5 L1626.1777,904.5 L1626.1777,902.3418 L1628.6431,902.3418 L1628.6431,894.2651 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="60" x="1650.25" y="903.291">Manager</text><line style="stroke:#181818;stroke-width:0.5;" x1="1439.5" x2="1888.5" y1="914" y2="914"/><line style="stroke:#181818;stroke-width:0.5;" x1="1439.5" x2="1888.5" y1="922" y2="922"/><ellipse cx="1449.5" cy="933" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="339" x="1458.5" y="939.5352">NewContext(cfg *ContextConfig) (Context, error)</text><ellipse cx="1449.5" cy="949.4883" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="425" x="1458.5" y="956.0234">NewStateSandbox(cfg *SandboxConfig) (StateSandbox, error)</text><ellipse cx="1449.5" cy="965.9766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="211" x="1458.5" y="972.5117">GetKernRegistry() KernRegistry</text></g><!--MD5=[b71d8ca06ac6f15c592dfaa439107c70]
class contract.ManagerConfig--><g id="elem_contract.ManagerConfig"><rect codeLine="317" fill="#F1F1F1" height="146.9297" id="contract.ManagerConfig" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="216" x="6192" y="1311"/><ellipse cx="6242.75" cy="1327" fill="#7FFFD4" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M6242.4834,1328.063 Q6240.6323,1327.3574 6239.9766,1326.5813 Q6239.3208,1325.8052 6239.3208,1324.4937 Q6239.3208,1322.8086 6240.3999,1321.8457 Q6241.479,1320.8828 6243.3633,1320.8828 Q6244.2183,1320.8828 6245.0732,1321.0779 Q6245.9282,1321.2729 6246.7666,1321.6548 L6246.7666,1324.0454 Q6245.978,1323.4893 6245.1646,1323.1987 Q6244.3511,1322.9082 6243.5542,1322.9082 Q6242.666,1322.9082 6242.1929,1323.2651 Q6241.7197,1323.6221 6241.7197,1324.2861 Q6241.7197,1324.8008 6242.0642,1325.137 Q6242.4087,1325.4731 6243.5044,1325.8799 L6244.5586,1326.2783 Q6246.0527,1326.8262 6246.7583,1327.731 Q6247.4639,1328.6357 6247.4639,1330.0137 Q6247.4639,1331.8896 6246.3557,1332.8152 Q6245.2476,1333.7407 6243.0063,1333.7407 Q6242.085,1333.7407 6241.1594,1333.5208 Q6240.2339,1333.3008 6239.3706,1332.8691 L6239.3706,1330.3374 Q6240.3501,1331.0347 6241.2673,1331.375 Q6242.1846,1331.7153 6243.0811,1331.7153 Q6243.9858,1331.7153 6244.4839,1331.3044 Q6244.9819,1330.8936 6244.9819,1330.1548 Q6244.9819,1329.5986 6244.6499,1329.1794 Q6244.3179,1328.7603 6243.687,1328.5195 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="106" x="6263.25" y="1332.291">ManagerConfig</text><line style="stroke:#181818;stroke-width:0.5;" x1="6193" x2="6407" y1="1343" y2="1343"/><ellipse cx="6203" cy="1354" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="94" x="6212" y="1360.5352">Basedir string</text><ellipse cx="6203" cy="1370.4883" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="101" x="6212" y="1377.0234">BCName string</text><ellipse cx="6203" cy="1386.9766" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="181" x="6212" y="1393.5117">EnvConf *xconfig.EnvConf</text><ellipse cx="6203" cy="1403.4648" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="110" x="6212" y="1410">Core ChainCore</text><ellipse cx="6203" cy="1419.9531" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="190" x="6212" y="1426.4883">XMReader ledger.XMReader</text><ellipse cx="6203" cy="1436.4414" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="162" x="6212" y="1442.9766">Config *ContractConfig</text><line style="stroke:#181818;stroke-width:0.5;" x1="6193" x2="6407" y1="1449.9297" y2="1449.9297"/></g><!--MD5=[3b45f4b3895845703121a02ae51424e9]
class contract.NativeConfig--><g id="elem_contract.NativeConfig"><rect codeLine="326" fill="#F1F1F1" height="146.9297" id="contract.NativeConfig" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="214" x="3296" y="857"/><ellipse cx="3354.75" cy="873" fill="#7FFFD4" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M3354.4834,874.063 Q3352.6323,873.3574 3351.9766,872.5813 Q3351.3208,871.8052 3351.3208,870.4937 Q3351.3208,868.8086 3352.3999,867.8457 Q3353.479,866.8828 3355.3633,866.8828 Q3356.2183,866.8828 3357.0732,867.0779 Q3357.9282,867.2729 3358.7666,867.6548 L3358.7666,870.0454 Q3357.978,869.4893 3357.1646,869.1987 Q3356.3511,868.9082 3355.5542,868.9082 Q3354.666,868.9082 3354.1929,869.2651 Q3353.7197,869.6221 3353.7197,870.2861 Q3353.7197,870.8008 3354.0642,871.137 Q3354.4087,871.4731 3355.5044,871.8799 L3356.5586,872.2783 Q3358.0527,872.8262 3358.7583,873.731 Q3359.4639,874.6357 3359.4639,876.0137 Q3359.4639,877.8896 3358.3557,878.8152 Q3357.2476,879.7407 3355.0063,879.7407 Q3354.085,879.7407 3353.1594,879.5208 Q3352.2339,879.3008 3351.3706,878.8691 L3351.3706,876.3374 Q3352.3501,877.0347 3353.2673,877.375 Q3354.1846,877.7153 3355.0811,877.7153 Q3355.9858,877.7153 3356.4839,877.3044 Q3356.9819,876.8936 3356.9819,876.1548 Q3356.9819,875.5986 3356.6499,875.1794 Q3356.3179,874.7603 3355.687,874.5195 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="88" x="3375.25" y="878.291">NativeConfig</text><line style="stroke:#181818;stroke-width:0.5;" x1="3297" x2="3509" y1="889" y2="889"/><ellipse cx="3307" cy="900" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="85" x="3316" y="906.5352">Driver string</text><ellipse cx="3307" cy="916.4883" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="110" x="3316" y="923.0234">StopTimeout int</text><ellipse cx="3307" cy="932.9766" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="188" x="3316" y="939.5117">Docker NativeDockerConfig</text><ellipse cx="3307" cy="949.4648" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="81" x="3316" y="956">Enable bool</text><line style="stroke:#181818;stroke-width:0.5;" x1="3297" x2="3509" y1="962.9531" y2="962.9531"/><ellipse cx="3307" cy="973.9531" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="134" x="3316" y="980.4883">DriverName() string</text><ellipse cx="3307" cy="990.4414" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102" x="3316" y="996.9766">IsEnable() bool</text></g><!--MD5=[b9258402d62d04cd29dc12dd4d7db08d]
class contract.NativeDockerConfig--><g id="elem_contract.NativeDockerConfig"><rect codeLine="336" fill="#F1F1F1" height="113.9531" id="contract.NativeDockerConfig" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="168" x="6443" y="1327.5"/><ellipse cx="6458" cy="1343.5" fill="#7FFFD4" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M6457.7334,1344.563 Q6455.8823,1343.8574 6455.2266,1343.0813 Q6454.5708,1342.3052 6454.5708,1340.9937 Q6454.5708,1339.3086 6455.6499,1338.3457 Q6456.729,1337.3828 6458.6133,1337.3828 Q6459.4683,1337.3828 6460.3232,1337.5779 Q6461.1782,1337.7729 6462.0166,1338.1548 L6462.0166,1340.5454 Q6461.228,1339.9893 6460.4146,1339.6987 Q6459.6011,1339.4082 6458.8042,1339.4082 Q6457.916,1339.4082 6457.4429,1339.7651 Q6456.9697,1340.1221 6456.9697,1340.7861 Q6456.9697,1341.3008 6457.3142,1341.637 Q6457.6587,1341.9731 6458.7544,1342.3799 L6459.8086,1342.7783 Q6461.3027,1343.3262 6462.0083,1344.231 Q6462.7139,1345.1357 6462.7139,1346.5137 Q6462.7139,1348.3896 6461.6057,1349.3152 Q6460.4976,1350.2407 6458.2563,1350.2407 Q6457.335,1350.2407 6456.4094,1350.0208 Q6455.4839,1349.8008 6454.6206,1349.3691 L6454.6206,1346.8374 Q6455.6001,1347.5347 6456.5173,1347.875 Q6457.4346,1348.2153 6458.3311,1348.2153 Q6459.2358,1348.2153 6459.7339,1347.8044 Q6460.2319,1347.3936 6460.2319,1346.6548 Q6460.2319,1346.0986 6459.8999,1345.6794 Q6459.5679,1345.2603 6458.937,1345.0195 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="136" x="6472" y="1348.791">NativeDockerConfig</text><line style="stroke:#181818;stroke-width:0.5;" x1="6444" x2="6610" y1="1359.5" y2="1359.5"/><ellipse cx="6454" cy="1370.5" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="81" x="6463" y="1377.0352">Enable bool</text><ellipse cx="6454" cy="1386.9883" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="6463" y="1393.5234">ImageName string</text><ellipse cx="6454" cy="1403.4766" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="88" x="6463" y="1410.0117">Cpus float32</text><ellipse cx="6454" cy="1419.9648" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="99" x="6463" y="1426.5">Memory string</text><line style="stroke:#181818;stroke-width:0.5;" x1="6444" x2="6610" y1="1433.4531" y2="1433.4531"/></g><!--MD5=[80277c699bb64eed2f4bcacbc4874ea2]
class contract.RWSet--><g id="elem_contract.RWSet"><rect codeLine="343" fill="#F1F1F1" height="80.9766" id="contract.RWSet" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="225" x="6646.5" y="1344"/><ellipse cx="6733.75" cy="1360" fill="#7FFFD4" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M6733.4834,1361.063 Q6731.6323,1360.3574 6730.9766,1359.5813 Q6730.3208,1358.8052 6730.3208,1357.4937 Q6730.3208,1355.8086 6731.3999,1354.8457 Q6732.479,1353.8828 6734.3633,1353.8828 Q6735.2183,1353.8828 6736.0732,1354.0779 Q6736.9282,1354.2729 6737.7666,1354.6548 L6737.7666,1357.0454 Q6736.978,1356.4893 6736.1646,1356.1987 Q6735.3511,1355.9082 6734.5542,1355.9082 Q6733.666,1355.9082 6733.1929,1356.2651 Q6732.7197,1356.6221 6732.7197,1357.2861 Q6732.7197,1357.8008 6733.0642,1358.137 Q6733.4087,1358.4731 6734.5044,1358.8799 L6735.5586,1359.2783 Q6737.0527,1359.8262 6737.7583,1360.731 Q6738.4639,1361.6357 6738.4639,1363.0137 Q6738.4639,1364.8896 6737.3557,1365.8152 Q6736.2476,1366.7407 6734.0063,1366.7407 Q6733.085,1366.7407 6732.1594,1366.5208 Q6731.2339,1366.3008 6730.3706,1365.8691 L6730.3706,1363.3374 Q6731.3501,1364.0347 6732.2673,1364.375 Q6733.1846,1364.7153 6734.0811,1364.7153 Q6734.9858,1364.7153 6735.4839,1364.3044 Q6735.9819,1363.8936 6735.9819,1363.1548 Q6735.9819,1362.5986 6735.6499,1362.1794 Q6735.3179,1361.7603 6734.687,1361.5195 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="42" x="6754.25" y="1365.291">RWSet</text><line style="stroke:#181818;stroke-width:0.5;" x1="6647.5" x2="6870.5" y1="1376" y2="1376"/><ellipse cx="6657.5" cy="1387" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="199" x="6666.5" y="1393.5352">RSet []*ledger.VersionedData</text><ellipse cx="6657.5" cy="1403.4883" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="164" x="6666.5" y="1410.0234">WSet []*ledger.PureData</text><line style="stroke:#181818;stroke-width:0.5;" x1="6647.5" x2="6870.5" y1="1416.9766" y2="1416.9766"/></g><!--MD5=[8459a71217cf18e2b3fabd61b7c6d5c2]
class contract.Response--><g id="elem_contract.Response"><rect codeLine="348" fill="#F1F1F1" height="97.4648" id="contract.Response" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="129" x="6044.5" y="1650"/><ellipse cx="6073.45" cy="1666" fill="#7FFFD4" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M6073.1834,1667.063 Q6071.3323,1666.3574 6070.6766,1665.5813 Q6070.0208,1664.8052 6070.0208,1663.4937 Q6070.0208,1661.8086 6071.0999,1660.8457 Q6072.179,1659.8828 6074.0633,1659.8828 Q6074.9183,1659.8828 6075.7732,1660.0779 Q6076.6282,1660.2729 6077.4666,1660.6548 L6077.4666,1663.0454 Q6076.678,1662.4893 6075.8646,1662.1987 Q6075.0511,1661.9082 6074.2542,1661.9082 Q6073.366,1661.9082 6072.8929,1662.2651 Q6072.4197,1662.6221 6072.4197,1663.2861 Q6072.4197,1663.8008 6072.7642,1664.137 Q6073.1087,1664.4731 6074.2044,1664.8799 L6075.2586,1665.2783 Q6076.7527,1665.8262 6077.4583,1666.731 Q6078.1639,1667.6357 6078.1639,1669.0137 Q6078.1639,1670.8896 6077.0557,1671.8152 Q6075.9476,1672.7407 6073.7063,1672.7407 Q6072.785,1672.7407 6071.8594,1672.5208 Q6070.9339,1672.3008 6070.0706,1671.8691 L6070.0706,1669.3374 Q6071.0501,1670.0347 6071.9673,1670.375 Q6072.8846,1670.7153 6073.7811,1670.7153 Q6074.6858,1670.7153 6075.1839,1670.3044 Q6075.6819,1669.8936 6075.6819,1669.1548 Q6075.6819,1668.5986 6075.3499,1668.1794 Q6075.0179,1667.7603 6074.387,1667.5195 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="66" x="6090.55" y="1671.291">Response</text><line style="stroke:#181818;stroke-width:0.5;" x1="6045.5" x2="6172.5" y1="1682" y2="1682"/><ellipse cx="6055.5" cy="1693" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="64" x="6064.5" y="1699.5352">Status int</text><ellipse cx="6055.5" cy="1709.4883" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="103" x="6064.5" y="1716.0234">Message string</text><ellipse cx="6055.5" cy="1725.9766" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="76" x="6064.5" y="1732.5117">Body []byte</text><line style="stroke:#181818;stroke-width:0.5;" x1="6045.5" x2="6172.5" y1="1739.4648" y2="1739.4648"/></g><!--MD5=[64ba6d896a80362f224f5ee2aafef8fe]
class contract.SandboxConfig--><g id="elem_contract.SandboxConfig"><rect codeLine="354" fill="#F1F1F1" height="80.9766" id="contract.SandboxConfig" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="216" x="6209" y="1658"/><ellipse cx="6259.25" cy="1674" fill="#7FFFD4" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M6258.9834,1675.063 Q6257.1323,1674.3574 6256.4766,1673.5813 Q6255.8208,1672.8052 6255.8208,1671.4937 Q6255.8208,1669.8086 6256.8999,1668.8457 Q6257.979,1667.8828 6259.8633,1667.8828 Q6260.7183,1667.8828 6261.5732,1668.0779 Q6262.4282,1668.2729 6263.2666,1668.6548 L6263.2666,1671.0454 Q6262.478,1670.4893 6261.6646,1670.1987 Q6260.8511,1669.9082 6260.0542,1669.9082 Q6259.166,1669.9082 6258.6929,1670.2651 Q6258.2197,1670.6221 6258.2197,1671.2861 Q6258.2197,1671.8008 6258.5642,1672.137 Q6258.9087,1672.4731 6260.0044,1672.8799 L6261.0586,1673.2783 Q6262.5527,1673.8262 6263.2583,1674.731 Q6263.9639,1675.6357 6263.9639,1677.0137 Q6263.9639,1678.8896 6262.8557,1679.8152 Q6261.7476,1680.7407 6259.5063,1680.7407 Q6258.585,1680.7407 6257.6594,1680.5208 Q6256.7339,1680.3008 6255.8706,1679.8691 L6255.8706,1677.3374 Q6256.8501,1678.0347 6257.7673,1678.375 Q6258.6846,1678.7153 6259.5811,1678.7153 Q6260.4858,1678.7153 6260.9839,1678.3044 Q6261.4819,1677.8936 6261.4819,1677.1548 Q6261.4819,1676.5986 6261.1499,1676.1794 Q6260.8179,1675.7603 6260.187,1675.5195 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="6279.75" y="1679.291">SandboxConfig</text><line style="stroke:#181818;stroke-width:0.5;" x1="6210" x2="6424" y1="1690" y2="1690"/><ellipse cx="6220" cy="1701" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="190" x="6229" y="1707.5352">XMReader ledger.XMReader</text><ellipse cx="6220" cy="1717.4883" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="172" x="6229" y="1724.0234">UTXOReader UtxoReader</text><line style="stroke:#181818;stroke-width:0.5;" x1="6210" x2="6424" y1="1730.9766" y2="1730.9766"/></g><!--MD5=[48afb5ce505f7a5f7777e54db76bfc2f]
class contract.State--><g id="elem_contract.State"><rect codeLine="359" fill="#F1F1F1" height="48" id="contract.State" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="66" x="5022" y="1360.5"/><ellipse cx="5037" cy="1376.5" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5033.4277,1372.7651 L5033.4277,1370.6069 L5040.8071,1370.6069 L5040.8071,1372.7651 L5038.3418,1372.7651 L5038.3418,1380.8418 L5040.8071,1380.8418 L5040.8071,1383 L5033.4277,1383 L5033.4277,1380.8418 L5035.8931,1380.8418 L5035.8931,1372.7651 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="34" x="5051" y="1381.791">State</text><line style="stroke:#181818;stroke-width:0.5;" x1="5023" x2="5087" y1="1392.5" y2="1392.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="5023" x2="5087" y1="1400.5" y2="1400.5"/></g><!--MD5=[08a7b0a788f0ca367674ae16a794f3b9]
class contract.StateSandbox--><g id="elem_contract.StateSandbox"><rect codeLine="361" fill="#F1F1F1" height="97.4648" id="contract.StateSandbox" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="209" x="5500.5" y="1650"/><ellipse cx="5553.25" cy="1666" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5549.6777,1662.2651 L5549.6777,1660.1069 L5557.0571,1660.1069 L5557.0571,1662.2651 L5554.5918,1662.2651 L5554.5918,1670.3418 L5557.0571,1670.3418 L5557.0571,1672.5 L5549.6777,1672.5 L5549.6777,1670.3418 L5552.1431,1670.3418 L5552.1431,1662.2651 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="95" x="5573.75" y="1671.291">StateSandbox</text><line style="stroke:#181818;stroke-width:0.5;" x1="5501.5" x2="5708.5" y1="1682" y2="1682"/><line style="stroke:#181818;stroke-width:0.5;" x1="5501.5" x2="5708.5" y1="1690" y2="1690"/><ellipse cx="5511.5" cy="1701" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="86" x="5520.5" y="1707.5352">Flush() error</text><ellipse cx="5511.5" cy="1717.4883" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="105" x="5520.5" y="1724.0234">RWSet() *RWSet</text><ellipse cx="5511.5" cy="1733.9766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="183" x="5520.5" y="1740.5117">UTXORWSet() *UTXORWSet</text></g><!--MD5=[5ad1ed6a58b428848dd91c1d4aaf6003]
class contract.UTXORWSet--><g id="elem_contract.UTXORWSet"><rect codeLine="367" fill="#F1F1F1" height="80.9766" id="contract.UTXORWSet" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="195" x="6460.5" y="1658"/><ellipse cx="6513.25" cy="1674" fill="#7FFFD4" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M6512.9834,1675.063 Q6511.1323,1674.3574 6510.4766,1673.5813 Q6509.8208,1672.8052 6509.8208,1671.4937 Q6509.8208,1669.8086 6510.8999,1668.8457 Q6511.979,1667.8828 6513.8633,1667.8828 Q6514.7183,1667.8828 6515.5732,1668.0779 Q6516.4282,1668.2729 6517.2666,1668.6548 L6517.2666,1671.0454 Q6516.478,1670.4893 6515.6646,1670.1987 Q6514.8511,1669.9082 6514.0542,1669.9082 Q6513.166,1669.9082 6512.6929,1670.2651 Q6512.2197,1670.6221 6512.2197,1671.2861 Q6512.2197,1671.8008 6512.5642,1672.137 Q6512.9087,1672.4731 6514.0044,1672.8799 L6515.0586,1673.2783 Q6516.5527,1673.8262 6517.2583,1674.731 Q6517.9639,1675.6357 6517.9639,1677.0137 Q6517.9639,1678.8896 6516.8557,1679.8152 Q6515.7476,1680.7407 6513.5063,1680.7407 Q6512.585,1680.7407 6511.6594,1680.5208 Q6510.7339,1680.3008 6509.8706,1679.8691 L6509.8706,1677.3374 Q6510.8501,1678.0347 6511.7673,1678.375 Q6512.6846,1678.7153 6513.5811,1678.7153 Q6514.4858,1678.7153 6514.9839,1678.3044 Q6515.4819,1677.8936 6515.4819,1677.1548 Q6515.4819,1676.5986 6515.1499,1676.1794 Q6514.8179,1675.7603 6514.187,1675.5195 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="81" x="6533.75" y="1679.291">UTXORWSet</text><line style="stroke:#181818;stroke-width:0.5;" x1="6461.5" x2="6654.5" y1="1690" y2="1690"/><ellipse cx="6471.5" cy="1701" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="153" x="6480.5" y="1707.5352">Rset []*protos.TxInput</text><ellipse cx="6471.5" cy="1717.4883" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="169" x="6480.5" y="1724.0234">WSet []*protos.TxOutput</text><line style="stroke:#181818;stroke-width:0.5;" x1="6461.5" x2="6654.5" y1="1730.9766" y2="1730.9766"/></g><!--MD5=[36a1e7e7390182e2473bfa2281a81ba9]
class contract.UTXOState--><g id="elem_contract.UTXOState"><rect codeLine="372" fill="#F1F1F1" height="64.4883" id="contract.UTXOState" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="392" x="5331" y="898.5"/><ellipse cx="5486.25" cy="914.5" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5482.6777,910.7651 L5482.6777,908.6069 L5490.0571,908.6069 L5490.0571,910.7651 L5487.5918,910.7651 L5487.5918,918.8418 L5490.0571,918.8418 L5490.0571,921 L5482.6777,921 L5482.6777,918.8418 L5485.1431,918.8418 L5485.1431,910.7651 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="73" x="5506.75" y="919.791">UTXOState</text><line style="stroke:#181818;stroke-width:0.5;" x1="5332" x2="5722" y1="930.5" y2="930.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="5332" x2="5722" y1="938.5" y2="938.5"/><ellipse cx="5342" cy="949.5" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="366" x="5351" y="956.0352">Transfer(from string, to string, amount *big.Int) error</text></g><!--MD5=[8b00b018d81edc09f461ebcc12bf7f25]
class contract.UtxoReader--><g id="elem_contract.UtxoReader"><rect codeLine="376" fill="#F1F1F1" height="64.4883" id="contract.UtxoReader" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="595" x="6690.5" y="1666.5"/><ellipse cx="6943.25" cy="1682.5" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6939.6777,1678.7651 L6939.6777,1676.6069 L6947.0571,1676.6069 L6947.0571,1678.7651 L6944.5918,1678.7651 L6944.5918,1686.8418 L6947.0571,1686.8418 L6947.0571,1689 L6939.6777,1689 L6939.6777,1686.8418 L6942.1431,1686.8418 L6942.1431,1678.7651 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="81" x="6963.75" y="1687.791">UtxoReader</text><line style="stroke:#181818;stroke-width:0.5;" x1="6691.5" x2="7284.5" y1="1698.5" y2="1698.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="6691.5" x2="7284.5" y1="1706.5" y2="1706.5"/><ellipse cx="6701.5" cy="1717.5" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="569" x="6710.5" y="1724.0352">SelectUtxo( string,  *big.Int,  bool,  bool) ([]*protos.TxInput, [][]byte, *big.Int, error)</text></g><!--MD5=[acfac82baeaa729661df18b4e4a0a43a]
class contract.WasmConfig--><g id="elem_contract.WasmConfig"><rect codeLine="380" fill="#F1F1F1" height="130.4414" id="contract.WasmConfig" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="160" x="5758" y="865.5"/><ellipse cx="5791.9" cy="881.5" fill="#7FFFD4" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M5791.6334,882.563 Q5789.7823,881.8574 5789.1266,881.0813 Q5788.4708,880.3052 5788.4708,878.9937 Q5788.4708,877.3086 5789.5499,876.3457 Q5790.629,875.3828 5792.5133,875.3828 Q5793.3683,875.3828 5794.2232,875.5779 Q5795.0782,875.7729 5795.9166,876.1548 L5795.9166,878.5454 Q5795.128,877.9893 5794.3146,877.6987 Q5793.5011,877.4082 5792.7042,877.4082 Q5791.816,877.4082 5791.3429,877.7651 Q5790.8697,878.1221 5790.8697,878.7861 Q5790.8697,879.3008 5791.2142,879.637 Q5791.5587,879.9731 5792.6544,880.3799 L5793.7086,880.7783 Q5795.2027,881.3262 5795.9083,882.231 Q5796.6139,883.1357 5796.6139,884.5137 Q5796.6139,886.3896 5795.5057,887.3152 Q5794.3976,888.2407 5792.1563,888.2407 Q5791.235,888.2407 5790.3094,888.0208 Q5789.3839,887.8008 5788.5206,887.3691 L5788.5206,884.8374 Q5789.5001,885.5347 5790.4173,885.875 Q5791.3346,886.2153 5792.2311,886.2153 Q5793.1358,886.2153 5793.6339,885.8044 Q5794.1319,885.3936 5794.1319,884.6548 Q5794.1319,884.0986 5793.7999,883.6794 Q5793.4679,883.2603 5792.837,883.0195 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="86" x="5810.1" y="886.791">WasmConfig</text><line style="stroke:#181818;stroke-width:0.5;" x1="5759" x2="5917" y1="897.5" y2="897.5"/><ellipse cx="5769" cy="908.5" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="81" x="5778" y="915.0352">Enable bool</text><ellipse cx="5769" cy="924.9883" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="85" x="5778" y="931.5234">Driver string</text><ellipse cx="5769" cy="941.4766" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="110" x="5778" y="948.0117">XVM XVMConfig</text><line style="stroke:#181818;stroke-width:0.5;" x1="5759" x2="5917" y1="954.9648" y2="954.9648"/><ellipse cx="5769" cy="965.9648" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="134" x="5778" y="972.5">DriverName() string</text><ellipse cx="5769" cy="982.4531" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102" x="5778" y="988.9883">IsEnable() bool</text></g><!--MD5=[864fe0a491e97a35fe997baa15e19270]
class contract.XMState--><g id="elem_contract.XMState"><rect codeLine="389" fill="#F1F1F1" height="113.9531" id="contract.XMState" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="481" x="4814.5" y="873.5"/><ellipse cx="5023.25" cy="889.5" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5019.6777,885.7651 L5019.6777,883.6069 L5027.0571,883.6069 L5027.0571,885.7651 L5024.5918,885.7651 L5024.5918,893.8418 L5027.0571,893.8418 L5027.0571,896 L5019.6777,896 L5019.6777,893.8418 L5022.1431,893.8418 L5022.1431,885.7651 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="55" x="5043.75" y="894.791">XMState</text><line style="stroke:#181818;stroke-width:0.5;" x1="4815.5" x2="5294.5" y1="905.5" y2="905.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="4815.5" x2="5294.5" y1="913.5" y2="913.5"/><ellipse cx="4825.5" cy="924.5" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="293" x="4834.5" y="931.0352">Get(bucket string, key []byte) ([]byte, error)</text><ellipse cx="4825.5" cy="940.9883" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="455" x="4834.5" y="947.5234">Select(bucket string, startKey []byte, endKey []byte) (Iterator, error)</text><ellipse cx="4825.5" cy="957.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="322" x="4834.5" y="964.0117">Put(bucket string, key []byte, value []byte) error</text><ellipse cx="4825.5" cy="973.9648" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="235" x="4834.5" y="980.5">Del(bucket string, key []byte) error</text></g><!--MD5=[eb5af4e7e2f76ea728e0510c971061f5]
class contract.XVMConfig--><g id="elem_contract.XVMConfig"><rect codeLine="396" fill="#F1F1F1" height="64.4883" id="contract.XVMConfig" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="108" x="6355" y="1923"/><ellipse cx="6370" cy="1939" fill="#7FFFD4" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M6369.7334,1940.063 Q6367.8823,1939.3574 6367.2266,1938.5813 Q6366.5708,1937.8052 6366.5708,1936.4937 Q6366.5708,1934.8086 6367.6499,1933.8457 Q6368.729,1932.8828 6370.6133,1932.8828 Q6371.4683,1932.8828 6372.3232,1933.0779 Q6373.1782,1933.2729 6374.0166,1933.6548 L6374.0166,1936.0454 Q6373.228,1935.4893 6372.4146,1935.1987 Q6371.6011,1934.9082 6370.8042,1934.9082 Q6369.916,1934.9082 6369.4429,1935.2651 Q6368.9697,1935.6221 6368.9697,1936.2861 Q6368.9697,1936.8008 6369.3142,1937.137 Q6369.6587,1937.4731 6370.7544,1937.8799 L6371.8086,1938.2783 Q6373.3027,1938.8262 6374.0083,1939.731 Q6374.7139,1940.6357 6374.7139,1942.0137 Q6374.7139,1943.8896 6373.6057,1944.8152 Q6372.4976,1945.7407 6370.2563,1945.7407 Q6369.335,1945.7407 6368.4094,1945.5208 Q6367.4839,1945.3008 6366.6206,1944.8691 L6366.6206,1942.3374 Q6367.6001,1943.0347 6368.5173,1943.375 Q6369.4346,1943.7153 6370.3311,1943.7153 Q6371.2358,1943.7153 6371.7339,1943.3044 Q6372.2319,1942.8936 6372.2319,1942.1548 Q6372.2319,1941.5986 6371.8999,1941.1794 Q6371.5679,1940.7603 6370.937,1940.5195 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="76" x="6384" y="1944.291">XVMConfig</text><line style="stroke:#181818;stroke-width:0.5;" x1="6356" x2="6462" y1="1955" y2="1955"/><ellipse cx="6366" cy="1966" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="81" x="6375" y="1972.5352">OptLevel int</text><line style="stroke:#181818;stroke-width:0.5;" x1="6356" x2="6462" y1="1979.4883" y2="1979.4883"/></g><!--MD5=[5bc81e70b1c7d8f333e04937f23e3a8d]
class contract.XkernelConfig--><g id="elem_contract.XkernelConfig"><rect codeLine="400" fill="#F1F1F1" height="130.4414" id="contract.XkernelConfig" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="172" x="4607" y="865.5"/><ellipse cx="4640.9" cy="881.5" fill="#7FFFD4" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M4640.6334,882.563 Q4638.7823,881.8574 4638.1266,881.0813 Q4637.4708,880.3052 4637.4708,878.9937 Q4637.4708,877.3086 4638.5499,876.3457 Q4639.629,875.3828 4641.5133,875.3828 Q4642.3683,875.3828 4643.2232,875.5779 Q4644.0782,875.7729 4644.9166,876.1548 L4644.9166,878.5454 Q4644.128,877.9893 4643.3146,877.6987 Q4642.5011,877.4082 4641.7042,877.4082 Q4640.816,877.4082 4640.3429,877.7651 Q4639.8697,878.1221 4639.8697,878.7861 Q4639.8697,879.3008 4640.2142,879.637 Q4640.5587,879.9731 4641.6544,880.3799 L4642.7086,880.7783 Q4644.2027,881.3262 4644.9083,882.231 Q4645.6139,883.1357 4645.6139,884.5137 Q4645.6139,886.3896 4644.5057,887.3152 Q4643.3976,888.2407 4641.1563,888.2407 Q4640.235,888.2407 4639.3094,888.0208 Q4638.3839,887.8008 4637.5206,887.3691 L4637.5206,884.8374 Q4638.5001,885.5347 4639.4173,885.875 Q4640.3346,886.2153 4641.2311,886.2153 Q4642.1358,886.2153 4642.6339,885.8044 Q4643.1319,885.3936 4643.1319,884.6548 Q4643.1319,884.0986 4642.7999,883.6794 Q4642.4679,883.2603 4641.837,883.0195 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="4659.1" y="886.791">XkernelConfig</text><line style="stroke:#181818;stroke-width:0.5;" x1="4608" x2="4778" y1="897.5" y2="897.5"/><ellipse cx="4618" cy="908.5" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="81" x="4627" y="915.0352">Enable bool</text><ellipse cx="4618" cy="924.9883" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="85" x="4627" y="931.5234">Driver string</text><ellipse cx="4618" cy="941.4766" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="146" x="4627" y="948.0117">Registry KernRegistry</text><line style="stroke:#181818;stroke-width:0.5;" x1="4608" x2="4778" y1="954.9648" y2="954.9648"/><ellipse cx="4618" cy="965.9648" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="134" x="4627" y="972.5">DriverName() string</text><ellipse cx="4618" cy="982.4531" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102" x="4627" y="988.9883">IsEnable() bool</text></g><!--MD5=[cdf421f7b9c797d53b775303222f0385]
class contract.KernMethod--><g id="elem_contract.KernMethod"><rect codeLine="409" fill="#F1F1F1" height="48" id="contract.KernMethod" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="116" x="3070" y="1360.5"/><ellipse cx="3085" cy="1376.5" fill="#FF7700" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M3086.3418,1383.75 L3083.8931,1383.75 L3083.8931,1373.4985 L3080.7471,1373.4985 L3080.7471,1371.3569 L3089.4878,1371.3569 L3089.4878,1373.4985 L3086.3418,1373.4985 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="84" x="3099" y="1381.791">KernMethod</text><line style="stroke:#181818;stroke-width:0.5;" x1="3071" x2="3185" y1="1392.5" y2="1392.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="3071" x2="3185" y1="1400.5" y2="1400.5"/></g><!--MD5=[6ba7b0a3080fbf580a8a89c801300ea6]
class contract.NewManagerFunc--><g id="elem_contract.NewManagerFunc"><rect codeLine="411" fill="#F1F1F1" height="48" id="contract.NewManagerFunc" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="154" x="3619" y="1360.5"/><ellipse cx="3634" cy="1376.5" fill="#FF7700" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M3635.3418,1383.75 L3632.8931,1383.75 L3632.8931,1373.4985 L3629.7471,1373.4985 L3629.7471,1371.3569 L3638.4878,1371.3569 L3638.4878,1373.4985 L3635.3418,1373.4985 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="122" x="3648" y="1381.791">NewManagerFunc</text><line style="stroke:#181818;stroke-width:0.5;" x1="3620" x2="3772" y1="1392.5" y2="1392.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="3620" x2="3772" y1="1400.5" y2="1400.5"/></g><!--MD5=[42941e239e714588aef084dde21006e1]
class contract.<font color=blue>func</font>(*ManagerConfig) (Manager, error)--><g id="elem_contract.&lt;font color=blue&gt;func&lt;/font&gt;(*ManagerConfig) (Manager, error)"><rect fill="#F1F1F1" height="48" id="contract.&lt;font color=blue&gt;func&lt;/font&gt;(*ManagerConfig) (Manager, error)" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="302" x="3545" y="906.5"/><ellipse cx="3560" cy="922.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3562.4731,928.6431 Q3561.8921,928.9419 3561.2529,929.0913 Q3560.6138,929.2407 3559.9082,929.2407 Q3557.4014,929.2407 3556.0815,927.5889 Q3554.7617,925.937 3554.7617,922.8159 Q3554.7617,919.6865 3556.0815,918.0347 Q3557.4014,916.3828 3559.9082,916.3828 Q3560.6138,916.3828 3561.2612,916.5322 Q3561.9087,916.6816 3562.4731,916.9805 L3562.4731,919.7031 Q3561.8423,919.1221 3561.2488,918.8523 Q3560.6553,918.5825 3560.0244,918.5825 Q3558.6797,918.5825 3557.9949,919.6492 Q3557.3101,920.7158 3557.3101,922.8159 Q3557.3101,924.9077 3557.9949,925.9744 Q3558.6797,927.041 3560.0244,927.041 Q3560.6553,927.041 3561.2488,926.7712 Q3561.8423,926.5015 3562.4731,925.9204 Z " fill="#000000"/><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="3574" y="927.791">func</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="240" x="3604" y="927.791">(*ManagerConfig) (Manager, error)</text><line style="stroke:#181818;stroke-width:0.5;" x1="3546" x2="3846" y1="938.5" y2="938.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="3546" x2="3846" y1="946.5" y2="946.5"/></g><!--MD5=[c4983721c58dce5fda69f5486b65ee40]
class contract.<font color=blue>func</font>(KContext) (*Response, error)--><g id="elem_contract.&lt;font color=blue&gt;func&lt;/font&gt;(KContext) (*Response, error)"><rect fill="#F1F1F1" height="48" id="contract.&lt;font color=blue&gt;func&lt;/font&gt;(KContext) (*Response, error)" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="266" x="2995" y="906.5"/><ellipse cx="3010" cy="922.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3012.4731,928.6431 Q3011.8921,928.9419 3011.2529,929.0913 Q3010.6138,929.2407 3009.9082,929.2407 Q3007.4014,929.2407 3006.0815,927.5889 Q3004.7617,925.937 3004.7617,922.8159 Q3004.7617,919.6865 3006.0815,918.0347 Q3007.4014,916.3828 3009.9082,916.3828 Q3010.6138,916.3828 3011.2612,916.5322 Q3011.9087,916.6816 3012.4731,916.9805 L3012.4731,919.7031 Q3011.8423,919.1221 3011.2488,918.8523 Q3010.6553,918.5825 3010.0244,918.5825 Q3008.6797,918.5825 3007.9949,919.6492 Q3007.3101,920.7158 3007.3101,922.8159 Q3007.3101,924.9077 3007.9949,925.9744 Q3008.6797,927.041 3010.0244,927.041 Q3010.6553,927.041 3011.2488,926.7712 Q3011.8423,926.5015 3012.4731,925.9204 Z " fill="#000000"/><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="3024" y="927.791">func</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="204" x="3054" y="927.791">(KContext) (*Response, error)</text><line style="stroke:#181818;stroke-width:0.5;" x1="2996" x2="3260" y1="938.5" y2="938.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="2996" x2="3260" y1="946.5" y2="946.5"/></g><!--MD5=[dc5dac9ac65c870971baa52887b804ca]
class kernel.kcontextImpl--><g id="elem_kernel.kcontextImpl"><rect codeLine="427" fill="#F1F1F1" height="229.3711" id="kernel.kcontextImpl" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="761" x="6971.5" y="2120"/><ellipse cx="7302.75" cy="2136" fill="#7FFFD4" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M7302.4834,2137.063 Q7300.6323,2136.3574 7299.9766,2135.5813 Q7299.3208,2134.8052 7299.3208,2133.4937 Q7299.3208,2131.8086 7300.3999,2130.8457 Q7301.479,2129.8828 7303.3633,2129.8828 Q7304.2183,2129.8828 7305.0732,2130.0779 Q7305.9282,2130.2729 7306.7666,2130.6548 L7306.7666,2133.0454 Q7305.978,2132.4893 7305.1646,2132.1987 Q7304.3511,2131.9082 7303.5542,2131.9082 Q7302.666,2131.9082 7302.1929,2132.2651 Q7301.7197,2132.6221 7301.7197,2133.2861 Q7301.7197,2133.8008 7302.0642,2134.137 Q7302.4087,2134.4731 7303.5044,2134.8799 L7304.5586,2135.2783 Q7306.0527,2135.8262 7306.7583,2136.731 Q7307.4639,2137.6357 7307.4639,2139.0137 Q7307.4639,2140.8896 7306.3557,2141.8152 Q7305.2476,2142.7407 7303.0063,2142.7407 Q7302.085,2142.7407 7301.1594,2142.5208 Q7300.2339,2142.3008 7299.3706,2141.8691 L7299.3706,2139.3374 Q7300.3501,2140.0347 7301.2673,2140.375 Q7302.1846,2140.7153 7303.0811,2140.7153 Q7303.9858,2140.7153 7304.4839,2140.3044 Q7304.9819,2139.8936 7304.9819,2139.1548 Q7304.9819,2138.5986 7304.6499,2138.1794 Q7304.3179,2137.7603 7303.687,2137.5195 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90" x="7323.25" y="2141.291">kcontextImpl</text><line style="stroke:#181818;stroke-width:0.5;" x1="6972.5" x2="7731.5" y1="2152" y2="2152"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6979.5" y="2160"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="136" x="6991.5" y="2169.5352">ctx *bridge.Context</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6979.5" y="2176.4883"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="197" x="6991.5" y="2186.0234">syscall *bridge.SyscallService</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6979.5" y="2192.9766"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="137" x="6991.5" y="2202.5117">used contract.Limits</text><line style="stroke:#181818;stroke-width:0.5;" x1="6972.5" x2="7731.5" y1="2209.4648" y2="2209.4648"/><ellipse cx="6982.5" cy="2220.4648" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="42" x="6991.5" y="2227">Args()</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="7037.5" y="2227">map</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="89" x="7067.5" y="2227">[string][]byte</text><ellipse cx="6982.5" cy="2236.9531" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="108" x="6991.5" y="2243.4883">Initiator() string</text><ellipse cx="6982.5" cy="2253.4414" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="94" x="6991.5" y="2259.9766">Caller() string</text><ellipse cx="6982.5" cy="2269.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="150" x="6991.5" y="2276.4648">AuthRequire() []string</text><ellipse cx="6982.5" cy="2286.418" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="273" x="6991.5" y="2292.9531">AddResourceUsed(delta contract.Limits)</text><ellipse cx="6982.5" cy="2302.9063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="210" x="6991.5" y="2309.4414">ResourceLimit() contract.Limits</text><ellipse cx="6982.5" cy="2319.3945" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="417" x="6991.5" y="2325.9297">Call(module string, contractName string, method string, args</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="7412.5" y="2325.9297">map</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="284" x="7442.5" y="2325.9297">[string][]byte) (*contract.Response, error)</text><ellipse cx="6982.5" cy="2335.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="226" x="6991.5" y="2342.418">EmitAsyncTask(event string, args</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="60" x="7221.5" y="2342.418">interface</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="54" x="7281.5" y="2342.418">{}) error</text></g><!--MD5=[3efeec4fc95ac8e15d371cf5d77fb7f6]
class kernel.kernInstance--><g id="elem_kernel.kernInstance"><rect codeLine="442" fill="#F1F1F1" height="163.418" id="kernel.kernInstance" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="237" x="7767.5" y="2153"/><ellipse cx="7837.75" cy="2169" fill="#7FFFD4" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M7837.4834,2170.063 Q7835.6323,2169.3574 7834.9766,2168.5813 Q7834.3208,2167.8052 7834.3208,2166.4937 Q7834.3208,2164.8086 7835.3999,2163.8457 Q7836.479,2162.8828 7838.3633,2162.8828 Q7839.2183,2162.8828 7840.0732,2163.0779 Q7840.9282,2163.2729 7841.7666,2163.6548 L7841.7666,2166.0454 Q7840.978,2165.4893 7840.1646,2165.1987 Q7839.3511,2164.9082 7838.5542,2164.9082 Q7837.666,2164.9082 7837.1929,2165.2651 Q7836.7197,2165.6221 7836.7197,2166.2861 Q7836.7197,2166.8008 7837.0642,2167.137 Q7837.4087,2167.4731 7838.5044,2167.8799 L7839.5586,2168.2783 Q7841.0527,2168.8262 7841.7583,2169.731 Q7842.4639,2170.6357 7842.4639,2172.0137 Q7842.4639,2173.8896 7841.3557,2174.8152 Q7840.2476,2175.7407 7838.0063,2175.7407 Q7837.085,2175.7407 7836.1594,2175.5208 Q7835.2339,2175.3008 7834.3706,2174.8691 L7834.3706,2172.3374 Q7835.3501,2173.0347 7836.2673,2173.375 Q7837.1846,2173.7153 7838.0811,2173.7153 Q7838.9858,2173.7153 7839.4839,2173.3044 Q7839.9819,2172.8936 7839.9819,2172.1548 Q7839.9819,2171.5986 7839.6499,2171.1794 Q7839.3179,2170.7603 7838.687,2170.5195 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="88" x="7858.25" y="2174.291">kernInstance</text><line style="stroke:#181818;stroke-width:0.5;" x1="7768.5" x2="8003.5" y1="2185" y2="2185"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7775.5" y="2193"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="136" x="7787.5" y="2202.5352">ctx *bridge.Context</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7775.5" y="2209.4883"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="130" x="7787.5" y="2219.0234">kctx *kcontextImpl</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7775.5" y="2225.9766"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="203" x="7787.5" y="2235.5117">registry contract.KernRegistry</text><line style="stroke:#181818;stroke-width:0.5;" x1="7768.5" x2="8003.5" y1="2242.4648" y2="2242.4648"/><ellipse cx="7778.5" cy="2253.4648" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="81" x="7787.5" y="2260">Exec() error</text><ellipse cx="7778.5" cy="2269.9531" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="211" x="7787.5" y="2276.4883">ResourceUsed() contract.Limits</text><ellipse cx="7778.5" cy="2286.4414" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="62" x="7787.5" y="2292.9766">Release()</text><ellipse cx="7778.5" cy="2302.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="122" x="7787.5" y="2309.4648">Abort(msg string)</text></g><!--MD5=[a3e7cb4d4dbd5e3b39446f016641c8fd]
class kernel.kernvm--><g id="elem_kernel.kernvm"><rect codeLine="453" fill="#F1F1F1" height="113.9531" id="kernel.kernvm" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="666" x="8040" y="2177.5"/><ellipse cx="8343.25" cy="2193.5" fill="#7FFFD4" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M8342.9834,2194.563 Q8341.1323,2193.8574 8340.4766,2193.0813 Q8339.8208,2192.3052 8339.8208,2190.9937 Q8339.8208,2189.3086 8340.8999,2188.3457 Q8341.979,2187.3828 8343.8633,2187.3828 Q8344.7183,2187.3828 8345.5732,2187.5779 Q8346.4282,2187.7729 8347.2666,2188.1548 L8347.2666,2190.5454 Q8346.478,2189.9893 8345.6646,2189.6987 Q8344.8511,2189.4082 8344.0542,2189.4082 Q8343.166,2189.4082 8342.6929,2189.7651 Q8342.2197,2190.1221 8342.2197,2190.7861 Q8342.2197,2191.3008 8342.5642,2191.637 Q8342.9087,2191.9731 8344.0044,2192.3799 L8345.0586,2192.7783 Q8346.5527,2193.3262 8347.2583,2194.231 Q8347.9639,2195.1357 8347.9639,2196.5137 Q8347.9639,2198.3896 8346.8557,2199.3152 Q8345.7476,2200.2407 8343.5063,2200.2407 Q8342.585,2200.2407 8341.6594,2200.0208 Q8340.7339,2199.8008 8339.8706,2199.3691 L8339.8706,2196.8374 Q8340.8501,2197.5347 8341.7673,2197.875 Q8342.6846,2198.2153 8343.5811,2198.2153 Q8344.4858,2198.2153 8344.9839,2197.8044 Q8345.4819,2197.3936 8345.4819,2196.6548 Q8345.4819,2196.0986 8345.1499,2195.6794 Q8344.8179,2195.2603 8344.187,2195.0195 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="51" x="8363.75" y="2198.791">kernvm</text><line style="stroke:#181818;stroke-width:0.5;" x1="8041" x2="8705" y1="2209.5" y2="2209.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="8048" y="2217.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="203" x="8060" y="2227.0352">registry contract.KernRegistry</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="8048" y="2233.9883"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="258" x="8060" y="2243.5234">config *bridge.InstanceCreatorConfig</text><line style="stroke:#181818;stroke-width:0.5;" x1="8041" x2="8705" y1="2250.4766" y2="2250.4766"/><ellipse cx="8051" cy="2261.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="640" x="8060" y="2268.0117">CreateInstance(ctx *bridge.Context, cp bridge.ContractCodeProvider) (bridge.Instance, error)</text><ellipse cx="8051" cy="2277.9648" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="188" x="8060" y="2284.5">RemoveCache(name string)</text></g><!--MD5=[c04bf98e2f40579d0f5a09cc20c687b4]
class manager.managerImpl--><g id="elem_manager.managerImpl"><rect codeLine="470" fill="#F1F1F1" height="196.3945" id="manager.managerImpl" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="571" x="203.5" y="1286.5"/><ellipse cx="439.25" cy="1302.5" fill="#7FFFD4" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M438.9834,1303.563 Q437.1323,1302.8574 436.4766,1302.0813 Q435.8208,1301.3052 435.8208,1299.9937 Q435.8208,1298.3086 436.8999,1297.3457 Q437.979,1296.3828 439.8633,1296.3828 Q440.7183,1296.3828 441.5732,1296.5779 Q442.4282,1296.7729 443.2666,1297.1548 L443.2666,1299.5454 Q442.478,1298.9893 441.6646,1298.6987 Q440.8511,1298.4082 440.0542,1298.4082 Q439.166,1298.4082 438.6929,1298.7651 Q438.2197,1299.1221 438.2197,1299.7861 Q438.2197,1300.3008 438.5642,1300.637 Q438.9087,1300.9731 440.0044,1301.3799 L441.0586,1301.7783 Q442.5527,1302.3262 443.2583,1303.231 Q443.9639,1304.1357 443.9639,1305.5137 Q443.9639,1307.3896 442.8557,1308.3152 Q441.7476,1309.2407 439.5063,1309.2407 Q438.585,1309.2407 437.6594,1309.0208 Q436.7339,1308.8008 435.8706,1308.3691 L435.8706,1305.8374 Q436.8501,1306.5347 437.7673,1306.875 Q438.6846,1307.2153 439.5811,1307.2153 Q440.4858,1307.2153 440.9839,1306.8044 Q441.4819,1306.3936 441.4819,1305.6548 Q441.4819,1305.0986 441.1499,1304.6794 Q440.8179,1304.2603 440.187,1304.0195 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="91" x="459.75" y="1307.791">managerImpl</text><line style="stroke:#181818;stroke-width:0.5;" x1="204.5" x2="773.5" y1="1318.5" y2="1318.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="211.5" y="1326.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="167" x="223.5" y="1336.0352">core contract.ChainCore</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="211.5" y="1342.9883"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="167" x="223.5" y="1352.5234">xbridge *bridge.XBridge</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="211.5" y="1359.4766"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="146" x="223.5" y="1369.0117">kregistry registryImpl</text><line style="stroke:#181818;stroke-width:0.5;" x1="204.5" x2="773.5" y1="1375.9648" y2="1375.9648"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="211.5" y="1383.9648"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="454" x="223.5" y="1393.5">deployContract(ctx contract.KContext) (*contract.Response, error)</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="211.5" y="1400.4531"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="466" x="223.5" y="1409.9883">upgradeContract(ctx contract.KContext) (*contract.Response, error)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="223.5" y="1426.4766"> </text><ellipse cx="214.5" cy="1436.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="459" x="223.5" y="1442.9648">NewContext(cfg *contract.ContextConfig) (contract.Context, error)</text><ellipse cx="214.5" cy="1452.918" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="545" x="223.5" y="1459.4531">NewStateSandbox(cfg *contract.SandboxConfig) (contract.StateSandbox, error)</text><ellipse cx="214.5" cy="1469.4063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="271" x="223.5" y="1475.9414">GetKernRegistry() contract.KernRegistry</text></g><!--MD5=[08ad7fcf438d3abfdc825de795af6391]
class manager.registryImpl--><g id="elem_manager.registryImpl"><rect codeLine="483" fill="#F1F1F1" height="196.3945" id="manager.registryImpl" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="572" x="810" y="1286.5"/><ellipse cx="1050.75" cy="1302.5" fill="#7FFFD4" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1050.4834,1303.563 Q1048.6323,1302.8574 1047.9766,1302.0813 Q1047.3208,1301.3052 1047.3208,1299.9937 Q1047.3208,1298.3086 1048.3999,1297.3457 Q1049.479,1296.3828 1051.3633,1296.3828 Q1052.2183,1296.3828 1053.0732,1296.5779 Q1053.9282,1296.7729 1054.7666,1297.1548 L1054.7666,1299.5454 Q1053.978,1298.9893 1053.1646,1298.6987 Q1052.3511,1298.4082 1051.5542,1298.4082 Q1050.666,1298.4082 1050.1929,1298.7651 Q1049.7197,1299.1221 1049.7197,1299.7861 Q1049.7197,1300.3008 1050.0642,1300.637 Q1050.4087,1300.9731 1051.5044,1301.3799 L1052.5586,1301.7783 Q1054.0527,1302.3262 1054.7583,1303.231 Q1055.4639,1304.1357 1055.4639,1305.5137 Q1055.4639,1307.3896 1054.3557,1308.3152 Q1053.2476,1309.2407 1051.0063,1309.2407 Q1050.085,1309.2407 1049.1594,1309.0208 Q1048.2339,1308.8008 1047.3706,1308.3691 L1047.3706,1305.8374 Q1048.3501,1306.5347 1049.2673,1306.875 Q1050.1846,1307.2153 1051.0811,1307.2153 Q1051.9858,1307.2153 1052.4839,1306.8044 Q1052.9819,1306.3936 1052.9819,1305.6548 Q1052.9819,1305.0986 1052.6499,1304.6794 Q1052.3179,1304.2603 1051.687,1304.0195 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="82" x="1071.25" y="1307.791">registryImpl</text><line style="stroke:#181818;stroke-width:0.5;" x1="811" x2="1381" y1="1318.5" y2="1318.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="818" y="1326.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="830" y="1336.0352">mutex sync.Mutex</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="818" y="1342.9883"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="60" x="830" y="1352.5234">methods</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="894" y="1352.5234">map</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="50" x="924" y="1352.5234">[string]</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="974" y="1352.5234">map</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="194" x="1004" y="1352.5234">[string]contract.KernMethod</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="818" y="1359.4766"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="64" x="830" y="1369.0117">shortcuts</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="898" y="1369.0117">map</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="928" y="1369.0117">[string]shortcut</text><line style="stroke:#181818;stroke-width:0.5;" x1="811" x2="1381" y1="1375.9648" y2="1375.9648"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="818" y="1383.9648"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="301" x="830" y="1393.5">getShortcut(method string) (shortcut, error)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="830" y="1409.9883"> </text><ellipse cx="821" cy="1419.9414" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="546" x="830" y="1426.4766">RegisterKernMethod(ctract string, method string, handler contract.KernMethod)</text><ellipse cx="821" cy="1436.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="353" x="830" y="1442.9648">UnregisterKernMethod(ctract string, method string)</text><ellipse cx="821" cy="1452.918" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="456" x="830" y="1459.4531">RegisterShortcut(oldmethod string, contract string, method string)</text><ellipse cx="821" cy="1469.4063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="505" x="830" y="1475.9414">GetKernMethod(ctract string, method string) (contract.KernMethod, error)</text></g><!--MD5=[ba8e46220d1271a4864f03755b43a939]
class manager.shortcut--><g id="elem_manager.shortcut"><rect codeLine="496" fill="#F1F1F1" height="97.4648" id="manager.shortcut" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="146" x="22" y="1336"/><ellipse cx="62.65" cy="1352" fill="#7FFFD4" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M62.3834,1353.063 Q60.5323,1352.3574 59.8766,1351.5813 Q59.2208,1350.8052 59.2208,1349.4937 Q59.2208,1347.8086 60.2999,1346.8457 Q61.379,1345.8828 63.2633,1345.8828 Q64.1183,1345.8828 64.9732,1346.0779 Q65.8282,1346.2729 66.6666,1346.6548 L66.6666,1349.0454 Q65.878,1348.4893 65.0646,1348.1987 Q64.2511,1347.9082 63.4542,1347.9082 Q62.566,1347.9082 62.0929,1348.2651 Q61.6197,1348.6221 61.6197,1349.2861 Q61.6197,1349.8008 61.9642,1350.137 Q62.3087,1350.4731 63.4044,1350.8799 L64.4586,1351.2783 Q65.9527,1351.8262 66.6583,1352.731 Q67.3639,1353.6357 67.3639,1355.0137 Q67.3639,1356.8896 66.2557,1357.8152 Q65.1476,1358.7407 62.9063,1358.7407 Q61.985,1358.7407 61.0594,1358.5208 Q60.1339,1358.3008 59.2706,1357.8691 L59.2706,1355.3374 Q60.2501,1356.0347 61.1673,1356.375 Q62.0846,1356.7153 62.9811,1356.7153 Q63.8858,1356.7153 64.3839,1356.3044 Q64.8819,1355.8936 64.8819,1355.1548 Q64.8819,1354.5986 64.5499,1354.1794 Q64.2179,1353.7603 63.587,1353.5195 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="57" x="82.35" y="1357.291">shortcut</text><line style="stroke:#181818;stroke-width:0.5;" x1="23" x2="167" y1="1368" y2="1368"/><ellipse cx="33" cy="1379" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="120" x="42" y="1385.5352">OldMethod string</text><ellipse cx="33" cy="1395.4883" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="103" x="42" y="1402.0234">Contract string</text><ellipse cx="33" cy="1411.9766" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="96" x="42" y="1418.5117">Method string</text><line style="stroke:#181818;stroke-width:0.5;" x1="23" x2="167" y1="1425.4648" y2="1425.4648"/></g><!--MD5=[ab799a34a9d30fa8ab636af11b5e78ee]
class native.DockerProcess--><g id="elem_native.DockerProcess"><rect codeLine="508" fill="#F1F1F1" height="262.3477" id="native.DockerProcess" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="279" x="15115.5" y="1253.5"/><ellipse cx="15200.75" cy="1269.5" fill="#7FFFD4" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M15200.4834,1270.563 Q15198.6323,1269.8574 15197.9766,1269.0813 Q15197.3208,1268.3052 15197.3208,1266.9937 Q15197.3208,1265.3086 15198.3999,1264.3457 Q15199.479,1263.3828 15201.3633,1263.3828 Q15202.2183,1263.3828 15203.0732,1263.5779 Q15203.9282,1263.7729 15204.7666,1264.1548 L15204.7666,1266.5454 Q15203.978,1265.9893 15203.1646,1265.6987 Q15202.3511,1265.4082 15201.5542,1265.4082 Q15200.666,1265.4082 15200.1929,1265.7651 Q15199.7197,1266.1221 15199.7197,1266.7861 Q15199.7197,1267.3008 15200.0642,1267.637 Q15200.4087,1267.9731 15201.5044,1268.3799 L15202.5586,1268.7783 Q15204.0527,1269.3262 15204.7583,1270.231 Q15205.4639,1271.1357 15205.4639,1272.5137 Q15205.4639,1274.3896 15204.3557,1275.3152 Q15203.2476,1276.2407 15201.0063,1276.2407 Q15200.085,1276.2407 15199.1594,1276.0208 Q15198.2339,1275.8008 15197.3706,1275.3691 L15197.3706,1272.8374 Q15198.3501,1273.5347 15199.2673,1273.875 Q15200.1846,1274.2153 15201.0811,1274.2153 Q15201.9858,1274.2153 15202.4839,1273.8044 Q15202.9819,1273.3936 15202.9819,1272.6548 Q15202.9819,1272.0986 15202.6499,1271.6794 Q15202.3179,1271.2603 15201.687,1271.0195 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="100" x="15221.25" y="1274.791">DockerProcess</text><line style="stroke:#181818;stroke-width:0.5;" x1="15116.5" x2="15393.5" y1="1285.5" y2="1285.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15123.5" y="1293.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="95" x="15135.5" y="1303.0352">basedir string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15123.5" y="1309.9883"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="139" x="15135.5" y="1319.5234">startcmd *exec.Cmd</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15123.5" y="1326.4766"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="85" x="15135.5" y="1336.0117">envs []string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15123.5" y="1342.9648"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="106" x="15135.5" y="1352.5">mounts []string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15123.5" y="1359.4531"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90" x="15135.5" y="1368.9883">ports []string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15123.5" y="1375.9414"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="228" x="15135.5" y="1385.4766">cfg *contract.NativeDockerConfig</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15123.5" y="1392.4297"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="57" x="15135.5" y="1401.9648">id string</text><line style="stroke:#181818;stroke-width:0.5;" x1="15116.5" x2="15393.5" y1="1408.918" y2="1408.918"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15123.5" y="1416.918"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="253" x="15135.5" y="1426.4531">resourceConfig() (int64, int64, error)</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15123.5" y="1433.4063"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="15135.5" y="1442.9414">start() error</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15123.5" y="1449.8945"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="15135.5" y="1459.4297">start() error</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="15135.5" y="1475.918"> </text><ellipse cx="15126.5" cy="1485.8711" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="81" x="15135.5" y="1492.4063">Start() error</text><ellipse cx="15126.5" cy="1502.3594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="231" x="15135.5" y="1508.8945">Stop(timeout time.Duration) error</text></g><!--MD5=[10eea87408399226e90deaa14869d7a5]
class native.HostProcess--><g id="elem_native.HostProcess"><rect codeLine="525" fill="#F1F1F1" height="146.9297" id="native.HostProcess" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="257" x="15856.5" y="1311"/><ellipse cx="15939.25" cy="1327" fill="#7FFFD4" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M15938.9834,1328.063 Q15937.1323,1327.3574 15936.4766,1326.5813 Q15935.8208,1325.8052 15935.8208,1324.4937 Q15935.8208,1322.8086 15936.8999,1321.8457 Q15937.979,1320.8828 15939.8633,1320.8828 Q15940.7183,1320.8828 15941.5732,1321.0779 Q15942.4282,1321.2729 15943.2666,1321.6548 L15943.2666,1324.0454 Q15942.478,1323.4893 15941.6646,1323.1987 Q15940.8511,1322.9082 15940.0542,1322.9082 Q15939.166,1322.9082 15938.6929,1323.2651 Q15938.2197,1323.6221 15938.2197,1324.2861 Q15938.2197,1324.8008 15938.5642,1325.137 Q15938.9087,1325.4731 15940.0044,1325.8799 L15941.0586,1326.2783 Q15942.5527,1326.8262 15943.2583,1327.731 Q15943.9639,1328.6357 15943.9639,1330.0137 Q15943.9639,1331.8896 15942.8557,1332.8152 Q15941.7476,1333.7407 15939.5063,1333.7407 Q15938.585,1333.7407 15937.6594,1333.5208 Q15936.7339,1333.3008 15935.8706,1332.8691 L15935.8706,1330.3374 Q15936.8501,1331.0347 15937.7673,1331.375 Q15938.6846,1331.7153 15939.5811,1331.7153 Q15940.4858,1331.7153 15940.9839,1331.3044 Q15941.4819,1330.8936 15941.4819,1330.1548 Q15941.4819,1329.5986 15941.1499,1329.1794 Q15940.8179,1328.7603 15940.187,1328.5195 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="83" x="15959.75" y="1332.291">HostProcess</text><line style="stroke:#181818;stroke-width:0.5;" x1="15857.5" x2="16112.5" y1="1343" y2="1343"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15864.5" y="1351"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="95" x="15876.5" y="1360.5352">basedir string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15864.5" y="1367.4883"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="139" x="15876.5" y="1377.0234">startcmd *exec.Cmd</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15864.5" y="1383.9766"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="85" x="15876.5" y="1393.5117">envs []string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15864.5" y="1400.4648"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="108" x="15876.5" y="1410">cmd *exec.Cmd</text><line style="stroke:#181818;stroke-width:0.5;" x1="15857.5" x2="16112.5" y1="1416.9531" y2="1416.9531"/><ellipse cx="15867.5" cy="1427.9531" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="81" x="15876.5" y="1434.4883">Start() error</text><ellipse cx="15867.5" cy="1444.4414" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="231" x="15876.5" y="1450.9766">Stop(timeout time.Duration) error</text></g><!--MD5=[2ad25f14957707a41bc444f4c2e62e62]
class native.Process--><g id="elem_native.Process"><rect codeLine="535" fill="#F1F1F1" height="80.9766" id="native.Process" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="257" x="16283.5" y="890"/><ellipse cx="16381.75" cy="906" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M16378.1777,902.2651 L16378.1777,900.1069 L16385.5571,900.1069 L16385.5571,902.2651 L16383.0918,902.2651 L16383.0918,910.3418 L16385.5571,910.3418 L16385.5571,912.5 L16378.1777,912.5 L16378.1777,910.3418 L16380.6431,910.3418 L16380.6431,902.2651 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="52" x="16402.25" y="911.291">Process</text><line style="stroke:#181818;stroke-width:0.5;" x1="16284.5" x2="16539.5" y1="922" y2="922"/><line style="stroke:#181818;stroke-width:0.5;" x1="16284.5" x2="16539.5" y1="930" y2="930"/><ellipse cx="16294.5" cy="941" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="81" x="16303.5" y="947.5352">Start() error</text><ellipse cx="16294.5" cy="957.4883" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="231" x="16303.5" y="964.0234">Stop(timeout time.Duration) error</text></g><!--MD5=[a478598134f369ddbcad9c023bb6db31]
class native.contractProcess--><g id="elem_native.contractProcess"><rect codeLine="540" fill="#F1F1F1" height="493.1836" id="native.contractProcess" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="308" x="15940" y="684"/><ellipse cx="16035.75" cy="700" fill="#7FFFD4" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M16035.4834,701.063 Q16033.6323,700.3574 16032.9766,699.5813 Q16032.3208,698.8052 16032.3208,697.4937 Q16032.3208,695.8086 16033.3999,694.8457 Q16034.479,693.8828 16036.3633,693.8828 Q16037.2183,693.8828 16038.0732,694.0779 Q16038.9282,694.2729 16039.7666,694.6548 L16039.7666,697.0454 Q16038.978,696.4893 16038.1646,696.1987 Q16037.3511,695.9082 16036.5542,695.9082 Q16035.666,695.9082 16035.1929,696.2651 Q16034.7197,696.6221 16034.7197,697.2861 Q16034.7197,697.8008 16035.0642,698.137 Q16035.4087,698.4731 16036.5044,698.8799 L16037.5586,699.2783 Q16039.0527,699.8262 16039.7583,700.731 Q16040.4639,701.6357 16040.4639,703.0137 Q16040.4639,704.8896 16039.3557,705.8152 Q16038.2476,706.7407 16036.0063,706.7407 Q16035.085,706.7407 16034.1594,706.5208 Q16033.2339,706.3008 16032.3706,705.8691 L16032.3706,703.3374 Q16033.3501,704.0347 16034.2673,704.375 Q16035.1846,704.7153 16036.0811,704.7153 Q16036.9858,704.7153 16037.4839,704.3044 Q16037.9819,703.8936 16037.9819,703.1548 Q16037.9819,702.5986 16037.6499,702.1794 Q16037.3179,701.7603 16036.687,701.5195 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="108" x="16056.25" y="705.291">contractProcess</text><line style="stroke:#181818;stroke-width:0.5;" x1="15941" x2="16247" y1="716" y2="716"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15948" y="724"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="180" x="15960" y="733.5352">cfg *contract.NativeConfig</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15948" y="740.4883"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="82" x="15960" y="750.0234">name string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15948" y="756.9766"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="95" x="15960" y="766.5117">basedir string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15948" y="773.4648"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="97" x="15960" y="783">binpath string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15948" y="789.9531"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="115" x="15960" y="799.4883">chainAddr string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15948" y="806.4414"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="199" x="15960" y="815.9766">desc *protos.WasmCodeDesc</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15948" y="822.9297"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="109" x="15960" y="832.4648">process Process</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15948" y="839.418"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102" x="15960" y="848.9531">monitorStopch</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="33" x="16066" y="848.9531">chan</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="16099" y="848.9531"> </text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="39" x="16103" y="848.9531">struct</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="10" x="16142" y="848.9531">{}</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15948" y="855.9063"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="208" x="15960" y="865.4414">monitorWaiter sync.WaitGroup</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15948" y="872.3945"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="141" x="15960" y="881.9297">logger log15.Logger</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15948" y="888.8828"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="15960" y="898.418">mutex sync.Mutex</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15948" y="905.3711"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="72" x="15960" y="914.9063">rpcPort int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15948" y="921.8594"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="182" x="15960" y="931.3945">rpcConn *grpc.ClientConn</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15948" y="938.3477"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="228" x="15960" y="947.8828">rpcClient pbrpc.NativeCodeClient</text><line style="stroke:#181818;stroke-width:0.5;" x1="15941" x2="16247" y1="954.8359" y2="954.8359"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15948" y="962.8359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="250" x="15960" y="972.3711">makeNativeProcess() (Process, error)</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15948" y="979.3242"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="114" x="15960" y="988.8594">waitReply() error</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15948" y="995.8125"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="114" x="15960" y="1005.3477">heartBeat() error</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15948" y="1012.3008"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="65" x="15960" y="1021.8359">monitor()</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15948" y="1028.7891"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="148" x="15960" y="1038.3242">resetRpcClient() error</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15948" y="1045.2773"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="146" x="15960" y="1054.8125">restartProcess() error</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15948" y="1061.7656"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="200" x="15960" y="1071.3008">start(startMonitor bool) error</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15948" y="1078.2539"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="282" x="15960" y="1087.7891">makeStartCommand() (*exec.Cmd, error)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="15960" y="1104.2773"> </text><ellipse cx="15951" cy="1114.2305" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="241" x="15960" y="1120.7656">RpcClient() pbrpc.NativeCodeClient</text><ellipse cx="15951" cy="1130.7188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="81" x="15960" y="1137.2539">Start() error</text><ellipse cx="15951" cy="1147.207" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="41" x="15960" y="1153.7422">Stop()</text><ellipse cx="15951" cy="1163.6953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="233" x="15960" y="1170.2305">GetDesc() *protos.WasmCodeDesc</text></g><!--MD5=[f89a35f1ebbee27c16302ed700d60873]
class native.nativeCreator--><g id="elem_native.nativeCreator"><rect codeLine="571" fill="#F1F1F1" height="163.418" id="native.nativeCreator" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="666" x="15239" y="849"/><ellipse cx="15521.25" cy="865" fill="#7FFFD4" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M15520.9834,866.063 Q15519.1323,865.3574 15518.4766,864.5813 Q15517.8208,863.8052 15517.8208,862.4937 Q15517.8208,860.8086 15518.8999,859.8457 Q15519.979,858.8828 15521.8633,858.8828 Q15522.7183,858.8828 15523.5732,859.0779 Q15524.4282,859.2729 15525.2666,859.6548 L15525.2666,862.0454 Q15524.478,861.4893 15523.6646,861.1987 Q15522.8511,860.9082 15522.0542,860.9082 Q15521.166,860.9082 15520.6929,861.2651 Q15520.2197,861.6221 15520.2197,862.2861 Q15520.2197,862.8008 15520.5642,863.137 Q15520.9087,863.4731 15522.0044,863.8799 L15523.0586,864.2783 Q15524.5527,864.8262 15525.2583,865.731 Q15525.9639,866.6357 15525.9639,868.0137 Q15525.9639,869.8896 15524.8557,870.8152 Q15523.7476,871.7407 15521.5063,871.7407 Q15520.585,871.7407 15519.6594,871.5208 Q15518.7339,871.3008 15517.8706,870.8691 L15517.8706,868.3374 Q15518.8501,869.0347 15519.7673,869.375 Q15520.6846,869.7153 15521.5811,869.7153 Q15522.4858,869.7153 15522.9839,869.3044 Q15523.4819,868.8936 15523.4819,868.1548 Q15523.4819,867.5986 15523.1499,867.1794 Q15522.8179,866.7603 15522.187,866.5195 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="93" x="15541.75" y="870.291">nativeCreator</text><line style="stroke:#181818;stroke-width:0.5;" x1="15240" x2="15904" y1="881" y2="881"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15247" y="889"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="258" x="15259" y="898.5352">config *bridge.InstanceCreatorConfig</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15247" y="905.4883"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="135" x="15259" y="915.0234">listener net.Listener</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15247" y="921.9766"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="146" x="15259" y="931.5117">pm *processManager</text><line style="stroke:#181818;stroke-width:0.5;" x1="15240" x2="15904" y1="938.4648" y2="938.4648"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15247" y="946.4648"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="406" x="15259" y="956">startRpcServer(service *bridge.SyscallService) (string, error)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="15259" y="972.4883"> </text><ellipse cx="15250" cy="982.4414" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="640" x="15259" y="988.9766">CreateInstance(ctx *bridge.Context, cp bridge.ContractCodeProvider) (bridge.Instance, error)</text><ellipse cx="15250" cy="998.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="188" x="15259" y="1005.4648">RemoveCache(name string)</text></g><!--MD5=[0785fb6bb4ac25ba1e75a4793403adc5]
class native.nativeVmInstance--><g id="elem_native.nativeVmInstance"><rect codeLine="582" fill="#F1F1F1" height="146.9297" id="native.nativeVmInstance" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="237" x="14966.5" y="857"/><ellipse cx="15020.75" cy="873" fill="#7FFFD4" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M15020.4834,874.063 Q15018.6323,873.3574 15017.9766,872.5813 Q15017.3208,871.8052 15017.3208,870.4937 Q15017.3208,868.8086 15018.3999,867.8457 Q15019.479,866.8828 15021.3633,866.8828 Q15022.2183,866.8828 15023.0732,867.0779 Q15023.9282,867.2729 15024.7666,867.6548 L15024.7666,870.0454 Q15023.978,869.4893 15023.1646,869.1987 Q15022.3511,868.9082 15021.5542,868.9082 Q15020.666,868.9082 15020.1929,869.2651 Q15019.7197,869.6221 15019.7197,870.2861 Q15019.7197,870.8008 15020.0642,871.137 Q15020.4087,871.4731 15021.5044,871.8799 L15022.5586,872.2783 Q15024.0527,872.8262 15024.7583,873.731 Q15025.4639,874.6357 15025.4639,876.0137 Q15025.4639,877.8896 15024.3557,878.8152 Q15023.2476,879.7407 15021.0063,879.7407 Q15020.085,879.7407 15019.1594,879.5208 Q15018.2339,879.3008 15017.3706,878.8691 L15017.3706,876.3374 Q15018.3501,877.0347 15019.2673,877.375 Q15020.1846,877.7153 15021.0811,877.7153 Q15021.9858,877.7153 15022.4839,877.3044 Q15022.9819,876.8936 15022.9819,876.1548 Q15022.9819,875.5986 15022.6499,875.1794 Q15022.3179,874.7603 15021.687,874.5195 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="120" x="15041.25" y="878.291">nativeVmInstance</text><line style="stroke:#181818;stroke-width:0.5;" x1="14967.5" x2="15202.5" y1="889" y2="889"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="14974.5" y="897"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="136" x="14986.5" y="906.5352">ctx *bridge.Context</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="14974.5" y="913.4883"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="172" x="14986.5" y="923.0234">process *contractProcess</text><line style="stroke:#181818;stroke-width:0.5;" x1="14967.5" x2="15202.5" y1="929.9766" y2="929.9766"/><ellipse cx="14977.5" cy="940.9766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="81" x="14986.5" y="947.5117">Exec() error</text><ellipse cx="14977.5" cy="957.4648" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="211" x="14986.5" y="964">ResourceUsed() contract.Limits</text><ellipse cx="14977.5" cy="973.9531" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="62" x="14986.5" y="980.4883">Release()</text><ellipse cx="14977.5" cy="990.4414" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="122" x="14986.5" y="996.9766">Abort(msg string)</text></g><!--MD5=[6b1e28d3ab7aa4e551aa79eb3589790e]
class native.processManager--><g id="elem_native.processManager"><rect codeLine="592" fill="#F1F1F1" height="196.3945" id="native.processManager" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="670" x="14261" y="832.5"/><ellipse cx="14535.25" cy="848.5" fill="#7FFFD4" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M14534.9834,849.563 Q14533.1323,848.8574 14532.4766,848.0813 Q14531.8208,847.3052 14531.8208,845.9937 Q14531.8208,844.3086 14532.8999,843.3457 Q14533.979,842.3828 14535.8633,842.3828 Q14536.7183,842.3828 14537.5732,842.5779 Q14538.4282,842.7729 14539.2666,843.1548 L14539.2666,845.5454 Q14538.478,844.9893 14537.6646,844.6987 Q14536.8511,844.4082 14536.0542,844.4082 Q14535.166,844.4082 14534.6929,844.7651 Q14534.2197,845.1221 14534.2197,845.7861 Q14534.2197,846.3008 14534.5642,846.637 Q14534.9087,846.9731 14536.0044,847.3799 L14537.0586,847.7783 Q14538.5527,848.3262 14539.2583,849.231 Q14539.9639,850.1357 14539.9639,851.5137 Q14539.9639,853.3896 14538.8557,854.3152 Q14537.7476,855.2407 14535.5063,855.2407 Q14534.585,855.2407 14533.6594,855.0208 Q14532.7339,854.8008 14531.8706,854.3691 L14531.8706,851.8374 Q14532.8501,852.5347 14533.7673,852.875 Q14534.6846,853.2153 14535.5811,853.2153 Q14536.4858,853.2153 14536.9839,852.8044 Q14537.4819,852.3936 14537.4819,851.6548 Q14537.4819,851.0986 14537.1499,850.6794 Q14536.8179,850.2603 14536.187,850.0195 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="113" x="14555.75" y="853.791">processManager</text><line style="stroke:#181818;stroke-width:0.5;" x1="14262" x2="14930" y1="864.5" y2="864.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="14269" y="872.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="180" x="14281" y="882.0352">cfg *contract.NativeConfig</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="14269" y="888.9883"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="95" x="14281" y="898.5234">basedir string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="14269" y="905.4766"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="115" x="14281" y="915.0117">chainAddr string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="14269" y="921.9648"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="14281" y="931.5">mutex sync.Mutex</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="14269" y="938.4531"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="63" x="14281" y="947.9883">contracts</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="14348" y="947.9883">map</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="165" x="14378" y="947.9883">[string]*contractProcess</text><line style="stroke:#181818;stroke-width:0.5;" x1="14262" x2="14930" y1="954.9414" y2="954.9414"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="14269" y="962.9414"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="644" x="14281" y="972.4766">makeProcess(name string, desc *protos.WasmCodeDesc, code []byte) (*contractProcess, error)</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="14269" y="979.4297"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="567" x="14281" y="988.9648">lookupProcess(name string, desc *protos.WasmCodeDesc) (*contractProcess, bool)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="14281" y="1005.4531"> </text><ellipse cx="14272" cy="1015.4063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="568" x="14281" y="1021.9414">GetProcess(name string, cp bridge.ContractCodeProvider) (*contractProcess, error)</text></g><!--MD5=[3168b8718ac0628c49eeb9c8aebb8c88]
class log15.Logger--><g id="elem_log15.Logger"><rect fill="#F1F1F1" height="48" id="log15.Logger" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="80" x="14125" y="906.5"/><ellipse cx="14140" cy="922.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M14142.4731,928.6431 Q14141.8921,928.9419 14141.2529,929.0913 Q14140.6138,929.2407 14139.9082,929.2407 Q14137.4014,929.2407 14136.0815,927.5889 Q14134.7617,925.937 14134.7617,922.8159 Q14134.7617,919.6865 14136.0815,918.0347 Q14137.4014,916.3828 14139.9082,916.3828 Q14140.6138,916.3828 14141.2612,916.5322 Q14141.9087,916.6816 14142.4731,916.9805 L14142.4731,919.7031 Q14141.8423,919.1221 14141.2488,918.8523 Q14140.6553,918.5825 14140.0244,918.5825 Q14138.6797,918.5825 14137.9949,919.6492 Q14137.3101,920.7158 14137.3101,922.8159 Q14137.3101,924.9077 14137.9949,925.9744 Q14138.6797,927.041 14140.0244,927.041 Q14140.6553,927.041 14141.2488,926.7712 Q14141.8423,926.5015 14142.4731,925.9204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="48" x="14154" y="927.791">Logger</text><line style="stroke:#181818;stroke-width:0.5;" x1="14126" x2="14204" y1="938.5" y2="938.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="14126" x2="14204" y1="946.5" y2="946.5"/></g><!--MD5=[2e7a3b1cb866f0a4092139c273b7cd95]
class xvm.HXVMCreator--><g id="elem_xvm.HXVMCreator"><rect codeLine="615" fill="#F1F1F1" height="179.9063" id="xvm.HXVMCreator" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="666" x="12012" y="1294.5"/><ellipse cx="12294.75" cy="1310.5" fill="#7FFFD4" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M12294.4834,1311.563 Q12292.6323,1310.8574 12291.9766,1310.0813 Q12291.3208,1309.3052 12291.3208,1307.9937 Q12291.3208,1306.3086 12292.3999,1305.3457 Q12293.479,1304.3828 12295.3633,1304.3828 Q12296.2183,1304.3828 12297.0732,1304.5779 Q12297.9282,1304.7729 12298.7666,1305.1548 L12298.7666,1307.5454 Q12297.978,1306.9893 12297.1646,1306.6987 Q12296.3511,1306.4082 12295.5542,1306.4082 Q12294.666,1306.4082 12294.1929,1306.7651 Q12293.7197,1307.1221 12293.7197,1307.7861 Q12293.7197,1308.3008 12294.0642,1308.637 Q12294.4087,1308.9731 12295.5044,1309.3799 L12296.5586,1309.7783 Q12298.0527,1310.3262 12298.7583,1311.231 Q12299.4639,1312.1357 12299.4639,1313.5137 Q12299.4639,1315.3896 12298.3557,1316.3152 Q12297.2476,1317.2407 12295.0063,1317.2407 Q12294.085,1317.2407 12293.1594,1317.0208 Q12292.2339,1316.8008 12291.3706,1316.3691 L12291.3706,1313.8374 Q12292.3501,1314.5347 12293.2673,1314.875 Q12294.1846,1315.2153 12295.0811,1315.2153 Q12295.9858,1315.2153 12296.4839,1314.8044 Q12296.9819,1314.3936 12296.9819,1313.6548 Q12296.9819,1313.0986 12296.6499,1312.6794 Q12296.3179,1312.2603 12295.687,1312.0195 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="92" x="12315.25" y="1315.791">HXVMCreator</text><line style="stroke:#181818;stroke-width:0.5;" x1="12013" x2="12677" y1="1326.5" y2="1326.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="12020" y="1334.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="217" x="12032" y="1344.0352">tier0Creator *xvmInterpCreator</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="12020" y="1350.9883"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="176" x="12032" y="1360.5234">tier1Creator *xvmCreator</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="12020" y="1367.4766"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="176" x="12032" y="1377.0117">tier2Creator *xvmCreator</text><line style="stroke:#181818;stroke-width:0.5;" x1="12013" x2="12677" y1="1383.9648" y2="1383.9648"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="12020" y="1391.9648"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="426" x="12032" y="1401.5">tierUp1(ctx *bridge.Context, cp bridge.ContractCodeProvider)</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="12020" y="1408.4531"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="426" x="12032" y="1417.9883">tierUp2(ctx *bridge.Context, cp bridge.ContractCodeProvider)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="12032" y="1434.4766"> </text><ellipse cx="12023" cy="1444.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="640" x="12032" y="1450.9648">CreateInstance(ctx *bridge.Context, cp bridge.ContractCodeProvider) (bridge.Instance, error)</text><ellipse cx="12023" cy="1460.918" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="188" x="12032" y="1467.4531">RemoveCache(name string)</text></g><!--MD5=[049180df84b0e7547e71c686de13003e]
class xvm.codeManager--><g id="elem_xvm.codeManager"><rect codeLine="627" fill="#F1F1F1" height="295.3242" id="xvm.codeManager" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="693" x="10145.5" y="1237"/><ellipse cx="10441.25" cy="1253" fill="#7FFFD4" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M10440.9834,1254.063 Q10439.1323,1253.3574 10438.4766,1252.5813 Q10437.8208,1251.8052 10437.8208,1250.4937 Q10437.8208,1248.8086 10438.8999,1247.8457 Q10439.979,1246.8828 10441.8633,1246.8828 Q10442.7183,1246.8828 10443.5732,1247.0779 Q10444.4282,1247.2729 10445.2666,1247.6548 L10445.2666,1250.0454 Q10444.478,1249.4893 10443.6646,1249.1987 Q10442.8511,1248.9082 10442.0542,1248.9082 Q10441.166,1248.9082 10440.6929,1249.2651 Q10440.2197,1249.6221 10440.2197,1250.2861 Q10440.2197,1250.8008 10440.5642,1251.137 Q10440.9087,1251.4731 10442.0044,1251.8799 L10443.0586,1252.2783 Q10444.5527,1252.8262 10445.2583,1253.731 Q10445.9639,1254.6357 10445.9639,1256.0137 Q10445.9639,1257.8896 10444.8557,1258.8152 Q10443.7476,1259.7407 10441.5063,1259.7407 Q10440.585,1259.7407 10439.6594,1259.5208 Q10438.7339,1259.3008 10437.8706,1258.8691 L10437.8706,1256.3374 Q10438.8501,1257.0347 10439.7673,1257.375 Q10440.6846,1257.7153 10441.5811,1257.7153 Q10442.4858,1257.7153 10442.9839,1257.3044 Q10443.4819,1256.8936 10443.4819,1256.1548 Q10443.4819,1255.5986 10443.1499,1255.1794 Q10442.8179,1254.7603 10442.187,1254.5195 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="93" x="10461.75" y="1258.291">codeManager</text><line style="stroke:#181818;stroke-width:0.5;" x1="10146.5" x2="10837.5" y1="1269" y2="1269"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="10153.5" y="1277"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="95" x="10165.5" y="1286.5352">basedir string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="10153.5" y="1293.4883"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="87" x="10165.5" y="1303.0234">rundir string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="10153.5" y="1309.9766"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102" x="10165.5" y="1319.5117">cachedir string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="10153.5" y="1326.4648"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="181" x="10165.5" y="1336">compileCode compileFunc</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="10153.5" y="1342.9531"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="247" x="10165.5" y="1352.4883">makeExecCode makeExecCodeFunc</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="10153.5" y="1359.4414"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="238" x="10165.5" y="1368.9766">makeCacheLock singleflight.Group</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="10153.5" y="1375.9297"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="10165.5" y="1385.4648">mutex sync.Mutex</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="10153.5" y="1392.418"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="40" x="10165.5" y="1401.9531">codes</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="10209.5" y="1401.9531">map</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="149" x="10239.5" y="1401.9531">[string]*contractCode</text><line style="stroke:#181818;stroke-width:0.5;" x1="10146.5" x2="10837.5" y1="1408.9063" y2="1408.9063"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="10153.5" y="1416.9063"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="574" x="10165.5" y="1426.4414">lookupMemCache(name string, desc *protos.WasmCodeDesc) (*contractCode, bool)</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="10153.5" y="1433.3945"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="667" x="10165.5" y="1442.9297">makeMemCache(name string, libpath string, desc *protos.WasmCodeDesc) (*contractCode, error)</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="10153.5" y="1449.8828"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="511" x="10165.5" y="1459.418">lookupDiskCache(name string, desc *protos.WasmCodeDesc) (string, bool)</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="10153.5" y="1466.3711"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="611" x="10165.5" y="1475.9063">makeDiskCache(name string, desc *protos.WasmCodeDesc, codebuf []byte) (string, error)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="10165.5" y="1492.3945"> </text><ellipse cx="10156.5" cy="1502.3477" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="568" x="10165.5" y="1508.8828">GetExecCode(name string, cp bridge.ContractCodeProvider) (*contractCode, error)</text><ellipse cx="10156.5" cy="1518.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="182" x="10165.5" y="1525.3711">RemoveCode(name string)</text></g><!--MD5=[ca503a15498b6382ab25ee5da9c841c4]
class xvm.codec--><g id="elem_xvm.codec"><rect codeLine="646" fill="#F1F1F1" height="80.9766" id="xvm.codec" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="239" x="11361.5" y="1344"/><ellipse cx="11456.75" cy="1360" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M11453.1777,1356.2651 L11453.1777,1354.1069 L11460.5571,1354.1069 L11460.5571,1356.2651 L11458.0918,1356.2651 L11458.0918,1364.3418 L11460.5571,1364.3418 L11460.5571,1366.5 L11453.1777,1366.5 L11453.1777,1364.3418 L11455.6431,1364.3418 L11455.6431,1356.2651 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="40" x="11477.25" y="1365.291">codec</text><line style="stroke:#181818;stroke-width:0.5;" x1="11362.5" x2="11599.5" y1="1376" y2="1376"/><line style="stroke:#181818;stroke-width:0.5;" x1="11362.5" x2="11599.5" y1="1384" y2="1384"/><ellipse cx="11372.5" cy="1395" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="159" x="11381.5" y="1401.5352">Encode(in []byte) []byte</text><ellipse cx="11372.5" cy="1411.4883" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="213" x="11381.5" y="1418.0234">Decode(in []byte) ([]byte, error)</text></g><!--MD5=[0dca074a6c70f80c8f318391c501a25d]
class xvm.contractCode--><g id="elem_xvm.contractCode"><rect codeLine="651" fill="#F1F1F1" height="97.4648" id="xvm.contractCode" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="219" x="10873.5" y="1336"/><ellipse cx="10932.75" cy="1352" fill="#7FFFD4" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M10932.4834,1353.063 Q10930.6323,1352.3574 10929.9766,1351.5813 Q10929.3208,1350.8052 10929.3208,1349.4937 Q10929.3208,1347.8086 10930.3999,1346.8457 Q10931.479,1345.8828 10933.3633,1345.8828 Q10934.2183,1345.8828 10935.0732,1346.0779 Q10935.9282,1346.2729 10936.7666,1346.6548 L10936.7666,1349.0454 Q10935.978,1348.4893 10935.1646,1348.1987 Q10934.3511,1347.9082 10933.5542,1347.9082 Q10932.666,1347.9082 10932.1929,1348.2651 Q10931.7197,1348.6221 10931.7197,1349.2861 Q10931.7197,1349.8008 10932.0642,1350.137 Q10932.4087,1350.4731 10933.5044,1350.8799 L10934.5586,1351.2783 Q10936.0527,1351.8262 10936.7583,1352.731 Q10937.4639,1353.6357 10937.4639,1355.0137 Q10937.4639,1356.8896 10936.3557,1357.8152 Q10935.2476,1358.7407 10933.0063,1358.7407 Q10932.085,1358.7407 10931.1594,1358.5208 Q10930.2339,1358.3008 10929.3706,1357.8691 L10929.3706,1355.3374 Q10930.3501,1356.0347 10931.2673,1356.375 Q10932.1846,1356.7153 10933.0811,1356.7153 Q10933.9858,1356.7153 10934.4839,1356.3044 Q10934.9819,1355.8936 10934.9819,1355.1548 Q10934.9819,1354.5986 10934.6499,1354.1794 Q10934.3179,1353.7603 10933.687,1353.5195 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="92" x="10953.25" y="1357.291">contractCode</text><line style="stroke:#181818;stroke-width:0.5;" x1="10874.5" x2="11091.5" y1="1368" y2="1368"/><ellipse cx="10884.5" cy="1379" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="142" x="10893.5" y="1385.5352">ContractName string</text><ellipse cx="10884.5" cy="1395.4883" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="144" x="10893.5" y="1402.0234">ExecCode exec.Code</text><ellipse cx="10884.5" cy="1411.9766" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="193" x="10893.5" y="1418.5117">Desc protos.WasmCodeDesc</text><line style="stroke:#181818;stroke-width:0.5;" x1="10874.5" x2="11091.5" y1="1425.4648" y2="1425.4648"/></g><!--MD5=[915cc4003f3fcb4571449da3e4dac468]
class xvm.debugWriter--><g id="elem_xvm.debugWriter"><rect codeLine="657" fill="#F1F1F1" height="163.418" id="xvm.debugWriter" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="198" x="11128" y="1303"/><ellipse cx="11180.25" cy="1319" fill="#7FFFD4" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M11179.9834,1320.063 Q11178.1323,1319.3574 11177.4766,1318.5813 Q11176.8208,1317.8052 11176.8208,1316.4937 Q11176.8208,1314.8086 11177.8999,1313.8457 Q11178.979,1312.8828 11180.8633,1312.8828 Q11181.7183,1312.8828 11182.5732,1313.0779 Q11183.4282,1313.2729 11184.2666,1313.6548 L11184.2666,1316.0454 Q11183.478,1315.4893 11182.6646,1315.1987 Q11181.8511,1314.9082 11181.0542,1314.9082 Q11180.166,1314.9082 11179.6929,1315.2651 Q11179.2197,1315.6221 11179.2197,1316.2861 Q11179.2197,1316.8008 11179.5642,1317.137 Q11179.9087,1317.4731 11181.0044,1317.8799 L11182.0586,1318.2783 Q11183.5527,1318.8262 11184.2583,1319.731 Q11184.9639,1320.6357 11184.9639,1322.0137 Q11184.9639,1323.8896 11183.8557,1324.8152 Q11182.7476,1325.7407 11180.5063,1325.7407 Q11179.585,1325.7407 11178.6594,1325.5208 Q11177.7339,1325.3008 11176.8706,1324.8691 L11176.8706,1322.3374 Q11177.8501,1323.0347 11178.7673,1323.375 Q11179.6846,1323.7153 11180.5811,1323.7153 Q11181.4858,1323.7153 11181.9839,1323.3044 Q11182.4819,1322.8936 11182.4819,1322.1548 Q11182.4819,1321.5986 11182.1499,1321.1794 Q11181.8179,1320.7603 11181.187,1320.5195 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="85" x="11200.75" y="1324.291">debugWriter</text><line style="stroke:#181818;stroke-width:0.5;" x1="11129" x2="11325" y1="1335" y2="1335"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="11136" y="1343"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="108" x="11148" y="1352.5352">buf bytes.Buffer</text><line style="stroke:#181818;stroke-width:0.5;" x1="11129" x2="11325" y1="1359.4883" y2="1359.4883"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="11136" y="1367.4883"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="64" x="11148" y="1377.0234">flushfunc</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="11216" y="1377.0234">func</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="50" x="11246" y="1377.0234">(string)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="11148" y="1393.5117"> </text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="11136" y="1400.4648"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="96" x="11148" y="1410">write(p []byte)</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="11136" y="1416.9531"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="44" x="11148" y="1426.4883">flush()</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="11148" y="1442.9766"> </text><ellipse cx="11139" cy="1452.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="172" x="11148" y="1459.4648">Write(p []byte) (int, error)</text></g><!--MD5=[b22b143191e7814ea383d2adac7df43d]
class xvm.hexCodec--><g id="elem_xvm.hexCodec"><rect codeLine="667" fill="#F1F1F1" height="80.9766" id="xvm.hexCodec" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="239" x="11763.5" y="1658"/><ellipse cx="11844.25" cy="1674" fill="#7FFFD4" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M11843.9834,1675.063 Q11842.1323,1674.3574 11841.4766,1673.5813 Q11840.8208,1672.8052 11840.8208,1671.4937 Q11840.8208,1669.8086 11841.8999,1668.8457 Q11842.979,1667.8828 11844.8633,1667.8828 Q11845.7183,1667.8828 11846.5732,1668.0779 Q11847.4282,1668.2729 11848.2666,1668.6548 L11848.2666,1671.0454 Q11847.478,1670.4893 11846.6646,1670.1987 Q11845.8511,1669.9082 11845.0542,1669.9082 Q11844.166,1669.9082 11843.6929,1670.2651 Q11843.2197,1670.6221 11843.2197,1671.2861 Q11843.2197,1671.8008 11843.5642,1672.137 Q11843.9087,1672.4731 11845.0044,1672.8799 L11846.0586,1673.2783 Q11847.5527,1673.8262 11848.2583,1674.731 Q11848.9639,1675.6357 11848.9639,1677.0137 Q11848.9639,1678.8896 11847.8557,1679.8152 Q11846.7476,1680.7407 11844.5063,1680.7407 Q11843.585,1680.7407 11842.6594,1680.5208 Q11841.7339,1680.3008 11840.8706,1679.8691 L11840.8706,1677.3374 Q11841.8501,1678.0347 11842.7673,1678.375 Q11843.6846,1678.7153 11844.5811,1678.7153 Q11845.4858,1678.7153 11845.9839,1678.3044 Q11846.4819,1677.8936 11846.4819,1677.1548 Q11846.4819,1676.5986 11846.1499,1676.1794 Q11845.8179,1675.7603 11845.187,1675.5195 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="69" x="11864.75" y="1679.291">hexCodec</text><line style="stroke:#181818;stroke-width:0.5;" x1="11764.5" x2="12001.5" y1="1690" y2="1690"/><line style="stroke:#181818;stroke-width:0.5;" x1="11764.5" x2="12001.5" y1="1698" y2="1698"/><ellipse cx="11774.5" cy="1709" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="159" x="11783.5" y="1715.5352">Encode(in []byte) []byte</text><ellipse cx="11774.5" cy="1725.4883" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="213" x="11783.5" y="1732.0234">Decode(in []byte) ([]byte, error)</text></g><!--MD5=[033943eb2120a02d4f99e869b7423167]
class xvm.responseDesc--><g id="elem_xvm.responseDesc"><rect codeLine="672" fill="#F1F1F1" height="80.9766" id="xvm.responseDesc" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="127" x="10269.5" y="1658"/><ellipse cx="10284.5" cy="1674" fill="#7FFFD4" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M10284.2334,1675.063 Q10282.3823,1674.3574 10281.7266,1673.5813 Q10281.0708,1672.8052 10281.0708,1671.4937 Q10281.0708,1669.8086 10282.1499,1668.8457 Q10283.229,1667.8828 10285.1133,1667.8828 Q10285.9683,1667.8828 10286.8232,1668.0779 Q10287.6782,1668.2729 10288.5166,1668.6548 L10288.5166,1671.0454 Q10287.728,1670.4893 10286.9146,1670.1987 Q10286.1011,1669.9082 10285.3042,1669.9082 Q10284.416,1669.9082 10283.9429,1670.2651 Q10283.4697,1670.6221 10283.4697,1671.2861 Q10283.4697,1671.8008 10283.8142,1672.137 Q10284.1587,1672.4731 10285.2544,1672.8799 L10286.3086,1673.2783 Q10287.8027,1673.8262 10288.5083,1674.731 Q10289.2139,1675.6357 10289.2139,1677.0137 Q10289.2139,1678.8896 10288.1057,1679.8152 Q10286.9976,1680.7407 10284.7563,1680.7407 Q10283.835,1680.7407 10282.9094,1680.5208 Q10281.9839,1680.3008 10281.1206,1679.8691 L10281.1206,1677.3374 Q10282.1001,1678.0347 10283.0173,1678.375 Q10283.9346,1678.7153 10284.8311,1678.7153 Q10285.7358,1678.7153 10286.2339,1678.3044 Q10286.7319,1677.8936 10286.7319,1677.1548 Q10286.7319,1676.5986 10286.3999,1676.1794 Q10286.0679,1675.7603 10285.437,1675.5195 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="95" x="10298.5" y="1679.291">responseDesc</text><line style="stroke:#181818;stroke-width:0.5;" x1="10270.5" x2="10395.5" y1="1690" y2="1690"/><ellipse cx="10280.5" cy="1701" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="76" x="10289.5" y="1707.5352">Body []byte</text><ellipse cx="10280.5" cy="1717.4883" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="70" x="10289.5" y="1724.0234">Error bool</text><line style="stroke:#181818;stroke-width:0.5;" x1="10270.5" x2="10395.5" y1="1730.9766" y2="1730.9766"/></g><!--MD5=[10b96c7c3a357fbee6fbf94b405acb8f]
class xvm.syscallResolver--><g id="elem_xvm.syscallResolver"><rect codeLine="677" fill="#F1F1F1" height="212.8828" id="xvm.syscallResolver" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="1297" x="10431.5" y="1592"/><ellipse cx="11024.75" cy="1608" fill="#7FFFD4" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M11024.4834,1609.063 Q11022.6323,1608.3574 11021.9766,1607.5813 Q11021.3208,1606.8052 11021.3208,1605.4937 Q11021.3208,1603.8086 11022.3999,1602.8457 Q11023.479,1601.8828 11025.3633,1601.8828 Q11026.2183,1601.8828 11027.0732,1602.0779 Q11027.9282,1602.2729 11028.7666,1602.6548 L11028.7666,1605.0454 Q11027.978,1604.4893 11027.1646,1604.1987 Q11026.3511,1603.9082 11025.5542,1603.9082 Q11024.666,1603.9082 11024.1929,1604.2651 Q11023.7197,1604.6221 11023.7197,1605.2861 Q11023.7197,1605.8008 11024.0642,1606.137 Q11024.4087,1606.4731 11025.5044,1606.8799 L11026.5586,1607.2783 Q11028.0527,1607.8262 11028.7583,1608.731 Q11029.4639,1609.6357 11029.4639,1611.0137 Q11029.4639,1612.8896 11028.3557,1613.8152 Q11027.2476,1614.7407 11025.0063,1614.7407 Q11024.085,1614.7407 11023.1594,1614.5208 Q11022.2339,1614.3008 11021.3706,1613.8691 L11021.3706,1611.3374 Q11022.3501,1612.0347 11023.2673,1612.375 Q11024.1846,1612.7153 11025.0811,1612.7153 Q11025.9858,1612.7153 11026.4839,1612.3044 Q11026.9819,1611.8936 11026.9819,1611.1548 Q11026.9819,1610.5986 11026.6499,1610.1794 Q11026.3179,1609.7603 11025.687,1609.5195 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102" x="11045.25" y="1613.291">syscallResolver</text><line style="stroke:#181818;stroke-width:0.5;" x1="10432.5" x2="11727.5" y1="1624" y2="1624"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="10439.5" y="1632"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="197" x="10451.5" y="1641.5352">syscall *bridge.SyscallService</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="10439.5" y="1648.4883"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="178" x="10451.5" y="1658.0234">rpcserver *memrpc.Server</text><line style="stroke:#181818;stroke-width:0.5;" x1="10432.5" x2="11727.5" y1="1664.9766" y2="1664.9766"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="10439.5" y="1672.9766"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="344" x="10451.5" y="1682.5117">goCallMethod(ctx exec.Context, sp uint32) uint32</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="10439.5" y="1689.4648"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="369" x="10451.5" y="1699">goFetchResponse(ctx exec.Context, sp uint32) uint32</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="10439.5" y="1705.9531"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="814" x="10451.5" y="1715.4883">cCallMethod(ctx exec.Context, methodAddr uint32, methodLen uint32, requestAddr uint32, requestLen uint32) uint32</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="10439.5" y="1722.4414"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="505" x="10451.5" y="1731.9766">cFetchResponse(ctx exec.Context, userBuf uint32, userLen uint32) uint32</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="10439.5" y="1738.9297"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1271" x="10451.5" y="1748.4648">cCallMethodv2(ctx exec.Context, methodAddr uint32, methodLen uint32, requestAddr uint32, requestLen uint32, responseAddr uint32, responseLen uint32, successAddr uint32) uint32</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="10451.5" y="1764.9531"> </text><ellipse cx="10442.5" cy="1774.9063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="381" x="10451.5" y="1781.4414">ResolveGlobal(module string, name string) (int64, bool)</text><ellipse cx="10442.5" cy="1791.3945" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="290" x="10451.5" y="1797.9297">ResolveFunc(module string, name string) (</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="60" x="10741.5" y="1797.9297">interface</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="54" x="10801.5" y="1797.9297">{}, bool)</text></g><!--MD5=[010ea0df91fd90b3d6c3972b8a381d42]
class xvm.compileFunc--><g id="elem_xvm.compileFunc"><rect codeLine="691" fill="#F1F1F1" height="48" id="xvm.compileFunc" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="119" x="9675.5" y="1674.5"/><ellipse cx="9690.5" cy="1690.5" fill="#FF7700" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M9691.8418,1697.75 L9689.3931,1697.75 L9689.3931,1687.4985 L9686.2471,1687.4985 L9686.2471,1685.3569 L9694.9878,1685.3569 L9694.9878,1687.4985 L9691.8418,1687.4985 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="87" x="9704.5" y="1695.791">compileFunc</text><line style="stroke:#181818;stroke-width:0.5;" x1="9676.5" x2="9793.5" y1="1706.5" y2="1706.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="9676.5" x2="9793.5" y1="1714.5" y2="1714.5"/></g><!--MD5=[d4d2ae40768e6df50ad59c1202935559]
class xvm.makeExecCodeFunc--><g id="elem_xvm.makeExecCodeFunc"><rect codeLine="693" fill="#F1F1F1" height="48" id="xvm.makeExecCodeFunc" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="170" x="9905" y="1674.5"/><ellipse cx="9920" cy="1690.5" fill="#FF7700" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M9921.3418,1697.75 L9918.8931,1697.75 L9918.8931,1687.4985 L9915.7471,1687.4985 L9915.7471,1685.3569 L9924.4878,1685.3569 L9924.4878,1687.4985 L9921.3418,1687.4985 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="138" x="9934" y="1695.791">makeExecCodeFunc</text><line style="stroke:#181818;stroke-width:0.5;" x1="9906" x2="10074" y1="1706.5" y2="1706.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="9906" x2="10074" y1="1714.5" y2="1714.5"/></g><!--MD5=[672e34a7c1f56f845455347bc56b89cd]
class xvm.xvmCreator--><g id="elem_xvm.xvmCreator"><rect codeLine="695" fill="#F1F1F1" height="212.8828" id="xvm.xvmCreator" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="666" x="12713" y="1278"/><ellipse cx="13001.25" cy="1294" fill="#7FFFD4" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M13000.9834,1295.063 Q12999.1323,1294.3574 12998.4766,1293.5813 Q12997.8208,1292.8052 12997.8208,1291.4937 Q12997.8208,1289.8086 12998.8999,1288.8457 Q12999.979,1287.8828 13001.8633,1287.8828 Q13002.7183,1287.8828 13003.5732,1288.0779 Q13004.4282,1288.2729 13005.2666,1288.6548 L13005.2666,1291.0454 Q13004.478,1290.4893 13003.6646,1290.1987 Q13002.8511,1289.9082 13002.0542,1289.9082 Q13001.166,1289.9082 13000.6929,1290.2651 Q13000.2197,1290.6221 13000.2197,1291.2861 Q13000.2197,1291.8008 13000.5642,1292.137 Q13000.9087,1292.4731 13002.0044,1292.8799 L13003.0586,1293.2783 Q13004.5527,1293.8262 13005.2583,1294.731 Q13005.9639,1295.6357 13005.9639,1297.0137 Q13005.9639,1298.8896 13004.8557,1299.8152 Q13003.7476,1300.7407 13001.5063,1300.7407 Q13000.585,1300.7407 12999.6594,1300.5208 Q12998.7339,1300.3008 12997.8706,1299.8691 L12997.8706,1297.3374 Q12998.8501,1298.0347 12999.7673,1298.375 Q13000.6846,1298.7153 13001.5811,1298.7153 Q13002.4858,1298.7153 13002.9839,1298.3044 Q13003.4819,1297.8936 13003.4819,1297.1548 Q13003.4819,1296.5986 13003.1499,1296.1794 Q13002.8179,1295.7603 13002.187,1295.5195 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="81" x="13021.75" y="1299.291">xvmCreator</text><line style="stroke:#181818;stroke-width:0.5;" x1="12714" x2="13378" y1="1310" y2="1310"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="12721" y="1318"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="124" x="12733" y="1327.5352">cm *codeManager</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="12721" y="1334.4883"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="251" x="12733" y="1344.0234">config bridge.InstanceCreatorConfig</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="12721" y="1350.9766"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="220" x="12733" y="1360.5117">vmconfig *contract.WasmConfig</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="12721" y="1367.4648"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="12733" y="1377">wasm2cPath string</text><line style="stroke:#181818;stroke-width:0.5;" x1="12714" x2="13378" y1="1383.9531" y2="1383.9531"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="12721" y="1391.9531"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="636" x="12733" y="1401.4883">getContractCodeCache(name string, cp bridge.ContractCodeProvider) (*contractCode, error)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="12733" y="1417.9766"> </text><ellipse cx="12724" cy="1427.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="336" x="12733" y="1434.4648">CompileCode(buf []byte, outputPath string) error</text><ellipse cx="12724" cy="1444.418" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="335" x="12733" y="1450.9531">MakeExecCode(libpath string) (exec.Code, error)</text><ellipse cx="12724" cy="1460.9063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="640" x="12733" y="1467.4414">CreateInstance(ctx *bridge.Context, cp bridge.ContractCodeProvider) (bridge.Instance, error)</text><ellipse cx="12724" cy="1477.3945" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="245" x="12733" y="1483.9297">RemoveCache(contractName string)</text></g><!--MD5=[407066b69a0be89e20a425e2b9844ba4]
class xvm.xvmInstance--><g id="elem_xvm.xvmInstance"><rect codeLine="709" fill="#F1F1F1" height="229.3711" id="xvm.xvmInstance" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="341" x="11635.5" y="1270"/><ellipse cx="11758.75" cy="1286" fill="#7FFFD4" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M11758.4834,1287.063 Q11756.6323,1286.3574 11755.9766,1285.5813 Q11755.3208,1284.8052 11755.3208,1283.4937 Q11755.3208,1281.8086 11756.3999,1280.8457 Q11757.479,1279.8828 11759.3633,1279.8828 Q11760.2183,1279.8828 11761.0732,1280.0779 Q11761.9282,1280.2729 11762.7666,1280.6548 L11762.7666,1283.0454 Q11761.978,1282.4893 11761.1646,1282.1987 Q11760.3511,1281.9082 11759.5542,1281.9082 Q11758.666,1281.9082 11758.1929,1282.2651 Q11757.7197,1282.6221 11757.7197,1283.2861 Q11757.7197,1283.8008 11758.0642,1284.137 Q11758.4087,1284.4731 11759.5044,1284.8799 L11760.5586,1285.2783 Q11762.0527,1285.8262 11762.7583,1286.731 Q11763.4639,1287.6357 11763.4639,1289.0137 Q11763.4639,1290.8896 11762.3557,1291.8152 Q11761.2476,1292.7407 11759.0063,1292.7407 Q11758.085,1292.7407 11757.1594,1292.5208 Q11756.2339,1292.3008 11755.3706,1291.8691 L11755.3706,1289.3374 Q11756.3501,1290.0347 11757.2673,1290.375 Q11758.1846,1290.7153 11759.0811,1290.7153 Q11759.9858,1290.7153 11760.4839,1290.3044 Q11760.9819,1289.8936 11760.9819,1289.1548 Q11760.9819,1288.5986 11760.6499,1288.1794 Q11760.3179,1287.7603 11759.687,1287.5195 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="86" x="11779.25" y="1291.291">xvmInstance</text><line style="stroke:#181818;stroke-width:0.5;" x1="11636.5" x2="11975.5" y1="1302" y2="1302"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="11643.5" y="1310"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="184" x="11655.5" y="1319.5352">bridgeCtx *bridge.Context</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="11643.5" y="1326.4883"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="151" x="11655.5" y="1336.0234">execCtx exec.Context</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="11643.5" y="1342.9766"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="192" x="11655.5" y="1352.5117">desc protos.WasmCodeDesc</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="11643.5" y="1359.4648"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="197" x="11655.5" y="1369">syscall *bridge.SyscallService</text><line style="stroke:#181818;stroke-width:0.5;" x1="11636.5" x2="11975.5" y1="1375.9531" y2="1375.9531"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="11643.5" y="1383.9531"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="182" x="11655.5" y="1393.4883">guessEntry() (string, error)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="11655.5" y="1409.9766"> </text><ellipse cx="11646.5" cy="1419.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="81" x="11655.5" y="1426.4648">Exec() error</text><ellipse cx="11646.5" cy="1436.418" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="211" x="11655.5" y="1442.9531">ResourceUsed() contract.Limits</text><ellipse cx="11646.5" cy="1452.9063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="62" x="11655.5" y="1459.4414">Release()</text><ellipse cx="11646.5" cy="1469.3945" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="122" x="11655.5" y="1475.9297">Abort(msg string)</text><ellipse cx="11646.5" cy="1485.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="315" x="11655.5" y="1492.418">InitDebugWriter(syscall *bridge.SyscallService)</text></g><!--MD5=[b902e89d02d928c9a62d1e255ce00b29]
class xvm.xvmInterpCreator--><g id="elem_xvm.xvmInterpCreator"><rect codeLine="724" fill="#F1F1F1" height="163.418" id="xvm.xvmInterpCreator" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="666" x="13414" y="1303"/><ellipse cx="13681.75" cy="1319" fill="#7FFFD4" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M13681.4834,1320.063 Q13679.6323,1319.3574 13678.9766,1318.5813 Q13678.3208,1317.8052 13678.3208,1316.4937 Q13678.3208,1314.8086 13679.3999,1313.8457 Q13680.479,1312.8828 13682.3633,1312.8828 Q13683.2183,1312.8828 13684.0732,1313.0779 Q13684.9282,1313.2729 13685.7666,1313.6548 L13685.7666,1316.0454 Q13684.978,1315.4893 13684.1646,1315.1987 Q13683.3511,1314.9082 13682.5542,1314.9082 Q13681.666,1314.9082 13681.1929,1315.2651 Q13680.7197,1315.6221 13680.7197,1316.2861 Q13680.7197,1316.8008 13681.0642,1317.137 Q13681.4087,1317.4731 13682.5044,1317.8799 L13683.5586,1318.2783 Q13685.0527,1318.8262 13685.7583,1319.731 Q13686.4639,1320.6357 13686.4639,1322.0137 Q13686.4639,1323.8896 13685.3557,1324.8152 Q13684.2476,1325.7407 13682.0063,1325.7407 Q13681.085,1325.7407 13680.1594,1325.5208 Q13679.2339,1325.3008 13678.3706,1324.8691 L13678.3706,1322.3374 Q13679.3501,1323.0347 13680.2673,1323.375 Q13681.1846,1323.7153 13682.0811,1323.7153 Q13682.9858,1323.7153 13683.4839,1323.3044 Q13683.9819,1322.8936 13683.9819,1322.1548 Q13683.9819,1321.5986 13683.6499,1321.1794 Q13683.3179,1320.7603 13682.687,1320.5195 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="122" x="13702.25" y="1324.291">xvmInterpCreator</text><line style="stroke:#181818;stroke-width:0.5;" x1="13415" x2="14079" y1="1335" y2="1335"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="13422" y="1343"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="124" x="13434" y="1352.5352">cm *codeManager</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="13422" y="1359.4883"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="251" x="13434" y="1369.0234">config bridge.InstanceCreatorConfig</text><line style="stroke:#181818;stroke-width:0.5;" x1="13415" x2="14079" y1="1375.9766" y2="1375.9766"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="13422" y="1383.9766"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="333" x="13434" y="1393.5117">compileCode(buf []byte, outputPath string) error</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="13422" y="1400.4648"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="352" x="13434" y="1410">makeExecCode(codepath string) (exec.Code, error)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="13434" y="1426.4883"> </text><ellipse cx="13425" cy="1436.4414" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="640" x="13434" y="1442.9766">CreateInstance(ctx *bridge.Context, cp bridge.ContractCodeProvider) (bridge.Instance, error)</text><ellipse cx="13425" cy="1452.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="245" x="13434" y="1459.4648">RemoveCache(contractName string)</text></g><!--MD5=[797e324a5602e8ea9a883963636d698f]
class xvm.fontcolorbluefuncfontstringexecCodeerror--><g id="elem_xvm.fontcolorbluefuncfontstringexecCodeerror"><rect codeLine="735" fill="#F1F1F1" height="48" id="xvm.fontcolorbluefuncfontstringexecCodeerror" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="241" x="9869.5" y="1360.5"/><ellipse cx="9884.5" cy="1376.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M9886.9731,1382.6431 Q9886.3921,1382.9419 9885.7529,1383.0913 Q9885.1138,1383.2407 9884.4082,1383.2407 Q9881.9014,1383.2407 9880.5815,1381.5889 Q9879.2617,1379.937 9879.2617,1376.8159 Q9879.2617,1373.6865 9880.5815,1372.0347 Q9881.9014,1370.3828 9884.4082,1370.3828 Q9885.1138,1370.3828 9885.7612,1370.5322 Q9886.4087,1370.6816 9886.9731,1370.9805 L9886.9731,1373.7031 Q9886.3423,1373.1221 9885.7488,1372.8523 Q9885.1553,1372.5825 9884.5244,1372.5825 Q9883.1797,1372.5825 9882.4949,1373.6492 Q9881.8101,1374.7158 9881.8101,1376.8159 Q9881.8101,1378.9077 9882.4949,1379.9744 Q9883.1797,1381.041 9884.5244,1381.041 Q9885.1553,1381.041 9885.7488,1380.7712 Q9886.3423,1380.5015 9886.9731,1379.9204 Z " fill="#000000"/><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="9898.5" y="1381.791">func</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="179" x="9928.5" y="1381.791">(string) (exec.Code, error)</text><line style="stroke:#181818;stroke-width:0.5;" x1="9870.5" x2="10109.5" y1="1392.5" y2="1392.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="9870.5" x2="10109.5" y1="1400.5" y2="1400.5"/></g><!--MD5=[afc90baebc9957834a6144145d246a61]
class xvm.<font color=blue>func</font>([]byte, string) error--><g id="elem_xvm.&lt;font color=blue&gt;func&lt;/font&gt;([]byte, string) error"><rect fill="#F1F1F1" height="48" id="xvm.&lt;font color=blue&gt;func&lt;/font&gt;([]byte, string) error" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="198" x="9636" y="1360.5"/><ellipse cx="9651" cy="1376.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M9653.4731,1382.6431 Q9652.8921,1382.9419 9652.2529,1383.0913 Q9651.6138,1383.2407 9650.9082,1383.2407 Q9648.4014,1383.2407 9647.0815,1381.5889 Q9645.7617,1379.937 9645.7617,1376.8159 Q9645.7617,1373.6865 9647.0815,1372.0347 Q9648.4014,1370.3828 9650.9082,1370.3828 Q9651.6138,1370.3828 9652.2612,1370.5322 Q9652.9087,1370.6816 9653.4731,1370.9805 L9653.4731,1373.7031 Q9652.8423,1373.1221 9652.2488,1372.8523 Q9651.6553,1372.5825 9651.0244,1372.5825 Q9649.6797,1372.5825 9648.9949,1373.6492 Q9648.3101,1374.7158 9648.3101,1376.8159 Q9648.3101,1378.9077 9648.9949,1379.9744 Q9649.6797,1381.041 9651.0244,1381.041 Q9651.6553,1381.041 9652.2488,1380.7712 Q9652.8423,1380.5015 9653.4731,1379.9204 Z " fill="#000000"/><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="9665" y="1381.791">func</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="136" x="9695" y="1381.791">([]byte, string) error</text><line style="stroke:#181818;stroke-width:0.5;" x1="9637" x2="9833" y1="1392.5" y2="1392.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="9637" x2="9833" y1="1400.5" y2="1400.5"/></g><!--MD5=[aaadaf5c3ad6e0e0dd8a1e035309d301]
class __builtin__.string--><g id="elem___builtin__.string"><rect fill="#F1F1F1" height="48" id="__builtin__.string" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="72" x="11874" y="41"/><ellipse cx="11889" cy="57" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M11891.4731,63.1431 Q11890.8921,63.4419 11890.2529,63.5913 Q11889.6138,63.7407 11888.9082,63.7407 Q11886.4014,63.7407 11885.0815,62.0889 Q11883.7617,60.437 11883.7617,57.3159 Q11883.7617,54.1865 11885.0815,52.5347 Q11886.4014,50.8828 11888.9082,50.8828 Q11889.6138,50.8828 11890.2612,51.0322 Q11890.9087,51.1816 11891.4731,51.4805 L11891.4731,54.2031 Q11890.8423,53.6221 11890.2488,53.3523 Q11889.6553,53.0825 11889.0244,53.0825 Q11887.6797,53.0825 11886.9949,54.1492 Q11886.3101,55.2158 11886.3101,57.3159 Q11886.3101,59.4077 11886.9949,60.4744 Q11887.6797,61.541 11889.0244,61.541 Q11889.6553,61.541 11890.2488,61.2712 Q11890.8423,61.0015 11891.4731,60.4204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="40" x="11903" y="62.291">string</text><line style="stroke:#181818;stroke-width:0.5;" x1="11875" x2="11945" y1="73" y2="73"/><line style="stroke:#181818;stroke-width:0.5;" x1="11875" x2="11945" y1="81" y2="81"/></g><!--MD5=[b7fef524017ea6078be600c8984c8a25]
reverse link bridge.contractManager to bridge.XBridge--><g id="link_bridge.contractManager_bridge.XBridge"><path codeLine="197" d="M11272.03,478.39 C11211.25,564.33 11115.67,699.48 11044.96,799.47 " fill="none" id="bridge.contractManager-backto-bridge.XBridge" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="11279.63,467.64,11272.9008,470.2319,11272.7051,477.4403,11279.4343,474.8484,11279.63,467.64" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[cd0a67f6542566abfacf551bb3517be0]
reverse link bridge.ContractCodeProvider to bridge.descProvider--><g id="link_bridge.ContractCodeProvider_bridge.descProvider"><path codeLine="198" d="M12191.59,468.91 C12143.21,522.26 12070.34,590.57 11990,624 C11890.86,665.26 11845.6,594.11 11749,641 C11635.18,696.26 11547.85,824.73 11509.03,889.96 " fill="none" id="bridge.ContractCodeProvider-backto-bridge.descProvider" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="12200.33,459.14,12193.3477,460.9422,12192.3258,468.0805,12199.308,466.2783,12200.33,459.14" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[93e2cdbe33dee190072cc1e6910574e3]
reverse link bridge.stateGetReader to bridge.stateReaderWrapper--><g id="link_bridge.stateGetReader_bridge.stateReaderWrapper"><path codeLine="199" d="M9744.3,438.92 C9764.15,543.97 9814,807.76 9831.12,898.37 " fill="none" id="bridge.stateGetReader-backto-bridge.stateReaderWrapper" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="9741.87,426.05,9739.0541,432.6886,9744.099,437.8412,9746.9149,431.2026,9741.87,426.05" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[2175ff9312899d440d211124268bf417]
reverse link pbrpc.SyscallServer to bridge.SyscallService--><g id="link_pbrpc.SyscallServer_bridge.SyscallService"><path codeLine="201" d="M10372,109.3 C10372,138.71 10372,179.7 10372,221.39 " fill="none" id="pbrpc.SyscallServer-backto-bridge.SyscallService" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="10365,109.25,10372,89.25,10379,109.25,10365,109.25" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[79693de6326538b2f39f2d2e4343602d]
reverse link bridge.ContractCodeProvider to bridge.codeProvider--><g id="link_bridge.ContractCodeProvider_bridge.codeProvider"><path codeLine="202" d="M12214.71,477.7 C12167.94,581.44 12088.47,757.69 12043.87,856.6 " fill="none" id="bridge.ContractCodeProvider-backto-bridge.codeProvider" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="12208.45,474.56,12223.05,459.21,12221.21,480.32,12208.45,474.56" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[22122e395886c3aa77307a3c86ccae56]
reverse link contract.Context to bridge.vmContextImpl--><g id="link_contract.Context_bridge.vmContextImpl"><path codeLine="203" d="M2760.65,864.16 C2802.51,794.81 2879,688.76 2978,641 C3415.69,429.85 6839.13,399.93 7824.49,395.7 " fill="none" id="contract.Context-backto-bridge.vmContextImpl" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="2766.44,868.12,2750.26,881.81,2754.37,861.02,2766.44,868.12" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[7d8881e6034e897dca027ab43f588a27]
reverse link bridge.stateGetReader to bridge.xmStateReader--><g id="link_bridge.stateGetReader_bridge.xmStateReader"><path codeLine="204" d="M9701.21,442.31 C9666.29,489.25 9610.44,562.82 9559,624 C9479.96,718.02 9382.03,822.74 9325.71,881.92 " fill="none" id="bridge.stateGetReader-backto-bridge.xmStateReader" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="9695.77,437.9,9713.3,426,9707.02,446.24,9695.77,437.9" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[ae860bfbf32f1e1dab3ef767976d0e35]
reverse link bridge.stateReader to bridge.xmStateReader--><g id="link_bridge.stateReader_bridge.xmStateReader"><path codeLine="205" d="M9280,454.86 C9280,562 9280,784.43 9280,881.94 " fill="none" id="bridge.stateReader-backto-bridge.xmStateReader" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="9273,454.74,9280,434.74,9287,454.74,9273,454.74" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[b4b0c2b97bdedabaf3fc8d410998e247]
reverse link contract.StateSandbox to contract.KContext--><g id="link_contract.StateSandbox_contract.KContext"><path codeLine="414" d="M5687.88,1754.43 C5736.5,1786.65 5799.11,1828.15 5854.63,1864.94 " fill="none" id="contract.StateSandbox-backto-contract.KContext" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="5676.78,1747.07,5679.5717,1753.7188,5686.7828,1753.699,5683.9911,1747.0502,5676.78,1747.07" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[36fc532ece950ce2753797d8a852c479]
reverse link contract.ContractEventState to contract.State--><g id="link_contract.ContractEventState_contract.State"><path codeLine="415" d="M4436.36,974.54 C4464.88,1028.22 4520.04,1119.88 4590,1177 C4729.24,1290.69 4940.94,1354.12 5021.92,1375.35 " fill="none" id="contract.ContractEventState-backto-contract.State" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="4430.18,962.72,4429.4157,969.8905,4435.7407,973.3538,4436.505,966.1834,4430.18,962.72" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[f031d3961f9b596cf8a6cc3c0bfe9299]
reverse link contract.CrossQueryState to contract.State--><g id="link_contract.CrossQueryState_contract.State"><path codeLine="416" d="M4153.07,967.94 C4159.59,1021.72 4179.71,1121.91 4241,1177 C4361.23,1285.06 4883.93,1360.86 5021.64,1379.2 " fill="none" id="contract.CrossQueryState-backto-contract.State" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="4151.62,954.7,4148.2962,961.0994,4152.9249,966.6288,4156.2487,960.2294,4151.62,954.7" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[1582c1ae9db1de97a6353b20164701c9]
reverse link contract.UTXOState to contract.State--><g id="link_contract.UTXOState_contract.State"><path codeLine="417" d="M5494.86,972.73 C5454.7,1023.18 5382.72,1110.14 5313,1177 C5237.22,1249.67 5137.94,1323.96 5087.49,1360.43 " fill="none" id="contract.UTXOState-backto-contract.State" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="5502.94,962.53,5496.0786,964.7483,5495.4872,971.9351,5502.3486,969.7168,5502.94,962.53" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[ce84293604c165c2c43c90355e6b90e3]
reverse link contract.XMState to contract.State--><g id="link_contract.XMState_contract.State"><path codeLine="418" d="M5055,1000.95 C5055,1104.6 5055,1294.62 5055,1360.38 " fill="none" id="contract.XMState-backto-contract.State" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="5055,987.83,5051,993.83,5055,999.83,5059,993.83,5055,987.83" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[040981ba0afd3132110e69a9440b20f2]
reverse link contract.State to contract.StateSandbox--><g id="link_contract.State_contract.StateSandbox"><path codeLine="419" d="M5099.53,1410.76 C5191.31,1462.83 5402.83,1582.81 5521.09,1649.9 " fill="none" id="contract.State-backto-contract.StateSandbox" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="5088.17,1404.31,5091.4169,1410.7488,5098.6091,1410.2281,5095.3623,1403.7894,5088.17,1404.31" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[3dcf9a000ee6c75bb641a3a674f61324]
reverse link bridge.VMConfig to contract.EVMConfig--><g id="link_bridge.VMConfig_contract.EVMConfig"><path codeLine="421" d="M8461.68,454.84 C8451.51,509.26 8427.45,586.59 8371,624 C8321.09,657.07 4108.6,606.03 4060,641 C3986.36,693.98 3967.4,805.45 3962.91,873.27 " fill="none" id="bridge.VMConfig-backto-contract.EVMConfig" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="8454.81,453.47,8464.99,434.88,8468.63,455.76,8454.81,453.47" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[c2cc8a8ba4df216849ad90e73b273d91]
reverse link bridge.VMConfig to contract.NativeConfig--><g id="link_bridge.VMConfig_contract.NativeConfig"><path codeLine="422" d="M8461.69,454.85 C8451.52,509.27 8427.46,586.61 8371,624 C8314.92,661.14 3584.16,603.98 3528,641 C3455.65,688.69 3424.96,788.17 3412.09,856.88 " fill="none" id="bridge.VMConfig-backto-contract.NativeConfig" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="8454.82,453.48,8464.99,434.89,8468.63,455.76,8454.82,453.48" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[86889d43cac0247b6c6262319d461858]
reverse link bridge.VMConfig to contract.WasmConfig--><g id="link_bridge.VMConfig_contract.WasmConfig"><path codeLine="423" d="M8461.66,454.8 C8451.47,509.19 8427.4,586.51 8371,624 C8314.67,661.45 5990.85,601.41 5936,641 C5865.23,692.08 5844.97,797.16 5839.52,865.42 " fill="none" id="bridge.VMConfig-backto-contract.WasmConfig" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="8454.79,453.44,8464.97,434.86,8468.6,455.73,8454.79,453.44" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[916609d1c857ee8a008b73d1266f7151]
reverse link bridge.VMConfig to contract.XkernelConfig--><g id="link_bridge.VMConfig_contract.XkernelConfig"><path codeLine="424" d="M8461.68,454.83 C8451.5,509.24 8427.44,586.57 8371,624 C8329.63,651.44 4837.55,612.37 4797,641 C4725.24,691.67 4702.78,796.87 4695.88,865.26 " fill="none" id="bridge.VMConfig-backto-contract.XkernelConfig" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="8454.81,453.46,8464.99,434.88,8468.62,455.75,8454.81,453.46" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[a20e574c8d9f01dde0941549c0f07505]
reverse link contract.ChainCore to kernel.kcontextImpl--><g id="link_contract.ChainCore_kernel.kcontextImpl"><path codeLine="462" d="M7352,1008.91 C7352,1229.11 7352,1859.83 7352,2119.59 " fill="none" id="contract.ChainCore-backto-kernel.kcontextImpl" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="7352,995.62,7348,1001.62,7352,1007.62,7356,1001.62,7352,995.62" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[2fd7d648ea421336f18badbaa2f08fe8]
reverse link contract.StateSandbox to kernel.kcontextImpl--><g id="link_contract.StateSandbox_kernel.kcontextImpl"><path codeLine="463" d="M5590.13,1760.2 C5573.98,1842.47 5560.24,1988.34 5641,2069 C5733.2,2161.08 6496,2204.08 6971.46,2222.12 " fill="none" id="contract.StateSandbox-backto-kernel.kcontextImpl" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="5592.78,1747.31,5587.6547,1752.3826,5590.3657,1759.0646,5595.4911,1753.9921,5592.78,1747.31" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[8463c48667ea30ae04d92011c1adade4]
reverse link contract.KContext to kernel.kcontextImpl--><g id="link_contract.KContext_kernel.kcontextImpl"><path codeLine="465" d="M6268.86,2050.71 C6292.13,2057.34 6315.39,2063.54 6338,2069 C6545.16,2119.03 6779.87,2158.2 6971.27,2185.74 " fill="none" id="contract.KContext-backto-kernel.kcontextImpl" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6266.59,2057.35,6249.33,2045.06,6270.48,2043.9,6266.59,2057.35" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[4e68bac7a4598cc5cb845a78e7ff1197]
reverse link bridge.Instance to kernel.kernInstance--><g id="link_bridge.Instance_kernel.kernInstance"><path codeLine="466" d="M13421.86,469.93 C13443.4,521.14 13479.18,586.32 13532,624 C13562.3,645.62 13581.87,622.21 13614,641 C13895.44,805.58 13981.62,888.69 14096,1194 C14195.01,1458.28 14291.45,1625.41 14096,1829 C13628.31,2316.18 8632.2,1785.52 8023,2077 C7988.31,2093.6 7958.77,2123.47 7936.1,2152.7 " fill="none" id="bridge.Instance-backto-kernel.kernInstance" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="13415.24,472.25,13414.29,451.08,13428.23,467.03,13415.24,472.25" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[afe523111c6e15042fade8b6dbb56719]
reverse link bridge.InstanceCreator to kernel.kernvm--><g id="link_bridge.InstanceCreator_kernel.kernvm"><path codeLine="467" d="M14088.97,399.67 C14754.49,413.6 16388.29,465.49 16557,641 C16785.98,879.2 16594,1053.09 16594,1383.5 C16594,1383.5 16594,1383.5 16594,1699.5 C16594,2246.81 14704.11,2020.08 14159,2069 C13089.29,2165.01 9772.15,2215.37 8706.37,2229.38 " fill="none" id="bridge.InstanceCreator-backto-kernel.kernvm" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="14088.45,406.66,14068.6,399.25,14088.74,392.66,14088.45,406.66" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[66c5ee41a2fe6589c5f209264087fcd1]
reverse link contract.Manager to manager.managerImpl--><g id="link_contract.Manager_manager.managerImpl"><path codeLine="504" d="M1430.68,983.92 C1251.73,1028.35 1000.95,1099.87 793,1194 C736.48,1219.58 677.86,1254 627.34,1286.48 " fill="none" id="contract.Manager-backto-manager.managerImpl" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="1429.13,977.1,1450.23,979.11,1432.48,990.69,1429.13,977.1" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[babaf9e40650bd73b2924093b48cac81]
reverse link contract.KernRegistry to manager.registryImpl--><g id="link_contract.KernRegistry_manager.registryImpl"><path codeLine="505" d="M2132.83,1002.83 C2080.94,1061.61 1998.68,1140.93 1907,1177 C1806.64,1216.48 1525.62,1164.11 1422,1194 C1354.07,1213.59 1285.43,1250.38 1228.78,1286.37 " fill="none" id="contract.KernRegistry-backto-manager.registryImpl" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="2127.62,998.16,2146,987.62,2138.21,1007.32,2127.62,998.16" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[defbc6dbdb1d668beee789006abd57c2]
reverse link log15.Logger to native.DockerProcess--><g id="link_log15.Logger_native.DockerProcess"><path codeLine="606" d="M14165.97,968.19 C14169.49,1022.29 14184.37,1122.88 14245,1177 C14372.18,1290.52 14869.36,1349.44 15115.45,1372.16 " fill="none" id="log15.Logger-backto-native.DockerProcess" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="14165.28,954.86,14161.5952,961.0585,14165.8996,966.844,14169.5845,960.6455,14165.28,954.86" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[4e2102eae9eb2fa9129ff51bfdef8c16]
reverse link log15.Logger to native.HostProcess--><g id="link_log15.Logger_native.HostProcess"><path codeLine="607" d="M14164.69,968.07 C14166.45,1023.72 14178.94,1128.31 14245,1177 C14271.1,1196.24 15380.03,1188.61 15412,1194 C15569.31,1220.51 15742.17,1282.52 15856.45,1328.42 " fill="none" id="log15.Logger-backto-native.HostProcess" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="14164.45,954.72,14160.5561,960.7894,14164.661,966.7181,14168.5549,960.6488,14164.45,954.72" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[12a9ebf2e762a6943fba642286a88c0c]
reverse link native.Process to native.DockerProcess--><g id="link_native.Process_native.DockerProcess"><path codeLine="609" d="M16395.25,990.07 C16375.07,1048.71 16334.95,1135.95 16266,1177 C16225.2,1201.29 15885.74,1185.65 15839,1194 C15683.05,1221.86 15511.33,1281.24 15394.73,1326.16 " fill="none" id="native.Process-backto-native.DockerProcess" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="16388.61,987.86,16401.46,971.02,16401.92,992.2,16388.61,987.86" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[b12c7f7dffdc458fd643255625aad4bc]
reverse link native.Process to native.HostProcess--><g id="link_native.Process_native.HostProcess"><path codeLine="610" d="M16385.86,989.44 C16360.26,1042.11 16317.63,1120.08 16266,1177 C16219.53,1228.23 16158.57,1274.86 16105.31,1310.8 " fill="none" id="native.Process-backto-native.HostProcess" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="16379.59,986.31,16394.5,971.26,16392.23,992.33,16379.59,986.31" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[6ba8d3ec5a3b6cdca82382acbd74a0a9]
reverse link bridge.InstanceCreator to native.nativeCreator--><g id="link_bridge.InstanceCreator_native.nativeCreator"><path codeLine="611" d="M14088.66,401.94 C14382.82,418.6 14853.19,472.21 15221,641 C15329.25,690.68 15431.92,782.13 15497.93,848.78 " fill="none" id="bridge.InstanceCreator-backto-native.nativeCreator" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="14088.25,408.93,14068.66,400.85,14089.02,394.95,14088.25,408.93" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[1f89d59cc6c875c19d06997d614c59ae]
reverse link bridge.Instance to native.nativeVmInstance--><g id="link_bridge.Instance_native.nativeVmInstance"><path codeLine="612" d="M13418.56,469.96 C13438.92,523.21 13474.66,590.91 13532,624 C13600.19,663.35 14882.77,598.44 14949,641 C15022.95,688.52 15057.48,788.05 15073.05,856.8 " fill="none" id="bridge.Instance-backto-native.nativeVmInstance" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="13411.95,472.27,13411.74,451.08,13425.12,467.52,13411.95,472.27" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[0dc439e7bbf9ea4d46346a765db94a41]
reverse link bridge.InstanceCreator to xvm.HXVMCreator--><g id="link_bridge.InstanceCreator_xvm.HXVMCreator"><path codeLine="740" d="M13774.44,452.03 C13746.73,500.53 13709.24,572.95 13689,641 C13654.78,756.06 13711.26,1096.74 13622,1177 C13602.87,1194.2 12720.88,1187.47 12696,1194 C12617.97,1214.48 12538.26,1255.57 12474.57,1294.26 " fill="none" id="bridge.InstanceCreator-backto-xvm.HXVMCreator" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="13768.43,448.45,13784.53,434.67,13780.53,455.48,13768.43,448.45" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[472ca8f8e4c1d5c236b5f72cf01e976c]
reverse link xvm.codec to xvm.hexCodec--><g id="link_xvm.codec_xvm.hexCodec"><path codeLine="741" d="M11520.39,1441.25 C11545.38,1473.39 11580.08,1512.63 11618,1539.5 C11668.17,1575.05 11692.72,1561.3 11746,1592 C11778.64,1610.81 11812.21,1636.53 11837.94,1657.87 " fill="none" id="xvm.codec-backto-xvm.hexCodec" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="11514.72,1445.36,11508.24,1425.19,11525.89,1436.92,11514.72,1445.36" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[dabd34eabefa671cb98115cb5045c7a5]
reverse link bridge.InstanceCreator to xvm.xvmCreator--><g id="link_bridge.InstanceCreator_xvm.xvmCreator"><path codeLine="742" d="M13795.86,454.68 C13785.22,504.37 13770.35,577.06 13760,641 C13740.82,759.5 13780.67,1095.01 13693,1177 C13668.94,1199.5 13428.69,1185.02 13397,1194 C13331.21,1212.65 13263.94,1245.11 13206.14,1277.95 " fill="none" id="bridge.InstanceCreator-backto-xvm.xvmCreator" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="13789.07,452.96,13800.13,434.89,13802.75,455.92,13789.07,452.96" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[6eca1abfd53e7f396941f753d8b108c7]
reverse link bridge.Instance to xvm.xvmInstance--><g id="link_bridge.Instance_xvm.xvmInstance"><path codeLine="743" d="M13428.11,469.28 C13451.68,517.57 13487.32,579.58 13532,624 C13542.59,634.53 13553.57,628.04 13561,641 C13620.21,744.35 13644.77,1092.32 13561,1177 C13530.41,1207.93 12035.09,1177.11 11995,1194 C11955.82,1210.51 11920.5,1239.43 11891.29,1269.77 " fill="none" id="bridge.Instance-backto-xvm.xvmInstance" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="13421.77,472.25,13419.52,451.18,13434.42,466.25,13421.77,472.25" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[5a26b26d60f83bf549b57cdf36f86c89]
reverse link bridge.InstanceCreator to xvm.xvmInterpCreator--><g id="link_bridge.InstanceCreator_xvm.xvmInterpCreator"><path codeLine="744" d="M13806.05,454.97 C13799.51,586.03 13782.82,907.79 13764,1177 C13761.1,1218.45 13757.36,1264.53 13754.12,1302.63 " fill="none" id="bridge.InstanceCreator-backto-xvm.xvmInterpCreator" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="13799.07,454.53,13807.05,434.9,13813.05,455.22,13799.07,454.53" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[71c3ecc5b117745ef4a6547a34308bdd]
reverse link __builtin__.string to bridge.ContractType--><g id="link___builtin__.string_bridge.ContractType"><path codeLine="746" d="M11910,94.41 C11910,158.05 11910,311.07 11910,369.64 " fill="none" id="__builtin__.string-backto-bridge.ContractType" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><rect fill="#FFFFFF" height="10" style="stroke:#181818;stroke-width:1.5;" width="10" x="11905" y="84.25"/></g><!--MD5=[98a11c8577d9d8509191558186b6450e]
reverse link bridge.<font color=blue>func</font>(*InstanceCreatorConfig) (InstanceCreator, error) to bridge.NewInstanceCreatorFunc--><g id="link_bridge.&lt;font color=blue&gt;func&lt;/font&gt;(*InstanceCreatorConfig) (InstanceCreator, error)_bridge.NewInstanceCreatorFunc"><path codeLine="747" d="M8784,423.44 C8784,517.92 8784,820.19 8784,906.37 " fill="none" id="bridge.&lt;font color=blue&gt;func&lt;/font&gt;(*InstanceCreatorConfig) (InstanceCreator, error)-backto-bridge.NewInstanceCreatorFunc" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><rect fill="#FFFFFF" height="10" style="stroke:#181818;stroke-width:1.5;" width="10" x="8779" y="413.31"/></g><!--MD5=[92b14415fddd87ab1471acd1828a144a]
reverse link contract.<font color=blue>func</font>(*ManagerConfig) (Manager, error) to contract.NewManagerFunc--><g id="link_contract.&lt;font color=blue&gt;func&lt;/font&gt;(*ManagerConfig) (Manager, error)_contract.NewManagerFunc"><path codeLine="748" d="M3696,959.76 C3696,1042.67 3696,1284.13 3696,1360.24 " fill="none" id="contract.&lt;font color=blue&gt;func&lt;/font&gt;(*ManagerConfig) (Manager, error)-backto-contract.NewManagerFunc" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><rect fill="#FFFFFF" height="10" style="stroke:#181818;stroke-width:1.5;" width="10" x="3691" y="949.54"/></g><!--MD5=[d30f878f9fa714c74e4aa58f1b5c7b3d]
reverse link contract.<font color=blue>func</font>(KContext) (*Response, error) to contract.KernMethod--><g id="link_contract.&lt;font color=blue&gt;func&lt;/font&gt;(KContext) (*Response, error)_contract.KernMethod"><path codeLine="749" d="M3128,959.76 C3128,1042.67 3128,1284.13 3128,1360.24 " fill="none" id="contract.&lt;font color=blue&gt;func&lt;/font&gt;(KContext) (*Response, error)-backto-contract.KernMethod" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><rect fill="#FFFFFF" height="10" style="stroke:#181818;stroke-width:1.5;" width="10" x="3123" y="949.54"/></g><!--MD5=[a5dca930eab72f79cc628b6bef73168f]
reverse link xvm.<font color=blue>func</font>([]byte, string) error to xvm.compileFunc--><g id="link_xvm.&lt;font color=blue&gt;func&lt;/font&gt;([]byte, string) error_xvm.compileFunc"><path codeLine="750" d="M9735,1414 C9735,1475.15 9735,1617.93 9735,1674.15 " fill="none" id="xvm.&lt;font color=blue&gt;func&lt;/font&gt;([]byte, string) error-backto-xvm.compileFunc" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><rect fill="#FFFFFF" height="10" style="stroke:#181818;stroke-width:1.5;" width="10" x="9730" y="1403.7"/></g><!--MD5=[eb058ec02afe1a4df0639cb09cf323f4]
reverse link xvm.fontcolorbluefuncfontstringexecCodeerror to xvm.makeExecCodeFunc--><g id="link_xvm.fontcolorbluefuncfontstringexecCodeerror_xvm.makeExecCodeFunc"><path codeLine="751" d="M9990,1414 C9990,1475.15 9990,1617.93 9990,1674.15 " fill="none" id="xvm.fontcolorbluefuncfontstringexecCodeerror-backto-xvm.makeExecCodeFunc" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><rect fill="#FFFFFF" height="10" style="stroke:#181818;stroke-width:1.5;" width="10" x="9985" y="1403.7"/></g><!--MD5=[19023f72025616db1ed70d1f2b54294f]
@startuml

namespace bridge {
    class Context << (S,Aquamarine) >> {
        + ID int64
        + Module string
        + ContractName string
        + ResourceLimits contract.Limits
        + State contract.StateSandbox
        + Args <font color=blue>map</font>[string][]byte
        + Method string
        + Initiator string
        + Caller string
        + AuthRequire []string
        + CanInitialize bool
        + Core contract.ChainCore
        + TransferAmount string
        + Instance Instance
        + Logger logs.Logger
        + SubResourceUsed contract.Limits
        + ContractSet <font color=blue>map</font>[string]bool
        + Events []*protos.ContractEvent
        + Output *pb.Response
        + ReadFromCache bool

        + DiskUsed() int64
        + ExceedDiskLimit() bool
        + ResourceUsed() contract.Limits
        + GetInitiator() string
        + GetAuthRequire() []string

    }
    class ContextManager << (S,Aquamarine) >> {
        - ctxlock sync.Mutex
        - ctxid int64
        - ctxs <font color=blue>map</font>[int64]*Context

        + Context(id int64) (*Context, bool)
        + MakeContext() *Context
        + DestroyContext(ctx *Context) 

    }
    interface ContractCodeProvider  {
        + GetContractCodeDesc(name string) (*protos.WasmCodeDesc, error)
        + GetContractCode(name string) ([]byte, error)
        + GetContractAbi(name string) ([]byte, error)
        + GetContractCodeFromCache(name string) ([]byte, error)
        + GetContractAbiFromCache(name string) ([]byte, error)

    }
    class ContractError << (S,Aquamarine) >> {
        + Status int
        + Message string

        + Error() string

    }
    interface Instance  {
        + Exec() error
        + ResourceUsed() contract.Limits
        + Release() 
        + Abort(msg string) 

    }
    interface InstanceCreator  {
        + CreateInstance(ctx *Context, cp ContractCodeProvider) (Instance, error)
        + RemoveCache(name string) 

    }
    class InstanceCreatorConfig << (S,Aquamarine) >> {
        + Basedir string
        + SyscallService *SyscallService
        + VMConfig VMConfig

    }
    class SyscallService << (S,Aquamarine) >> {
        - ctxmgr *ContextManager
        - bridge *XBridge
        - core contract.ChainCore

        + Ping(ctx context.Context, in *pb.PingRequest) (*pb.PingResponse, error)
        + QueryBlock(ctx context.Context, in *pb.QueryBlockRequest) (*pb.QueryBlockResponse, error)
        + QueryTx(ctx context.Context, in *pb.QueryTxRequest) (*pb.QueryTxResponse, error)
        + Transfer(ctx context.Context, in *pb.TransferRequest) (*pb.TransferResponse, error)
        + ContractCall(ctx context.Context, in *pb.ContractCallRequest) (*pb.ContractCallResponse, error)
        + CrossContractQuery(ctx context.Context, in *pb.CrossContractQueryRequest) (*pb.CrossContractQueryResponse, error)
        + PutObject(ctx context.Context, in *pb.PutRequest) (*pb.PutResponse, error)
        + GetObject(ctx context.Context, in *pb.GetRequest) (*pb.GetResponse, error)
        + DeleteObject(ctx context.Context, in *pb.DeleteRequest) (*pb.DeleteResponse, error)
        + NewIterator(ctx context.Context, in *pb.IteratorRequest) (*pb.IteratorResponse, error)
        + GetCallArgs(ctx context.Context, in *pb.GetCallArgsRequest) (*pb.CallArgs, error)
        + SetOutput(ctx context.Context, in *pb.SetOutputRequest) (*pb.SetOutputResponse, error)
        + GetAccountAddresses(ctx context.Context, in *pb.GetAccountAddressesRequest) (*pb.GetAccountAddressesResponse, error)
        + PostLog(ctx context.Context, in *pb.PostLogRequest) (*pb.PostLogResponse, error)
        + EmitEvent(ctx context.Context, in *pb.EmitEventRequest) (*pb.EmitEventResponse, error)

    }
    interface VMConfig  {
        + DriverName() string
        + IsEnable() bool

    }
    class XBridge << (S,Aquamarine) >> {
        - ctxmgr *ContextManager
        - syscallService *SyscallService
        - basedir string
        - vmconfigs <font color=blue>map</font>[ContractType]VMConfig
        - creators <font color=blue>map</font>[ContractType]InstanceCreator
        - xmodel ledger.XMReader
        - config contract.ContractConfig
        - core contract.ChainCore
        - debugLogger logs.Logger

        - initVM() error
        - getCreator(tp ContractType) InstanceCreator

        + NewContext(ctxCfg *contract.ContextConfig) (contract.Context, error)

    }
    class XBridgeConfig << (S,Aquamarine) >> {
        + Basedir string
        + VMConfigs <font color=blue>map</font>[ContractType]VMConfig
        + XModel ledger.XMReader
        + Config contract.ContractConfig
        + LogDriver logs.Logger
        + Core contract.ChainCore

    }
    class bridge.ContractType << (T, #FF7700) >>  {
    }
    class bridge.NewInstanceCreatorFunc << (T, #FF7700) >>  {
    }
    class codeProvider << (S,Aquamarine) >> {
        - xstore stateReader

        + GetContractCode(name string) ([]byte, error)
        + GetContractAbi(name string) ([]byte, error)
        + GetContractCodeDesc(name string) (*protos.WasmCodeDesc, error)
        + GetContractCodeFromCache(name string) ([]byte, error)
        + GetContractAbiFromCache(name string) ([]byte, error)

    }
    class contractManager << (S,Aquamarine) >> {
        - xbridge *XBridge
        - codeProvider ContractCodeProvider

        - initContract(tp ContractType, contextConfig *contract.ContextConfig, args <font color=blue>map</font>[string][]byte) (*contract.Response, contract.Limits, error)

        + DeployContract(kctx contract.KContext) (*contract.Response, contract.Limits, error)
        + UpgradeContract(kctx contract.KContext) (*contract.Response, contract.Limits, error)

    }
    class descProvider << (S,Aquamarine) >> {
        - desc *protos.WasmCodeDesc

        + GetContractCodeDesc(name string) (*protos.WasmCodeDesc, error)

    }
    class registry << (S,Aquamarine) >> {
        - mutex sync.Mutex
        - drivers <font color=blue>map</font>[ContractType]<font color=blue>map</font>[string]NewInstanceCreatorFunc

        + Register(tp ContractType, name string, driver NewInstanceCreatorFunc) 
        + Open(tp ContractType, name string, config *InstanceCreatorConfig) (InstanceCreator, error)

    }
    interface stateGetReader  {
        + Get(bucket string, key []byte) ([]byte, error)

    }
    interface stateReader  {
        + Get(bucket string, key []byte) ([]byte, error)
        + GetUncommited(bucket string, key []byte) (*ledger.VersionedData, error)

    }
    class stateReaderWrapper << (S,Aquamarine) >> {
        + GetUncommited(bucket string, key []byte) (*ledger.VersionedData, error)

    }
    class vmContextImpl << (S,Aquamarine) >> {
        - ctx *Context
        - instance Instance
        - release <font color=blue>func</font>() 

        + Invoke(method string, args <font color=blue>map</font>[string][]byte) (*contract.Response, error)
        + ResourceUsed() contract.Limits
        + Release() error

    }
    class xmStateReader << (S,Aquamarine) >> {
        - r ledger.XMReader

        + Get(bucket string, key []byte) ([]byte, error)
        + GetUncommited(bucket string, key []byte) (*ledger.VersionedData, error)

    }
}
"bridge.contractManager" *- - "bridge.XBridge"
"bridge.ContractCodeProvider" *- - "bridge.descProvider"
"bridge.stateGetReader" *- - "bridge.stateReaderWrapper"

"pbrpc.SyscallServer" <|- - "bridge.SyscallService"
"bridge.ContractCodeProvider" <|- - "bridge.codeProvider"
"contract.Context" <|- - "bridge.vmContextImpl"
"bridge.stateGetReader" <|- - "bridge.xmStateReader"
"bridge.stateReader" <|- - "bridge.xmStateReader"

namespace contract {
    interface ChainCore  {
        + GetAccountAddresses(accountName string) ([]string, error)
        + VerifyContractPermission(initiator string, authRequire []string, contractName string, methodName string) (bool, error)
        + VerifyContractOwnerPermission(contractName string, authRequire []string) error
        + QueryTransaction(txid []byte) (*pb.Transaction, error)
        + QueryBlock(blockid []byte) (ledger.BlockHandle, error)

    }
    interface Context  {
        + Invoke(method string, args <font color=blue>map</font>[string][]byte) (*Response, error)
        + ResourceUsed() Limits
        + Release() error

    }
    class ContextConfig << (S,Aquamarine) >> {
        + State StateSandbox
        + Initiator string
        + AuthRequire []string
        + Caller string
        + Module string
        + ContractName string
        + ResourceLimits Limits
        + CanInitialize bool
        + TransferAmount string
        + ContractSet <font color=blue>map</font>[string]bool
        + ContractCodeFromCache bool
        + TxInBlock bool

    }
    class ContractConfig << (S,Aquamarine) >> {
        + EnableDebugLog bool
        + EnableUpgrade bool
        + LogDriver logs.Logger
        + Native NativeConfig
        + Wasm WasmConfig
        + Xkernel XkernelConfig
        + EVM EVMConfig

    }
    interface ContractEventState  {
        + AddEvent(events ...*protos.ContractEvent) 

    }
    interface CrossQueryState  {
    }
    class EVMConfig << (S,Aquamarine) >> {
        + Enable bool
        + Driver string

        + DriverName() string
        + IsEnable() bool

    }
    interface Iterator  {
        + Key() []byte
        + Value() []byte
        + Next() bool
        + Error() error
        + Close() 

    }
    interface KContext  {
        + Args() <font color=blue>map</font>[string][]byte
        + Initiator() string
        + Caller() string
        + AuthRequire() []string
        + AddResourceUsed(delta Limits) 
        + ResourceLimit() Limits
        + Call(module string, contract string, method string, args <font color=blue>map</font>[string][]byte) (*Response, error)
        + EmitAsyncTask(event string, args <font color=blue>interface</font>{}) error

    }
    interface KernRegistry  {
        + RegisterKernMethod(contract string, method string, handler KernMethod) 
        + UnregisterKernMethod(ctract string, method string) 
        + RegisterShortcut(oldmethod string, contract string, method string) 
        + GetKernMethod(contract string, method string) (KernMethod, error)

    }
    class Limits << (S,Aquamarine) >> {
        + Cpu int64
        + Memory int64
        + Disk int64
        + XFee int64

        + TotalGas(gasPrice *protos.GasPrice) int64
        + Add(l1 Limits) *Limits
        + Sub(l1 Limits) *Limits
        + Exceed(l1 Limits) bool

    }
    class LogConfig << (S,Aquamarine) >> {
        + Module string
        + Filepath string
        + Filename string
        + Fmt string
        + Console bool
        + Level string
        + Async bool
        + RotateInterval int
        + RotateBackups int

    }
    interface Manager  {
        + NewContext(cfg *ContextConfig) (Context, error)
        + NewStateSandbox(cfg *SandboxConfig) (StateSandbox, error)
        + GetKernRegistry() KernRegistry

    }
    class ManagerConfig << (S,Aquamarine) >> {
        + Basedir string
        + BCName string
        + EnvConf *xconfig.EnvConf
        + Core ChainCore
        + XMReader ledger.XMReader
        + Config *ContractConfig

    }
    class NativeConfig << (S,Aquamarine) >> {
        + Driver string
        + StopTimeout int
        + Docker NativeDockerConfig
        + Enable bool

        + DriverName() string
        + IsEnable() bool

    }
    class NativeDockerConfig << (S,Aquamarine) >> {
        + Enable bool
        + ImageName string
        + Cpus float32
        + Memory string

    }
    class RWSet << (S,Aquamarine) >> {
        + RSet []*ledger.VersionedData
        + WSet []*ledger.PureData

    }
    class Response << (S,Aquamarine) >> {
        + Status int
        + Message string
        + Body []byte

    }
    class SandboxConfig << (S,Aquamarine) >> {
        + XMReader ledger.XMReader
        + UTXOReader UtxoReader

    }
    interface State  {
    }
    interface StateSandbox  {
        + Flush() error
        + RWSet() *RWSet
        + UTXORWSet() *UTXORWSet

    }
    class UTXORWSet << (S,Aquamarine) >> {
        + Rset []*protos.TxInput
        + WSet []*protos.TxOutput

    }
    interface UTXOState  {
        + Transfer(from string, to string, amount *big.Int) error

    }
    interface UtxoReader  {
        + SelectUtxo( string,  *big.Int,  bool,  bool) ([]*protos.TxInput, [][]byte, *big.Int, error)

    }
    class WasmConfig << (S,Aquamarine) >> {
        + Enable bool
        + Driver string
        + XVM XVMConfig

        + DriverName() string
        + IsEnable() bool

    }
    interface XMState  {
        + Get(bucket string, key []byte) ([]byte, error)
        + Select(bucket string, startKey []byte, endKey []byte) (Iterator, error)
        + Put(bucket string, key []byte, value []byte) error
        + Del(bucket string, key []byte) error

    }
    class XVMConfig << (S,Aquamarine) >> {
        + OptLevel int

    }
    class XkernelConfig << (S,Aquamarine) >> {
        + Enable bool
        + Driver string
        + Registry KernRegistry

        + DriverName() string
        + IsEnable() bool

    }
    class contract.KernMethod << (T, #FF7700) >>  {
    }
    class contract.NewManagerFunc << (T, #FF7700) >>  {
    }
}
"contract.StateSandbox" *- - "contract.KContext"
"contract.ContractEventState" *- - "contract.State"
"contract.CrossQueryState" *- - "contract.State"
"contract.UTXOState" *- - "contract.State"
"contract.XMState" *- - "contract.State"
"contract.State" *- - "contract.StateSandbox"

"bridge.VMConfig" <|- - "contract.EVMConfig"
"bridge.VMConfig" <|- - "contract.NativeConfig"
"bridge.VMConfig" <|- - "contract.WasmConfig"
"bridge.VMConfig" <|- - "contract.XkernelConfig"

namespace kernel {
    class kcontextImpl << (S,Aquamarine) >> {
        - ctx *bridge.Context
        - syscall *bridge.SyscallService
        - used contract.Limits

        + Args() <font color=blue>map</font>[string][]byte
        + Initiator() string
        + Caller() string
        + AuthRequire() []string
        + AddResourceUsed(delta contract.Limits) 
        + ResourceLimit() contract.Limits
        + Call(module string, contractName string, method string, args <font color=blue>map</font>[string][]byte) (*contract.Response, error)
        + EmitAsyncTask(event string, args <font color=blue>interface</font>{}) error

    }
    class kernInstance << (S,Aquamarine) >> {
        - ctx *bridge.Context
        - kctx *kcontextImpl
        - registry contract.KernRegistry

        + Exec() error
        + ResourceUsed() contract.Limits
        + Release() 
        + Abort(msg string) 

    }
    class kernvm << (S,Aquamarine) >> {
        - registry contract.KernRegistry
        - config *bridge.InstanceCreatorConfig

        + CreateInstance(ctx *bridge.Context, cp bridge.ContractCodeProvider) (bridge.Instance, error)
        + RemoveCache(name string) 

    }
}
"contract.ChainCore" *- - "kernel.kcontextImpl"
"contract.StateSandbox" *- - "kernel.kcontextImpl"

"contract.KContext" <|- - "kernel.kcontextImpl"
"bridge.Instance" <|- - "kernel.kernInstance"
"bridge.InstanceCreator" <|- - "kernel.kernvm"

namespace manager {
    class managerImpl << (S,Aquamarine) >> {
        - core contract.ChainCore
        - xbridge *bridge.XBridge
        - kregistry registryImpl

        - deployContract(ctx contract.KContext) (*contract.Response, error)
        - upgradeContract(ctx contract.KContext) (*contract.Response, error)

        + NewContext(cfg *contract.ContextConfig) (contract.Context, error)
        + NewStateSandbox(cfg *contract.SandboxConfig) (contract.StateSandbox, error)
        + GetKernRegistry() contract.KernRegistry

    }
    class registryImpl << (S,Aquamarine) >> {
        - mutex sync.Mutex
        - methods <font color=blue>map</font>[string]<font color=blue>map</font>[string]contract.KernMethod
        - shortcuts <font color=blue>map</font>[string]shortcut

        - getShortcut(method string) (shortcut, error)

        + RegisterKernMethod(ctract string, method string, handler contract.KernMethod) 
        + UnregisterKernMethod(ctract string, method string) 
        + RegisterShortcut(oldmethod string, contract string, method string) 
        + GetKernMethod(ctract string, method string) (contract.KernMethod, error)

    }
    class shortcut << (S,Aquamarine) >> {
        + OldMethod string
        + Contract string
        + Method string

    }
}

"contract.Manager" <|- - "manager.managerImpl"
"contract.KernRegistry" <|- - "manager.registryImpl"

namespace native {
    class DockerProcess << (S,Aquamarine) >> {
        - basedir string
        - startcmd *exec.Cmd
        - envs []string
        - mounts []string
        - ports []string
        - cfg *contract.NativeDockerConfig
        - id string

        - resourceConfig() (int64, int64, error)
        - start() error
        - start() error

        + Start() error
        + Stop(timeout time.Duration) error

    }
    class HostProcess << (S,Aquamarine) >> {
        - basedir string
        - startcmd *exec.Cmd
        - envs []string
        - cmd *exec.Cmd

        + Start() error
        + Stop(timeout time.Duration) error

    }
    interface Process  {
        + Start() error
        + Stop(timeout time.Duration) error

    }
    class contractProcess << (S,Aquamarine) >> {
        - cfg *contract.NativeConfig
        - name string
        - basedir string
        - binpath string
        - chainAddr string
        - desc *protos.WasmCodeDesc
        - process Process
        - monitorStopch <font color=blue>chan</font> <font color=blue>struct</font>{}
        - monitorWaiter sync.WaitGroup
        - logger log15.Logger
        - mutex sync.Mutex
        - rpcPort int
        - rpcConn *grpc.ClientConn
        - rpcClient pbrpc.NativeCodeClient

        - makeNativeProcess() (Process, error)
        - waitReply() error
        - heartBeat() error
        - monitor() 
        - resetRpcClient() error
        - restartProcess() error
        - start(startMonitor bool) error
        - makeStartCommand() (*exec.Cmd, error)

        + RpcClient() pbrpc.NativeCodeClient
        + Start() error
        + Stop() 
        + GetDesc() *protos.WasmCodeDesc

    }
    class nativeCreator << (S,Aquamarine) >> {
        - config *bridge.InstanceCreatorConfig
        - listener net.Listener
        - pm *processManager

        - startRpcServer(service *bridge.SyscallService) (string, error)

        + CreateInstance(ctx *bridge.Context, cp bridge.ContractCodeProvider) (bridge.Instance, error)
        + RemoveCache(name string) 

    }
    class nativeVmInstance << (S,Aquamarine) >> {
        - ctx *bridge.Context
        - process *contractProcess

        + Exec() error
        + ResourceUsed() contract.Limits
        + Release() 
        + Abort(msg string) 

    }
    class processManager << (S,Aquamarine) >> {
        - cfg *contract.NativeConfig
        - basedir string
        - chainAddr string
        - mutex sync.Mutex
        - contracts <font color=blue>map</font>[string]*contractProcess

        - makeProcess(name string, desc *protos.WasmCodeDesc, code []byte) (*contractProcess, error)
        - lookupProcess(name string, desc *protos.WasmCodeDesc) (*contractProcess, bool)

        + GetProcess(name string, cp bridge.ContractCodeProvider) (*contractProcess, error)

    }
}
"log15.Logger" *- - "native.DockerProcess"
"log15.Logger" *- - "native.HostProcess"

"native.Process" <|- - "native.DockerProcess"
"native.Process" <|- - "native.HostProcess"
"bridge.InstanceCreator" <|- - "native.nativeCreator"
"bridge.Instance" <|- - "native.nativeVmInstance"

namespace xvm {
    class HXVMCreator << (S,Aquamarine) >> {
        - tier0Creator *xvmInterpCreator
        - tier1Creator *xvmCreator
        - tier2Creator *xvmCreator

        - tierUp1(ctx *bridge.Context, cp bridge.ContractCodeProvider) 
        - tierUp2(ctx *bridge.Context, cp bridge.ContractCodeProvider) 

        + CreateInstance(ctx *bridge.Context, cp bridge.ContractCodeProvider) (bridge.Instance, error)
        + RemoveCache(name string) 

    }
    class codeManager << (S,Aquamarine) >> {
        - basedir string
        - rundir string
        - cachedir string
        - compileCode compileFunc
        - makeExecCode makeExecCodeFunc
        - makeCacheLock singleflight.Group
        - mutex sync.Mutex
        - codes <font color=blue>map</font>[string]*contractCode

        - lookupMemCache(name string, desc *protos.WasmCodeDesc) (*contractCode, bool)
        - makeMemCache(name string, libpath string, desc *protos.WasmCodeDesc) (*contractCode, error)
        - lookupDiskCache(name string, desc *protos.WasmCodeDesc) (string, bool)
        - makeDiskCache(name string, desc *protos.WasmCodeDesc, codebuf []byte) (string, error)

        + GetExecCode(name string, cp bridge.ContractCodeProvider) (*contractCode, error)
        + RemoveCode(name string) 

    }
    interface codec  {
        + Encode(in []byte) []byte
        + Decode(in []byte) ([]byte, error)

    }
    class contractCode << (S,Aquamarine) >> {
        + ContractName string
        + ExecCode exec.Code
        + Desc protos.WasmCodeDesc

    }
    class debugWriter << (S,Aquamarine) >> {
        - buf bytes.Buffer
        - flushfunc <font color=blue>func</font>(string) 

        - write(p []byte) 
        - flush() 

        + Write(p []byte) (int, error)

    }
    class hexCodec << (S,Aquamarine) >> {
        + Encode(in []byte) []byte
        + Decode(in []byte) ([]byte, error)

    }
    class responseDesc << (S,Aquamarine) >> {
        + Body []byte
        + Error bool

    }
    class syscallResolver << (S,Aquamarine) >> {
        - syscall *bridge.SyscallService
        - rpcserver *memrpc.Server

        - goCallMethod(ctx exec.Context, sp uint32) uint32
        - goFetchResponse(ctx exec.Context, sp uint32) uint32
        - cCallMethod(ctx exec.Context, methodAddr uint32, methodLen uint32, requestAddr uint32, requestLen uint32) uint32
        - cFetchResponse(ctx exec.Context, userBuf uint32, userLen uint32) uint32
        - cCallMethodv2(ctx exec.Context, methodAddr uint32, methodLen uint32, requestAddr uint32, requestLen uint32, responseAddr uint32, responseLen uint32, successAddr uint32) uint32

        + ResolveGlobal(module string, name string) (int64, bool)
        + ResolveFunc(module string, name string) (<font color=blue>interface</font>{}, bool)

    }
    class xvm.compileFunc << (T, #FF7700) >>  {
    }
    class xvm.makeExecCodeFunc << (T, #FF7700) >>  {
    }
    class xvmCreator << (S,Aquamarine) >> {
        - cm *codeManager
        - config bridge.InstanceCreatorConfig
        - vmconfig *contract.WasmConfig
        - wasm2cPath string

        - getContractCodeCache(name string, cp bridge.ContractCodeProvider) (*contractCode, error)

        + CompileCode(buf []byte, outputPath string) error
        + MakeExecCode(libpath string) (exec.Code, error)
        + CreateInstance(ctx *bridge.Context, cp bridge.ContractCodeProvider) (bridge.Instance, error)
        + RemoveCache(contractName string) 

    }
    class xvmInstance << (S,Aquamarine) >> {
        - bridgeCtx *bridge.Context
        - execCtx exec.Context
        - desc protos.WasmCodeDesc
        - syscall *bridge.SyscallService

        - guessEntry() (string, error)

        + Exec() error
        + ResourceUsed() contract.Limits
        + Release() 
        + Abort(msg string) 
        + InitDebugWriter(syscall *bridge.SyscallService) 

    }
    class xvmInterpCreator << (S,Aquamarine) >> {
        - cm *codeManager
        - config bridge.InstanceCreatorConfig

        - compileCode(buf []byte, outputPath string) error
        - makeExecCode(codepath string) (exec.Code, error)

        + CreateInstance(ctx *bridge.Context, cp bridge.ContractCodeProvider) (bridge.Instance, error)
        + RemoveCache(contractName string) 

    }
    class "<font color=blue>func</font>(string) (exec.Code, error)" as fontcolorbluefuncfontstringexecCodeerror {
        'This class was created so that we can correctly have an alias pointing to this name. Since it contains dots that can break namespaces
    }
}

"bridge.InstanceCreator" <|- - "xvm.HXVMCreator"
"xvm.codec" <|- - "xvm.hexCodec"
"bridge.InstanceCreator" <|- - "xvm.xvmCreator"
"bridge.Instance" <|- - "xvm.xvmInstance"
"bridge.InstanceCreator" <|- - "xvm.xvmInterpCreator"

"__builtin__.string" #.. "bridge.ContractType"
"bridge.<font color=blue>func</font>(*InstanceCreatorConfig) (InstanceCreator, error)" #.. "bridge.NewInstanceCreatorFunc"
"contract.<font color=blue>func</font>(*ManagerConfig) (Manager, error)" #.. "contract.NewManagerFunc"
"contract.<font color=blue>func</font>(KContext) (*Response, error)" #.. "contract.KernMethod"
"xvm.<font color=blue>func</font>([]byte, string) error" #.. "xvm.compileFunc"
"xvm.fontcolorbluefuncfontstringexecCodeerror" #.. "xvm.makeExecCodeFunc"
@enduml

@startuml

namespace bridge {
    class Context << (S,Aquamarine) >> {
        + ID int64
        + Module string
        + ContractName string
        + ResourceLimits contract.Limits
        + State contract.StateSandbox
        + Args <font color=blue>map</font>[string][]byte
        + Method string
        + Initiator string
        + Caller string
        + AuthRequire []string
        + CanInitialize bool
        + Core contract.ChainCore
        + TransferAmount string
        + Instance Instance
        + Logger logs.Logger
        + SubResourceUsed contract.Limits
        + ContractSet <font color=blue>map</font>[string]bool
        + Events []*protos.ContractEvent
        + Output *pb.Response
        + ReadFromCache bool

        + DiskUsed() int64
        + ExceedDiskLimit() bool
        + ResourceUsed() contract.Limits
        + GetInitiator() string
        + GetAuthRequire() []string

    }
    class ContextManager << (S,Aquamarine) >> {
        - ctxlock sync.Mutex
        - ctxid int64
        - ctxs <font color=blue>map</font>[int64]*Context

        + Context(id int64) (*Context, bool)
        + MakeContext() *Context
        + DestroyContext(ctx *Context) 

    }
    interface ContractCodeProvider  {
        + GetContractCodeDesc(name string) (*protos.WasmCodeDesc, error)
        + GetContractCode(name string) ([]byte, error)
        + GetContractAbi(name string) ([]byte, error)
        + GetContractCodeFromCache(name string) ([]byte, error)
        + GetContractAbiFromCache(name string) ([]byte, error)

    }
    class ContractError << (S,Aquamarine) >> {
        + Status int
        + Message string

        + Error() string

    }
    interface Instance  {
        + Exec() error
        + ResourceUsed() contract.Limits
        + Release() 
        + Abort(msg string) 

    }
    interface InstanceCreator  {
        + CreateInstance(ctx *Context, cp ContractCodeProvider) (Instance, error)
        + RemoveCache(name string) 

    }
    class InstanceCreatorConfig << (S,Aquamarine) >> {
        + Basedir string
        + SyscallService *SyscallService
        + VMConfig VMConfig

    }
    class SyscallService << (S,Aquamarine) >> {
        - ctxmgr *ContextManager
        - bridge *XBridge
        - core contract.ChainCore

        + Ping(ctx context.Context, in *pb.PingRequest) (*pb.PingResponse, error)
        + QueryBlock(ctx context.Context, in *pb.QueryBlockRequest) (*pb.QueryBlockResponse, error)
        + QueryTx(ctx context.Context, in *pb.QueryTxRequest) (*pb.QueryTxResponse, error)
        + Transfer(ctx context.Context, in *pb.TransferRequest) (*pb.TransferResponse, error)
        + ContractCall(ctx context.Context, in *pb.ContractCallRequest) (*pb.ContractCallResponse, error)
        + CrossContractQuery(ctx context.Context, in *pb.CrossContractQueryRequest) (*pb.CrossContractQueryResponse, error)
        + PutObject(ctx context.Context, in *pb.PutRequest) (*pb.PutResponse, error)
        + GetObject(ctx context.Context, in *pb.GetRequest) (*pb.GetResponse, error)
        + DeleteObject(ctx context.Context, in *pb.DeleteRequest) (*pb.DeleteResponse, error)
        + NewIterator(ctx context.Context, in *pb.IteratorRequest) (*pb.IteratorResponse, error)
        + GetCallArgs(ctx context.Context, in *pb.GetCallArgsRequest) (*pb.CallArgs, error)
        + SetOutput(ctx context.Context, in *pb.SetOutputRequest) (*pb.SetOutputResponse, error)
        + GetAccountAddresses(ctx context.Context, in *pb.GetAccountAddressesRequest) (*pb.GetAccountAddressesResponse, error)
        + PostLog(ctx context.Context, in *pb.PostLogRequest) (*pb.PostLogResponse, error)
        + EmitEvent(ctx context.Context, in *pb.EmitEventRequest) (*pb.EmitEventResponse, error)

    }
    interface VMConfig  {
        + DriverName() string
        + IsEnable() bool

    }
    class XBridge << (S,Aquamarine) >> {
        - ctxmgr *ContextManager
        - syscallService *SyscallService
        - basedir string
        - vmconfigs <font color=blue>map</font>[ContractType]VMConfig
        - creators <font color=blue>map</font>[ContractType]InstanceCreator
        - xmodel ledger.XMReader
        - config contract.ContractConfig
        - core contract.ChainCore
        - debugLogger logs.Logger

        - initVM() error
        - getCreator(tp ContractType) InstanceCreator

        + NewContext(ctxCfg *contract.ContextConfig) (contract.Context, error)

    }
    class XBridgeConfig << (S,Aquamarine) >> {
        + Basedir string
        + VMConfigs <font color=blue>map</font>[ContractType]VMConfig
        + XModel ledger.XMReader
        + Config contract.ContractConfig
        + LogDriver logs.Logger
        + Core contract.ChainCore

    }
    class bridge.ContractType << (T, #FF7700) >>  {
    }
    class bridge.NewInstanceCreatorFunc << (T, #FF7700) >>  {
    }
    class codeProvider << (S,Aquamarine) >> {
        - xstore stateReader

        + GetContractCode(name string) ([]byte, error)
        + GetContractAbi(name string) ([]byte, error)
        + GetContractCodeDesc(name string) (*protos.WasmCodeDesc, error)
        + GetContractCodeFromCache(name string) ([]byte, error)
        + GetContractAbiFromCache(name string) ([]byte, error)

    }
    class contractManager << (S,Aquamarine) >> {
        - xbridge *XBridge
        - codeProvider ContractCodeProvider

        - initContract(tp ContractType, contextConfig *contract.ContextConfig, args <font color=blue>map</font>[string][]byte) (*contract.Response, contract.Limits, error)

        + DeployContract(kctx contract.KContext) (*contract.Response, contract.Limits, error)
        + UpgradeContract(kctx contract.KContext) (*contract.Response, contract.Limits, error)

    }
    class descProvider << (S,Aquamarine) >> {
        - desc *protos.WasmCodeDesc

        + GetContractCodeDesc(name string) (*protos.WasmCodeDesc, error)

    }
    class registry << (S,Aquamarine) >> {
        - mutex sync.Mutex
        - drivers <font color=blue>map</font>[ContractType]<font color=blue>map</font>[string]NewInstanceCreatorFunc

        + Register(tp ContractType, name string, driver NewInstanceCreatorFunc) 
        + Open(tp ContractType, name string, config *InstanceCreatorConfig) (InstanceCreator, error)

    }
    interface stateGetReader  {
        + Get(bucket string, key []byte) ([]byte, error)

    }
    interface stateReader  {
        + Get(bucket string, key []byte) ([]byte, error)
        + GetUncommited(bucket string, key []byte) (*ledger.VersionedData, error)

    }
    class stateReaderWrapper << (S,Aquamarine) >> {
        + GetUncommited(bucket string, key []byte) (*ledger.VersionedData, error)

    }
    class vmContextImpl << (S,Aquamarine) >> {
        - ctx *Context
        - instance Instance
        - release <font color=blue>func</font>() 

        + Invoke(method string, args <font color=blue>map</font>[string][]byte) (*contract.Response, error)
        + ResourceUsed() contract.Limits
        + Release() error

    }
    class xmStateReader << (S,Aquamarine) >> {
        - r ledger.XMReader

        + Get(bucket string, key []byte) ([]byte, error)
        + GetUncommited(bucket string, key []byte) (*ledger.VersionedData, error)

    }
}
"bridge.contractManager" *- - "bridge.XBridge"
"bridge.ContractCodeProvider" *- - "bridge.descProvider"
"bridge.stateGetReader" *- - "bridge.stateReaderWrapper"

"pbrpc.SyscallServer" <|- - "bridge.SyscallService"
"bridge.ContractCodeProvider" <|- - "bridge.codeProvider"
"contract.Context" <|- - "bridge.vmContextImpl"
"bridge.stateGetReader" <|- - "bridge.xmStateReader"
"bridge.stateReader" <|- - "bridge.xmStateReader"

namespace contract {
    interface ChainCore  {
        + GetAccountAddresses(accountName string) ([]string, error)
        + VerifyContractPermission(initiator string, authRequire []string, contractName string, methodName string) (bool, error)
        + VerifyContractOwnerPermission(contractName string, authRequire []string) error
        + QueryTransaction(txid []byte) (*pb.Transaction, error)
        + QueryBlock(blockid []byte) (ledger.BlockHandle, error)

    }
    interface Context  {
        + Invoke(method string, args <font color=blue>map</font>[string][]byte) (*Response, error)
        + ResourceUsed() Limits
        + Release() error

    }
    class ContextConfig << (S,Aquamarine) >> {
        + State StateSandbox
        + Initiator string
        + AuthRequire []string
        + Caller string
        + Module string
        + ContractName string
        + ResourceLimits Limits
        + CanInitialize bool
        + TransferAmount string
        + ContractSet <font color=blue>map</font>[string]bool
        + ContractCodeFromCache bool
        + TxInBlock bool

    }
    class ContractConfig << (S,Aquamarine) >> {
        + EnableDebugLog bool
        + EnableUpgrade bool
        + LogDriver logs.Logger
        + Native NativeConfig
        + Wasm WasmConfig
        + Xkernel XkernelConfig
        + EVM EVMConfig

    }
    interface ContractEventState  {
        + AddEvent(events ...*protos.ContractEvent) 

    }
    interface CrossQueryState  {
    }
    class EVMConfig << (S,Aquamarine) >> {
        + Enable bool
        + Driver string

        + DriverName() string
        + IsEnable() bool

    }
    interface Iterator  {
        + Key() []byte
        + Value() []byte
        + Next() bool
        + Error() error
        + Close() 

    }
    interface KContext  {
        + Args() <font color=blue>map</font>[string][]byte
        + Initiator() string
        + Caller() string
        + AuthRequire() []string
        + AddResourceUsed(delta Limits) 
        + ResourceLimit() Limits
        + Call(module string, contract string, method string, args <font color=blue>map</font>[string][]byte) (*Response, error)
        + EmitAsyncTask(event string, args <font color=blue>interface</font>{}) error

    }
    interface KernRegistry  {
        + RegisterKernMethod(contract string, method string, handler KernMethod) 
        + UnregisterKernMethod(ctract string, method string) 
        + RegisterShortcut(oldmethod string, contract string, method string) 
        + GetKernMethod(contract string, method string) (KernMethod, error)

    }
    class Limits << (S,Aquamarine) >> {
        + Cpu int64
        + Memory int64
        + Disk int64
        + XFee int64

        + TotalGas(gasPrice *protos.GasPrice) int64
        + Add(l1 Limits) *Limits
        + Sub(l1 Limits) *Limits
        + Exceed(l1 Limits) bool

    }
    class LogConfig << (S,Aquamarine) >> {
        + Module string
        + Filepath string
        + Filename string
        + Fmt string
        + Console bool
        + Level string
        + Async bool
        + RotateInterval int
        + RotateBackups int

    }
    interface Manager  {
        + NewContext(cfg *ContextConfig) (Context, error)
        + NewStateSandbox(cfg *SandboxConfig) (StateSandbox, error)
        + GetKernRegistry() KernRegistry

    }
    class ManagerConfig << (S,Aquamarine) >> {
        + Basedir string
        + BCName string
        + EnvConf *xconfig.EnvConf
        + Core ChainCore
        + XMReader ledger.XMReader
        + Config *ContractConfig

    }
    class NativeConfig << (S,Aquamarine) >> {
        + Driver string
        + StopTimeout int
        + Docker NativeDockerConfig
        + Enable bool

        + DriverName() string
        + IsEnable() bool

    }
    class NativeDockerConfig << (S,Aquamarine) >> {
        + Enable bool
        + ImageName string
        + Cpus float32
        + Memory string

    }
    class RWSet << (S,Aquamarine) >> {
        + RSet []*ledger.VersionedData
        + WSet []*ledger.PureData

    }
    class Response << (S,Aquamarine) >> {
        + Status int
        + Message string
        + Body []byte

    }
    class SandboxConfig << (S,Aquamarine) >> {
        + XMReader ledger.XMReader
        + UTXOReader UtxoReader

    }
    interface State  {
    }
    interface StateSandbox  {
        + Flush() error
        + RWSet() *RWSet
        + UTXORWSet() *UTXORWSet

    }
    class UTXORWSet << (S,Aquamarine) >> {
        + Rset []*protos.TxInput
        + WSet []*protos.TxOutput

    }
    interface UTXOState  {
        + Transfer(from string, to string, amount *big.Int) error

    }
    interface UtxoReader  {
        + SelectUtxo( string,  *big.Int,  bool,  bool) ([]*protos.TxInput, [][]byte, *big.Int, error)

    }
    class WasmConfig << (S,Aquamarine) >> {
        + Enable bool
        + Driver string
        + XVM XVMConfig

        + DriverName() string
        + IsEnable() bool

    }
    interface XMState  {
        + Get(bucket string, key []byte) ([]byte, error)
        + Select(bucket string, startKey []byte, endKey []byte) (Iterator, error)
        + Put(bucket string, key []byte, value []byte) error
        + Del(bucket string, key []byte) error

    }
    class XVMConfig << (S,Aquamarine) >> {
        + OptLevel int

    }
    class XkernelConfig << (S,Aquamarine) >> {
        + Enable bool
        + Driver string
        + Registry KernRegistry

        + DriverName() string
        + IsEnable() bool

    }
    class contract.KernMethod << (T, #FF7700) >>  {
    }
    class contract.NewManagerFunc << (T, #FF7700) >>  {
    }
}
"contract.StateSandbox" *- - "contract.KContext"
"contract.ContractEventState" *- - "contract.State"
"contract.CrossQueryState" *- - "contract.State"
"contract.UTXOState" *- - "contract.State"
"contract.XMState" *- - "contract.State"
"contract.State" *- - "contract.StateSandbox"

"bridge.VMConfig" <|- - "contract.EVMConfig"
"bridge.VMConfig" <|- - "contract.NativeConfig"
"bridge.VMConfig" <|- - "contract.WasmConfig"
"bridge.VMConfig" <|- - "contract.XkernelConfig"

namespace kernel {
    class kcontextImpl << (S,Aquamarine) >> {
        - ctx *bridge.Context
        - syscall *bridge.SyscallService
        - used contract.Limits

        + Args() <font color=blue>map</font>[string][]byte
        + Initiator() string
        + Caller() string
        + AuthRequire() []string
        + AddResourceUsed(delta contract.Limits) 
        + ResourceLimit() contract.Limits
        + Call(module string, contractName string, method string, args <font color=blue>map</font>[string][]byte) (*contract.Response, error)
        + EmitAsyncTask(event string, args <font color=blue>interface</font>{}) error

    }
    class kernInstance << (S,Aquamarine) >> {
        - ctx *bridge.Context
        - kctx *kcontextImpl
        - registry contract.KernRegistry

        + Exec() error
        + ResourceUsed() contract.Limits
        + Release() 
        + Abort(msg string) 

    }
    class kernvm << (S,Aquamarine) >> {
        - registry contract.KernRegistry
        - config *bridge.InstanceCreatorConfig

        + CreateInstance(ctx *bridge.Context, cp bridge.ContractCodeProvider) (bridge.Instance, error)
        + RemoveCache(name string) 

    }
}
"contract.ChainCore" *- - "kernel.kcontextImpl"
"contract.StateSandbox" *- - "kernel.kcontextImpl"

"contract.KContext" <|- - "kernel.kcontextImpl"
"bridge.Instance" <|- - "kernel.kernInstance"
"bridge.InstanceCreator" <|- - "kernel.kernvm"

namespace manager {
    class managerImpl << (S,Aquamarine) >> {
        - core contract.ChainCore
        - xbridge *bridge.XBridge
        - kregistry registryImpl

        - deployContract(ctx contract.KContext) (*contract.Response, error)
        - upgradeContract(ctx contract.KContext) (*contract.Response, error)

        + NewContext(cfg *contract.ContextConfig) (contract.Context, error)
        + NewStateSandbox(cfg *contract.SandboxConfig) (contract.StateSandbox, error)
        + GetKernRegistry() contract.KernRegistry

    }
    class registryImpl << (S,Aquamarine) >> {
        - mutex sync.Mutex
        - methods <font color=blue>map</font>[string]<font color=blue>map</font>[string]contract.KernMethod
        - shortcuts <font color=blue>map</font>[string]shortcut

        - getShortcut(method string) (shortcut, error)

        + RegisterKernMethod(ctract string, method string, handler contract.KernMethod) 
        + UnregisterKernMethod(ctract string, method string) 
        + RegisterShortcut(oldmethod string, contract string, method string) 
        + GetKernMethod(ctract string, method string) (contract.KernMethod, error)

    }
    class shortcut << (S,Aquamarine) >> {
        + OldMethod string
        + Contract string
        + Method string

    }
}

"contract.Manager" <|- - "manager.managerImpl"
"contract.KernRegistry" <|- - "manager.registryImpl"

namespace native {
    class DockerProcess << (S,Aquamarine) >> {
        - basedir string
        - startcmd *exec.Cmd
        - envs []string
        - mounts []string
        - ports []string
        - cfg *contract.NativeDockerConfig
        - id string

        - resourceConfig() (int64, int64, error)
        - start() error
        - start() error

        + Start() error
        + Stop(timeout time.Duration) error

    }
    class HostProcess << (S,Aquamarine) >> {
        - basedir string
        - startcmd *exec.Cmd
        - envs []string
        - cmd *exec.Cmd

        + Start() error
        + Stop(timeout time.Duration) error

    }
    interface Process  {
        + Start() error
        + Stop(timeout time.Duration) error

    }
    class contractProcess << (S,Aquamarine) >> {
        - cfg *contract.NativeConfig
        - name string
        - basedir string
        - binpath string
        - chainAddr string
        - desc *protos.WasmCodeDesc
        - process Process
        - monitorStopch <font color=blue>chan</font> <font color=blue>struct</font>{}
        - monitorWaiter sync.WaitGroup
        - logger log15.Logger
        - mutex sync.Mutex
        - rpcPort int
        - rpcConn *grpc.ClientConn
        - rpcClient pbrpc.NativeCodeClient

        - makeNativeProcess() (Process, error)
        - waitReply() error
        - heartBeat() error
        - monitor() 
        - resetRpcClient() error
        - restartProcess() error
        - start(startMonitor bool) error
        - makeStartCommand() (*exec.Cmd, error)

        + RpcClient() pbrpc.NativeCodeClient
        + Start() error
        + Stop() 
        + GetDesc() *protos.WasmCodeDesc

    }
    class nativeCreator << (S,Aquamarine) >> {
        - config *bridge.InstanceCreatorConfig
        - listener net.Listener
        - pm *processManager

        - startRpcServer(service *bridge.SyscallService) (string, error)

        + CreateInstance(ctx *bridge.Context, cp bridge.ContractCodeProvider) (bridge.Instance, error)
        + RemoveCache(name string) 

    }
    class nativeVmInstance << (S,Aquamarine) >> {
        - ctx *bridge.Context
        - process *contractProcess

        + Exec() error
        + ResourceUsed() contract.Limits
        + Release() 
        + Abort(msg string) 

    }
    class processManager << (S,Aquamarine) >> {
        - cfg *contract.NativeConfig
        - basedir string
        - chainAddr string
        - mutex sync.Mutex
        - contracts <font color=blue>map</font>[string]*contractProcess

        - makeProcess(name string, desc *protos.WasmCodeDesc, code []byte) (*contractProcess, error)
        - lookupProcess(name string, desc *protos.WasmCodeDesc) (*contractProcess, bool)

        + GetProcess(name string, cp bridge.ContractCodeProvider) (*contractProcess, error)

    }
}
"log15.Logger" *- - "native.DockerProcess"
"log15.Logger" *- - "native.HostProcess"

"native.Process" <|- - "native.DockerProcess"
"native.Process" <|- - "native.HostProcess"
"bridge.InstanceCreator" <|- - "native.nativeCreator"
"bridge.Instance" <|- - "native.nativeVmInstance"

namespace xvm {
    class HXVMCreator << (S,Aquamarine) >> {
        - tier0Creator *xvmInterpCreator
        - tier1Creator *xvmCreator
        - tier2Creator *xvmCreator

        - tierUp1(ctx *bridge.Context, cp bridge.ContractCodeProvider) 
        - tierUp2(ctx *bridge.Context, cp bridge.ContractCodeProvider) 

        + CreateInstance(ctx *bridge.Context, cp bridge.ContractCodeProvider) (bridge.Instance, error)
        + RemoveCache(name string) 

    }
    class codeManager << (S,Aquamarine) >> {
        - basedir string
        - rundir string
        - cachedir string
        - compileCode compileFunc
        - makeExecCode makeExecCodeFunc
        - makeCacheLock singleflight.Group
        - mutex sync.Mutex
        - codes <font color=blue>map</font>[string]*contractCode

        - lookupMemCache(name string, desc *protos.WasmCodeDesc) (*contractCode, bool)
        - makeMemCache(name string, libpath string, desc *protos.WasmCodeDesc) (*contractCode, error)
        - lookupDiskCache(name string, desc *protos.WasmCodeDesc) (string, bool)
        - makeDiskCache(name string, desc *protos.WasmCodeDesc, codebuf []byte) (string, error)

        + GetExecCode(name string, cp bridge.ContractCodeProvider) (*contractCode, error)
        + RemoveCode(name string) 

    }
    interface codec  {
        + Encode(in []byte) []byte
        + Decode(in []byte) ([]byte, error)

    }
    class contractCode << (S,Aquamarine) >> {
        + ContractName string
        + ExecCode exec.Code
        + Desc protos.WasmCodeDesc

    }
    class debugWriter << (S,Aquamarine) >> {
        - buf bytes.Buffer
        - flushfunc <font color=blue>func</font>(string) 

        - write(p []byte) 
        - flush() 

        + Write(p []byte) (int, error)

    }
    class hexCodec << (S,Aquamarine) >> {
        + Encode(in []byte) []byte
        + Decode(in []byte) ([]byte, error)

    }
    class responseDesc << (S,Aquamarine) >> {
        + Body []byte
        + Error bool

    }
    class syscallResolver << (S,Aquamarine) >> {
        - syscall *bridge.SyscallService
        - rpcserver *memrpc.Server

        - goCallMethod(ctx exec.Context, sp uint32) uint32
        - goFetchResponse(ctx exec.Context, sp uint32) uint32
        - cCallMethod(ctx exec.Context, methodAddr uint32, methodLen uint32, requestAddr uint32, requestLen uint32) uint32
        - cFetchResponse(ctx exec.Context, userBuf uint32, userLen uint32) uint32
        - cCallMethodv2(ctx exec.Context, methodAddr uint32, methodLen uint32, requestAddr uint32, requestLen uint32, responseAddr uint32, responseLen uint32, successAddr uint32) uint32

        + ResolveGlobal(module string, name string) (int64, bool)
        + ResolveFunc(module string, name string) (<font color=blue>interface</font>{}, bool)

    }
    class xvm.compileFunc << (T, #FF7700) >>  {
    }
    class xvm.makeExecCodeFunc << (T, #FF7700) >>  {
    }
    class xvmCreator << (S,Aquamarine) >> {
        - cm *codeManager
        - config bridge.InstanceCreatorConfig
        - vmconfig *contract.WasmConfig
        - wasm2cPath string

        - getContractCodeCache(name string, cp bridge.ContractCodeProvider) (*contractCode, error)

        + CompileCode(buf []byte, outputPath string) error
        + MakeExecCode(libpath string) (exec.Code, error)
        + CreateInstance(ctx *bridge.Context, cp bridge.ContractCodeProvider) (bridge.Instance, error)
        + RemoveCache(contractName string) 

    }
    class xvmInstance << (S,Aquamarine) >> {
        - bridgeCtx *bridge.Context
        - execCtx exec.Context
        - desc protos.WasmCodeDesc
        - syscall *bridge.SyscallService

        - guessEntry() (string, error)

        + Exec() error
        + ResourceUsed() contract.Limits
        + Release() 
        + Abort(msg string) 
        + InitDebugWriter(syscall *bridge.SyscallService) 

    }
    class xvmInterpCreator << (S,Aquamarine) >> {
        - cm *codeManager
        - config bridge.InstanceCreatorConfig

        - compileCode(buf []byte, outputPath string) error
        - makeExecCode(codepath string) (exec.Code, error)

        + CreateInstance(ctx *bridge.Context, cp bridge.ContractCodeProvider) (bridge.Instance, error)
        + RemoveCache(contractName string) 

    }
    class "<font color=blue>func</font>(string) (exec.Code, error)" as fontcolorbluefuncfontstringexecCodeerror {
    }
}

"bridge.InstanceCreator" <|- - "xvm.HXVMCreator"
"xvm.codec" <|- - "xvm.hexCodec"
"bridge.InstanceCreator" <|- - "xvm.xvmCreator"
"bridge.Instance" <|- - "xvm.xvmInstance"
"bridge.InstanceCreator" <|- - "xvm.xvmInterpCreator"

"__builtin__.string" #.. "bridge.ContractType"
"bridge.<font color=blue>func</font>(*InstanceCreatorConfig) (InstanceCreator, error)" #.. "bridge.NewInstanceCreatorFunc"
"contract.<font color=blue>func</font>(*ManagerConfig) (Manager, error)" #.. "contract.NewManagerFunc"
"contract.<font color=blue>func</font>(KContext) (*Response, error)" #.. "contract.KernMethod"
"xvm.<font color=blue>func</font>([]byte, string) error" #.. "xvm.compileFunc"
"xvm.fontcolorbluefuncfontstringexecCodeerror" #.. "xvm.makeExecCodeFunc"
@enduml

PlantUML version 1.2022.5(Sat Apr 30 18:55:52 CST 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: zh
Country: CN
--></g></svg>